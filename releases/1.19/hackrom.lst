
; 64tass Turbo Assembler Macro V1.53.1584 listing file
; 64tass --m65xx --nostart -Wall -Wno-implied-reg -L../.build/hackrom.lst -o../.build/hackrom.rom "-DVERSION=\"1.19\"" hackrom.s65
; Fri Jul 27 22:23:04 2018

;Offset	;PC	;Hex		;Monitor	;Source

;******  Command line definitions

="1.19"						VERSION="1.19"

;******  Processing input file: hackrom.s65

=true						X_ROM_HEAD = true
=false						X_HACK_HEAD = false
=false						X_BASE = false
=false						X_BREAK = false
=true						X_CLOSE = true
=false						X_CONCAT = false
=true						X_DEDIT = true
=false						X_DES = false
=false						X_DFILL = false
=true						X_DLOAD = true
=false						X_DMAP = false
=true						X_DRUN = true
=true						X_ECHO = true
=false						X_EDITID = false
=false						X_FBACKUP = false
=false						X_FCMP = false
=false						X_FCOPY = false
=false						X_FCRC = false
=false						X_FDELETE = false
=false						X_FDIS = false
=true						X_FORMAT = true
=false						X_GAPS = false
=false						X_HBREAK = false
=false						X_IDEDIT = false
=true						X_KEYLIST = true
=true						X_KEYLOAD = true
=true						X_KEYSAVE = true
=true						X_LOADIDS = true
=true						X_LVECTORS = true
=true						X_MCMP = true
=true						X_MCOPY = true
=false						X_MCRC = false
=true						X_MDIS = true
=true						X_MEM = true
=true						X_MFILL = true
=true						X_MSEARCH = true
=true						X_MSWAP = true
=true						X_PBUFF = true
=false						X_PENABLE = false
=true						X_PIDS = true
=true						X_RECOVER = true
=false						X_RFSMAKE = false
=true						X_RINFO = true
=true						X_RLIST = true
=true						X_RLOAD = true
=true						X_ROFF = true
=true						X_RON = true
=true						X_RSAVE = true
=false						X_SECTLOAD = false
=false						X_SECTSAVE = false
=true						X_SEND = true
=false						X_SPOOLDIS = false
=false						X_SRLOAD = false
=false						X_SRREAD = false
=false						X_SRSAVE = false
=false						X_SRWRITE = false
=true						X_TOUCH = true
=true						X_VERIFY = true
=false						WATFORD	= false
=true						ACORN	= true
=";"						IFS	=	";"
=false						DFS	=	WATFORD
=25						TUBE_CLAIM_ID = 25
=$ffee						oswrch = $ffee
=$ffe7						osnewl = $ffe7
=$ffb9						osrdrm = $FFB9
=$ffc2						gsinit = $FFC2
=$ffc5						gsread = $FFC5
=$ffdd						osfile = $FFDD
=$fff4						osbyte=$fff4
=$0f						romid_rom_mask  = %00001111     ;ROM slot index
=$40						romid_tube_mask = %01000000     ;bit 6 - set if Tube parasite RAM
>0070						                .byte ?         ;$70
>0071						                .byte ?         ;$71
.0072						toggle:
>0072						                .byte ?         ;$72
>0073						                .byte ?         ;$73
.0074						tmp:
.0074						mfbuf:
>0074						                .byte ?         ;$74
.0075						tmp2:
>0075						                .byte ?         ;$75
.0076						tmp5:
>0076						                .byte ?         ;$76
.0077						tmp4:
.0077						tmpx:
>0077						                .byte ?         ;$77
.0078						tmpy:
>0078						                .byte ?         ;$78
.0079						romid:
>0079						                .byte ?         ;$79
.007a						tmpscrlo:
>007a						                .byte ?         ;$7a
.007b						tmpscrhi:
>007b						                .byte ?         ;$7b
.007c						byte:
.007c						poslo:
>007c						                .byte ?         ;$7c
.007d						poshi:
>007d						                .byte ?         ;$7d
.007e						tmp3:
.007e						tmpposlo:
>007e						                .byte ?         ;$7e
.007f						tmpposhi:
.007f						dedpl:
>007f						                .byte ?         ;$7f
.0080						control:
.0080						screenlo:
.0080						numlo:
>0080						                .byte ?         ;$80
.0081						shift:
.0081						screenhi:
.0081						numhi:
.0081						totrk:
>0081						                .byte ?         ;$81
.0082						fromtrk:
>0082						                .byte ?         ;$82
>0083						                .byte ?         ;$83
.0084						param:
>0084						                .byte ?         ;$84
>0085						                .byte ?         ;$85
>0086						                .byte ?         ;$86
>0087						                .byte ?         ;$87
>0088						                .byte ?         ;$88
>0089						                .byte ?         ;$89
>008a						                .byte ?         ;$8a
>008b						                .byte ?         ;$8b
>008c						                .byte ?         ;$8c
>008d						                .byte ?         ;$8d
>008e						                .byte ?         ;$8e
>008f						                .byte ?         ;$8f
.0074						membuf:
>0074						                .fill 8,?
.0087						block:
>0087						                .fill 8,?
.0080						oldclibuf:
>0080						                .fill 4,?
.0084						clibuf:
>0084						                .fill 8,?
.0070						romhead_xtab:
.0070						romhead_comrun:
>0070						                .word ?
.0072						romhead_mstmpy:
.0072						romhead_htmp:
>0072						                .byte ?
.0073						romhead_helpind:
>0073						                .word ?
.0075						romhead_helpind2:
>0075						                .word ?
>0077						                .byte ?
.0078						romhead_xtmp:
>0078						                .byte ?
.0079						romhead_comprint:
>0079						                .byte ?
.007a						romhead_cpflag:
>007a						                .byte ?
.0070						discom_tmpbuf:
>0070						                .word ?
.0070						common_hdinc:
.0070						common_dhinc:
>0070						                .fill 4,?
>0074						                .byte ?
>0075						                .byte ?
>0076						                .byte ?
>0077						                .byte ?
>0078						                .byte ?
>0079						                .byte ?
>007a						                .byte ?
>007b						                .byte ?
>007c						                .byte ?
>007d						                .byte ?
>007e						                .byte ?
>007f						                .byte ?
>0080						                .byte ?
>0081						                .byte ?
>0082						                .byte ?
>0083						                .byte ?
>0084						                .byte ?
>0085						                .byte ?
>0086						                .byte ?
>0087						                .byte ?
>0088						                .byte ?
>0089						                .byte ?
>008a						                .byte ?
>008b						                .byte ?
.008c						common_ptrDH:
.008c						common_ptrHD:
>008c						                .word ?
.008e						common_dhbits:
.008e						common_hdbits:
>008e						                .byte ?
.0070						common_newy:
>0070						                .byte ?
.0071						common_endstr:
>0071						                .byte ?
.0070						mem_tmpop:
>0070						                .byte ?
.0071						mem_tmpam:
>0071						                .byte ?
.0072						mem_tmplen:
>0072						                .byte ?
.0073						mem_display:
>0073						                .byte ?
>0074						                .byte ?
>0075						                .byte ?
>0076						                .byte ?
>0077						                .byte ?
>0078						                .byte ?
>0079						                .byte ?
>007a						                .byte ?
>007b						                .byte ?
>007c						                .byte ?
>007d						                .byte ?
>007e						                .byte ?
>007f						                .byte ?
>0080						                .byte ?
>0081						                .byte ?
.0082						mem_tmpblock:
>0082						                .fill 8,?
.008a						mem_xpos:
>008a						                .byte ?
.008b						mem_hmode:
>008b						                .byte ?
.0070						dedit_dtrk:
>0070						                .byte ?
>0071						                .byte ?
>0072						                .byte ?
>0073						                .byte ?
>0074						                .byte ?
>0075						                .byte ?
>0076						                .byte ?
>0077						                .byte ?
.0078						dedit_sectsizelo:
>0078						                .byte ?
.0079						dedit_sectsizehi:
>0079						                .byte ?
.007a						dedit_resultlo:
>007a						                .byte ?
.007b						dedit_resulthi:
>007b						                .byte ?
.007c						dedit_bytelo:
>007c						                .byte ?
.007d						dedit_bytehi:
>007d						                .byte ?
>007e						                .byte ?
>007f						                .byte ?
>0080						                .byte ?
>0081						                .byte ?
.0082						dedit_input:
>0082						                .byte ?
.0083						dedit_pos:
>0083						                .byte ?
>0084						                .byte ?
>0085						                .byte ?
>0086						                .byte ?
>0087						                .byte ?
>0088						                .byte ?
>0089						                .byte ?
>008a						                .byte ?
>008b						                .byte ?
>008c						                .byte ?
>008d						                .byte ?
>008e						                .byte ?
.008f						dedit_loaded:
>008f						                .byte ?
.0070						discom_dtrk:
>0070						                .byte ?
.0071						discom_dlsect:
>0071						                .byte ?
.0072						discom_dpsect:
>0072						                .byte ?
.0073						discom_type:
>0073						                .byte ?
>0074						                .byte ?
>0075						                .byte ?
>0076						                .byte ?
>0077						                .byte ?
>0078						                .byte ?
>0079						                .byte ?
>007a						                .byte ?
>007b						                .byte ?
>007c						                .byte ?
>007d						                .byte ?
>007e						                .byte ?
>007f						                .byte ?
>0080						                .byte ?
>0081						                .byte ?
>0082						                .byte ?
>0083						                .byte ?
>0084						                .byte ?
>0085						                .byte ?
>0086						                .byte ?
.0087						discom_error:
>0087						                .byte ?
>0088						                .byte ?
>0089						                .byte ?
>008a						                .byte ?
>008b						                .byte ?
>008c						                .byte ?
>008d						                .byte ?
>008e						                .byte ?
.008f						discom_deleted:
>008f						                .byte ?
.0070						lvector_lvectmp:
>0070						                .byte ?
.0070						keycoms_kltmp:
>0070						                .byte ?
.0070						recover_basptr:
>0070						                .word ?
.0070						verify_vnumsects:
>0070						                .byte ?
>0071						                .fill 30,?
.008f						verify_cr:
>008f						                .byte ?
>0070						                .byte ?
>0071						                .byte ?
>0072						                .byte ?
>0073						                .byte ?
>0074						                .byte ?
.0075						pbuff_extvec:
>0075						                .word ?
.0080						format_finctrk:
>0080						                .byte ?
>0081						                .byte ?
>0082						                .byte ?
.0083						format_formstart:
>0083						                .byte ?
>0070						                .fill $b,?
.007b						memcom_filltmpy1:
>007b						                .byte ?
.007c						memcom_filltmpy2:
>007c						                .byte ?
>007d						                .byte ?
>007e						                .byte ?
>007f						                .byte ?
>0080						                .byte ?
>0081						                .byte ?
>0082						                .byte ?
>0083						                .byte ?
>0084						                .byte ?
>0085						                .byte ?
.0086						memcom_mmtmp:
>0086						                .byte ?
.0074						memsrc:
>0074						                .word ?
.0076						memlen:
>0076						                .word ?
.0078						memdest:
>0078						                .word ?
.007a						memsrom:
>007a						                .byte ?
.007b						memdrom:
>007b						                .byte ?
.0074						mffrom:
>0074						                .word ?
.0076						mfto:
>0076						                .word ?
.0078						mfdata:
>0078						                .word ?
.007a						mfbank:
>007a						                .byte ?
.007b						mflen:
>007b						                .byte ?
.0087						mmss:
>0087						                .word ?
.0089						mmsl:
>0089						                .word ?
.008b						mmds:
>008b						                .word ?
.008d						mmsr:
>008d						                .byte ?
.008e						mmdr:
>008e						                .byte ?
.0087						mc1s:
>0087						                .word ?
.0089						mclen:
>0089						                .word ?
.008b						mc2s:
>008b						                .word ?
.008d						mc1r:
>008d						                .byte ?
.008e						mc2r:
>008e						                .byte ?
.0087						ms1s:
>0087						                .word ?
.0089						mslen:
>0089						                .word ?
.008b						ms2s:
>008b						                .word ?
.008d						ms1r:
>008d						                .byte ?
.008e						ms2r:
>008e						                .byte ?
.0087						mfms:
>0087						                .word ?
.0089						mfml:
>0089						                .word ?
.008b						mfd:
>008b						                .word ?
.008d						mfmr:
>008d						                .byte ?
.008e						mfdl:
>008e						                .byte ?
.0087						mSms:
>0087						                .word ?
.0089						mSml:
>0089						                .word ?
.008b						mSd:
>008b						                .word ?
.008d						mSmr:
>008d						                .byte ?
.008e						mSdl:
>008e						                .byte ?
=133						ptab= param+1
=$20						numzpage = $20
.02ee						osfileb:
.039f						stacksave:
>039f						                .byte ?
.03a0						comnum:
>03a0						                .byte ?
.03a1						pbuffon:
>03a1						                .byte ?
.0880						pbufftab:
>0880						                .fill 16,?
.0890						numroms:
>0890						                .byte ?
.0a00						buffer1:
.0a00						formidblk:
>0a00						                .fill 128,?
.0a80						buffer3:
>0a80						                .fill 128,?
.6000						buffer2:
=$1046						drive_addr = $1046

;******  Processing file: romhead.s65

.8000						send_poke:
.8000		8e 30 fe	stx $fe30	                STX	$FE30	;*SEND
.8003		4c 47 80	jmp $8047	                JMP	service	; Service entry
>8006		82				                .byte	$82	; ROM type
>8007		19				                .byte	headcopy-$8000	; Copyright ptr
>8008		01				                .byte	$01	; Version
.8009						headtitle:
>8009		48 61 63 6b 65 72 73 20		                .text	"Hackers ROM"
>8011		52 4f 4d
>8014		00				                .byte	0	; Title
>8015		31 2e 31 39			                .text	VERSION	; Version string
.8019						headcopy:
>8019		00				                .byte	0
>801a		28 43 29 20 4a 61 6d 65		                .text	"(C) James Bonfield & Stephen Youell 1993"
>8022		73 20 42 6f 6e 66 69 65 6c 64 20 26 20 53 74 65
>8032		70 68 65 6e 20 59 6f 75 65 6c 6c 20 31 39 39 33
>8042		00				                .byte	0	; Copyright string
>8043		00 00				                .word	0	; Tube address
>8045		00 00				                .word	0
.8047						service:
.8047		48		pha		                PHA
.8048		8a		txa		                TXA
.8049		48		pha		                PHA
.804a		98		tya		                TYA
.804b		48		pha		                PHA
.804c		a2 1f		ldx #$1f	                LDX	#numzpage-1
.804e						heloop0:
.804e		b5 70		lda $70,x	                LDA	$70,X
.8050		48		pha		                PHA
.8051		ca		dex		                DEX
.8052		10 fa		bpl $804e	                BPL	heloop0
.8054		ba		tsx		                TSX
.8055		bd 23 01	lda $0123,x	                LDA	$103+numzpage,X
.8058		c9 04		cmp #$04	                CMP	#$04
.805a		d0 03		bne $805f	                BNE	notcommand
.805c		20 61 82	jsr $8261	                JSR	command
.805f						notcommand:
.805f		c9 09		cmp #$09	                CMP	#$09
.8061		f0 1f		beq $8082	                BEQ	help
.8063		c9 03		cmp #$03	                CMP	#$03
.8065		d0 0b		bne $8072	                BNE	romquit
.8067		a9 00		lda #$00	                LDA	#$00
.8069		8d a1 03	sta $03a1	                STA	pbuffon
.806c		20 3d 82	jsr $823d	                JSR	dispheadtitle
.806f		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.8072						romquit:
.8072		a2 00		ldx #$00	                LDX	#$00
.8074						heloop1:
.8074		68		pla		                PLA
.8075		95 70		sta $70,x	                STA	$70,X
.8077		e8		inx		                INX
.8078		e0 20		cpx #$20	                CPX	#numzpage
.807a		90 f8		bcc $8074	                BCC	heloop1
.807c		68		pla		                PLA
.807d		a8		tay		                TAY
.807e		68		pla		                PLA
.807f		aa		tax		                TAX
.8080		68		pla		                PLA
.8081		60		rts		                RTS
.8082						help:
.8082		b1 f2		lda ($f2),y	                LDA	($F2),Y  ;get command line char
.8084		c9 0d		cmp #$0d	                CMP	#$0D     ;EOL?
.8086		d0 1f		bne $80a7	                BNE	spechelp ;taken if EOL
.8088		20 e7 ff	jsr $ffe7	                JSR	osnewl   ;newline
.808b		20 3d 82	jsr $823d	                JSR	dispheadtitle ;"Hackers ROM x.xx"
.808e		a2 00		ldx #$00	                LDX	#0
.8090						topic2:
.8090		20 35 82	jsr $8235	                JSR	indent2 ;2 chars
.8093						topic:
.8093		bd fe 81	lda $81fe,x	                LDA	subjects,X ;MEMORY, DISC, etc.
.8096		f0 06		beq $809e	                BEQ	endtopic   ;taken if current topic done
.8098		20 ee ff	jsr $ffee	                JSR	$FFEE      ;print the char
.809b		e8		inx		                INX                ;next char
.809c		d0 f5		bne $8093	                BNE	topic      ;JMP, in effect
.809e						endtopic:
.809e		20 e7 ff	jsr $ffe7	                JSR	osnewl     ;newline
.80a1		e8		inx		                INX                ;next char
.80a2		bd fe 81	lda $81fe,x	                LDA	subjects,X ;check first char of next subject
.80a5		10 e9		bpl $8090	                BPL	topic2     ;taken if more subjects to go
.80a7						spechelp:
.80a7		20 ad 80	jsr $80ad	                JSR	spechelp2
.80aa		4c 72 80	jmp $8072	                JMP	romquit
.80ad						spechelp2:
.80ad		a9 fe		lda #$fe	                LDA	#<subjects
.80af		85 70		sta $70		                STA	romhead_xtab+0
.80b1		a9 81		lda #$81	                LDA	#>subjects
.80b3		85 71		sta $71		                STA	romhead_xtab+1
.80b5		a9 00		lda #$00	                LDA	#$00
.80b7		85 7a		sta $7a		                STA	romhead_cpflag  ;00 = print subject help
.80b9		98		tya		                TYA
.80ba		48		pha		                PHA
.80bb		20 87 82	jsr $8287	                JSR	matchstr
.80be		90 1f		bcc $80df	                BCC	gospechelp ;taken if *HELP subject was matched
.80c0		68		pla		                PLA
.80c1		a8		tay		                TAY
.80c2		20 55 82	jsr $8255	                JSR	mchcomm
.80c5		90 01		bcc $80c8	                BCC	sphelpok ;taken if * command name was matched
.80c7		60		rts		                RTS
.80c8						sphelpok:
.80c8		86 79		stx $79		                STX	romhead_comprint ;save command to print
.80ca		a9 ff		lda #$ff	                LDA	#$FF
.80cc		85 7a		sta $7a		                STA	romhead_cpflag  ;FF = print specific command help
.80ce		48		pha		                PHA
.80cf		a5 79		lda $79		                LDA	romhead_comprint ;get command to print
.80d1		a2 ff		ldx #$ff	                LDX	#$FF
.80d3						sphlp:
.80d3		e8		inx		                INX             ;
.80d4		dd 30 82	cmp $8230,x	                CMP	psyntab,X ;compare
.80d7		90 05		bcc $80de	                BCC	goshelp   ;taken if command < psyntab entry
.80d9		e0 05		cpx #$05	                CPX	#$05      ;max 5 psyntab entries
.80db		d0 f6		bne $80d3	                BNE	sphlp     ;taken if table exhausted, I think??
.80dd		e8		inx		                INX
.80de						goshelp:
.80de		ca		dex		                DEX             ;X!=0 at this point, since psyntab
.80df						gospechelp:
.80df		68		pla		                PLA
.80e0		8a		txa		                TXA             ;get command
.80e1		48		pha		                PHA             ;save command
.80e2		20 e7 ff	jsr $ffe7	                JSR	osnewl
.80e5		20 3d 82	jsr $823d	                JSR	dispheadtitle ;"Hackers ROM x.xx"
.80e8		20 e7 ff	jsr $ffe7	                JSR	osnewl
.80eb		68		pla		                PLA             ;get subject index
.80ec		0a		asl a		                ASL	A       ;get subject*2
.80ed		aa		tax		                TAX             ;
.80ee		bd 1c 82	lda $821c,x	                LDA	subjtab,X
.80f1		85 73		sta $73		                STA	romhead_helpind
.80f3		bd 1d 82	lda $821d,x	                LDA	subjtab+1,X
.80f6		85 74		sta $74		                STA	romhead_helpind+1
.80f8		bd 27 82	lda $8227,x	                LDA	syntab+1,X
.80fb		85 76		sta $76		                STA	romhead_helpind2+1
.80fd		bd 26 82	lda $8226,x	                LDA	syntab,X
.8100		85 75		sta $75		                STA	romhead_helpind2
.8102		8a		txa		                TXA             ;get subject*2
.8103		4a		lsr a		                LSR	A       ;get subject
.8104		aa		tax		                TAX
.8105		bd 30 82	lda $8230,x	                LDA	psyntab,X ;get syntax entry again
.8108		aa		tax		                TAX               ;
.8109		a0 ff		ldy #$ff	                LDY	#$FF      ;
.810b		20 35 82	jsr $8235	                JSR	indent2   ;
.810e						helploop:
.810e						nh:
.810e		c8		iny		                INY
.810f		a5 7a		lda $7a		                LDA	romhead_cpflag
.8111		18		clc		                CLC
.8112		69 01		adc #$01	                ADC	#$01    ;C set if printing specific command
.8114		b1 73		lda ($73),y	                LDA	(romhead_helpind),Y ;get first char of subject
.8116		10 05		bpl $811d	                BPL	norq        ;taken if that subject is valid
.8118		a9 7f		lda #$7f	                lda #127
.811a		4c 37 82	jmp $8237	                jmp oswrchx2
.811d						norq:
.811d		f0 0c		beq $812b	                BEQ	nh2      ;???
.811f		90 04		bcc $8125	                BCC	showcom  ;taken if printing help for all
.8121		e4 79		cpx $79		                CPX	romhead_comprint ;is current command the command of
.8123		d0 e9		bne $810e	                BNE	nh       ;taken if not the command of interest
.8125						showcom:
.8125		20 ee ff	jsr $ffee	                JSR	$FFEE
.8128		4c 0e 81	jmp $810e	                JMP	nh
.812b						nh2:
.812b		98		tya		                TYA
.812c		48		pha		                PHA
.812d		8a		txa		                TXA
.812e		48		pha		                PHA
.812f		bd eb 83	lda $83eb,x	                LDA	helptab,X
.8132		85 78		sta $78		                STA	romhead_xtmp
.8134		f0 50		beq $8186	                BEQ	nextcom
.8136		10 11		bpl $8149	                BPL	go
.8138		29 7f		and #$7f	                AND	#$7F
.813a		85 78		sta $78		                STA	romhead_xtmp
.813c		38		sec		                SEC
.813d		a5 75		lda $75		                LDA	romhead_helpind2
.813f		e5 78		sbc $78		                SBC	romhead_xtmp
.8141		85 75		sta $75		                STA	romhead_helpind2
.8143		b0 02		bcs $8147	                BCS	hover
.8145		c6 76		dec $76		                DEC	romhead_helpind2+1
.8147						hover:
.8147		a5 78		lda $78		                LDA	romhead_xtmp
.8149						go:
.8149		a8		tay		                TAY
.814a		a5 7a		lda $7a		                LDA	romhead_cpflag
.814c		f0 04		beq $8152	                BEQ	cpok
.814e		e4 79		cpx $79		                CPX	romhead_comprint
.8150		d0 29		bne $817b	                BNE	skipcom
.8152						cpok:
.8152		a9 20		lda #$20	                LDA	#' '
.8154		20 ee ff	jsr $ffee	                JSR	$FFEE
.8157						again:
.8157		88		dey		                DEY
.8158		b1 75		lda ($75),y	                LDA	(romhead_helpind2),Y
.815a		10 18		bpl $8174	                BPL	nh4
.815c		aa		tax		                TAX
.815d		bd 89 83	lda $8389,x	                LDA	toktab-$80,X
.8160		85 72		sta $72		                STA	romhead_htmp
.8162		bd 88 83	lda $8388,x	                LDA	toktab-$81,X
.8165		aa		tax		                TAX
.8166		4c 6c 81	jmp $816c	                JMP	nh5
.8169						nh3:
.8169		20 ee ff	jsr $ffee	                JSR	$FFEE
.816c						nh5:
.816c		bd 2b 84	lda $842b,x	                LDA	tokens,X
.816f		e8		inx		                INX
.8170		e4 72		cpx $72		                CPX	romhead_htmp
.8172		d0 f5		bne $8169	                BNE	nh3
.8174						nh4:
.8174		20 ee ff	jsr $ffee	                JSR	$FFEE
.8177		c0 00		cpy #$00	                CPY	#0
.8179		d0 dc		bne $8157	                BNE	again
.817b						skipcom:
.817b		18		clc		                CLC
.817c		a5 78		lda $78		                LDA	romhead_xtmp
.817e		65 75		adc $75		                ADC	romhead_helpind2
.8180		85 75		sta $75		                STA	romhead_helpind2
.8182		90 02		bcc $8186	                BCC	hover2
.8184		e6 76		inc $76		                INC	romhead_helpind2+1
.8186						hover2:
.8186						nextcom:
.8186		68		pla		                PLA
.8187		aa		tax		                TAX
.8188		68		pla		                PLA
.8189		a8		tay		                TAY
.818a		a5 7a		lda $7a		                LDA	romhead_cpflag
.818c		f0 04		beq $8192	                BEQ	docr
.818e		e4 79		cpx $79		                CPX	romhead_comprint
.8190		d0 06		bne $8198	                BNE	nocr
.8192						docr:
.8192		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.8195		20 35 82	jsr $8235	                JSR	indent2
.8198						nocr:
.8198		e8		inx		                INX
.8199		4c 0e 81	jmp $810e	                JMP	helploop
.819c						synerr:
.819c		ad 0e 02	lda $020e	                LDA	$20E
.819f		48		pha		                PHA
.81a0		ad 0f 02	lda $020f	                LDA	$20F
.81a3		48		pha		                PHA
.81a4		a9 d8		lda #$d8	                LDA	#<oswrch_con
.81a6		8d 0e 02	sta $020e	                STA	$20E
.81a9		a9 81		lda #$81	                LDA	#>oswrch_con
.81ab		8d 0f 02	sta $020f	                STA	$20F
.81ae		a9 00		lda #$00	                LDA	#$00
.81b0		8d 00 01	sta $0100	                STA	$0100
.81b3		ae a0 03	ldx $03a0	                LDX	comnum
.81b6		20 c8 80	jsr $80c8	                JSR	sphelpok
.81b9		a9 00		lda #$00	                LDA	#$00
.81bb		8d 00 01	sta $0100	                STA	$100
.81be		a9 01		lda #$01	                LDA	#E_SYNERR
.81c0		68		pla		                PLA
.81c1		8d 0f 02	sta $020f	                STA	$20F
.81c4		68		pla		                PLA
.81c5		8d 0e 02	sta $020e	                STA	$20E
.81c8		a2 00		ldx #$00	                LDX	#$00
.81ca						xheloop1:
.81ca		68		pla		                PLA
.81cb		95 70		sta $70,x	                STA	$70,X
.81cd		e8		inx		                INX
.81ce		e0 20		cpx #$20	                CPX	#numzpage
.81d0		90 f8		bcc $81ca	                BCC	xheloop1
.81d2		68		pla		                PLA
.81d3		68		pla		                PLA
.81d4		68		pla		                PLA
.81d5		4c 00 01	jmp $0100	                JMP	$100
.81d8						oswrch_con:
.81d8		08		php		                PHP
.81d9		8c 01 01	sty $0101	                STY	$101
.81dc		c9 0d		cmp #$0d	                CMP	#$0D
.81de		f0 08		beq $81e8	                BEQ	oswrch_con_ok
.81e0		c9 0a		cmp #$0a	                CMP	#$0A
.81e2		f0 04		beq $81e8	                BEQ	oswrch_con_ok
.81e4		c9 1e		cmp #$1e	                CMP	#30
.81e6		90 11		bcc $81f9	                BCC	oswrch_con_exit
.81e8						oswrch_con_ok:
.81e8		ac 00 01	ldy $0100	                LDY	$100
.81eb		99 02 01	sta $0102,y	                STA	$102,Y
.81ee		48		pha		                PHA
.81ef		a9 00		lda #$00	                LDA	#$00
.81f1		99 03 01	sta $0103,y	                STA	$103,Y
.81f4		68		pla		                PLA
.81f5		c8		iny		                INY
.81f6		8c 00 01	sty $0100	                STY	$100
.81f9						oswrch_con_exit:
.81f9		ac 01 01	ldy $0101	                LDY	$101
.81fc		28		plp		                PLP
.81fd		60		rts		                RTS
=true						MEMORY_COMS = X_MEM || X_MDIS || X_MCOPY || X_MSWAP || X_MCMP || X_MFILL || X_MSEARCH || X_MCRC
=true						DISC_COMS = X_DEDIT || X_IDEDIT || X_FORMAT || X_SECTLOAD || X_SECTSAVE || X_LOADIDS || X_PIDS || X_VERIFY || X_DMAP || X_DFILL || X_FBACKUP || X_PENABLE || X_GAPS
=true						FILE_COMS = X_DLOAD || X_DRUN || X_FDELETE || X_FCRC || X_TOUCH || X_CONCAT || X_FCOPY || X_FDIS || X_SPOOLDIS || X_CLOSE || X_DES || X_FCMP
=true						ROM_COMS = X_RLIST || X_RON || X_ROFF || X_RLOAD || X_RSAVE || X_RINFO || X_SRLOAD || X_SRSAVE || X_SRREAD || X_SRWRITE || X_RFSMAKE || X_SEND
=true						GENERAL_COMS = 	X_PBUFF || X_LVECTORS || X_KEYLIST || X_KEYSAVE || X_KEYLOAD || X_BASE || X_BREAK || X_HBREAK || X_RECOVER || X_ECHO
.81fe						subjects:
>81fe		4d 45 4d 4f 52 59 00		                .text	"MEMORY",0
>8205		44 49 53 43 00			                .text	"DISC",0
>820a		46 49 4c 45 00			                .text	"FILE",0
>820f		52 4f 4d 00			                .text	"ROM",0
>8213		47 45 4e 45 52 41 4c 00		                .text	"GENERAL",0
>821b		ff				                .byte	$FF
.821c						subjtab:
>821c		ec 82				                .word	memcomm
>821e		16 83				                .word	disccomm
>8220		39 83				                .word	filecomm
>8222		52 83				                .word	romcomm
>8224		7a 83				                .word	gencomm
.8226						syntab:
>8226		bc 84				                .word	h_mem_coms
>8228		e3 84				                .word	h_disc_coms
>822a		17 85				                .word	h_file_coms
>822c		31 85				                .word	h_rom_coms
>822e		41 85				                .word	h_gen_coms
.8230						psyntab:
>8230		00				                .byte	memhelp-helptab
>8231		07				                .byte	dischelp-helptab
>8232		0c				                .byte	filehelp-helptab
>8233		10				                .byte	romhelp-helptab
>8234		17				                .byte	genhelp-helptab
.8235						indent2:
.8235		a9 20		lda #$20	                LDA	#' '
.8237						oswrchx2:
.8237		20 ee ff	jsr $ffee	                JSR	$FFEE
.823a		4c ee ff	jmp $ffee	                JMP	$FFEE
.823d						dispheadtitle:
.823d		a0 02		ldy #$02	                LDY	#2
.823f		a2 00		ldx #$00	                LDX	#0
.8241						headloop0:
.8241		bd 09 80	lda $8009,x	                LDA	headtitle,X
.8244		f0 06		beq $824c	                BEQ	hzero
.8246						headloop1:
.8246		20 ee ff	jsr $ffee	                JSR	$FFEE
.8249		e8		inx		                INX
.824a		d0 f5		bne $8241	                BNE	headloop0
.824c						hzero:
.824c		a9 20		lda #$20	                LDA	#$20
.824e		88		dey		                DEY
.824f		d0 f5		bne $8246	                BNE	headloop1
.8251		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.8254		60		rts		                RTS
.8255						mchcomm:
.8255		a9 ec		lda #$ec	                LDA	#<comm
.8257		85 70		sta $70		                STA	romhead_xtab+0
.8259		a9 82		lda #$82	                LDA	#>comm
.825b		85 71		sta $71		                STA	romhead_xtab+1
.825d		4c 87 82	jmp $8287	                JMP	matchstr
.8260						endcom:
.8260		60		rts		                RTS
.8261						command:
.8261		20 55 82	jsr $8255	                JSR	mchcomm
.8264		b0 fa		bcs $8260	                BCS	endcom
.8266		8a		txa		                TXA
.8267		8d a0 03	sta $03a0	                STA	comnum
.826a		0a		asl a		                ASL	A
.826b		aa		tax		                TAX
.826c		bd af 83	lda $83af,x	                LDA	comtab,X
.826f		85 70		sta $70		                STA	romhead_comrun
.8271		bd b0 83	lda $83b0,x	                LDA	comtab+1,X
.8274		85 71		sta $71		                STA	romhead_comrun+1
.8276		ba		tsx		                TSX
.8277		8e 9f 03	stx $039f	                STX	stacksave
.827a		20 84 82	jsr $8284	                JSR	runcom
.827d		a9 00		lda #$00	                LDA	#$00
.827f		ba		tsx		                TSX
.8280		9d 25 01	sta $0125,x	                STA	$105+numzpage,X
.8283		60		rts		                RTS
.8284						runcom:
.8284		6c 70 00	jmp ($0070)	                JMP	(romhead_comrun)
.8287						matchstr:
.8287		a2 ff		ldx #$ff	                LDX	#$FF
.8289		b1 f2		lda ($f2),y	                LDA	($F2),Y
.828b		c9 5f		cmp #$5f	                CMP	#'_'
.828d		d0 01		bne $8290	                BNE	msloop2
.828f		c8		iny		                INY
.8290						msloop2:
.8290		e8		inx		                INX
.8291		98		tya		                TYA
.8292		48		pha		                PHA
.8293						msloop:
.8293		b1 f2		lda ($f2),y	                LDA	($F2),Y
.8295		20 f0 85	jsr $85f0	                JSR	capitalise
.8298		84 72		sty $72		                STY	romhead_mstmpy
.829a		a0 00		ldy #$00	                LDY	#$00
.829c		d1 70		cmp ($70),y	                CMP	(romhead_xtab),Y
.829e		d0 0b		bne $82ab	                BNE	msnext
.82a0		a4 72		ldy $72		                LDY	romhead_mstmpy
.82a2		e6 70		inc $70		                INC	romhead_xtab+0
.82a4		d0 02		bne $82a8	                BNE	msskip1
.82a6		e6 71		inc $71		                INC	romhead_xtab+1
.82a8						msskip1:
.82a8		c8		iny		                INY
.82a9		d0 e8		bne $8293	                BNE	msloop
.82ab						msnext:
.82ab		c9 2e		cmp #$2e	                CMP	#'.'
.82ad		d0 04		bne $82b3	                BNE	nosuccess
.82af		e6 72		inc $72		                INC	romhead_mstmpy
.82b1		d0 2e		bne $82e1	                BNE	mssuccess
.82b3						nosuccess:
.82b3		c9 0d		cmp #$0d	                CMP	#$0D
.82b5		f0 04		beq $82bb	                BEQ	mschkz
.82b7		c9 20		cmp #$20	                CMP	#' '
.82b9		d0 04		bne $82bf	                BNE	msnfail
.82bb						mschkz:
.82bb		b1 70		lda ($70),y	                LDA	(romhead_xtab),Y
.82bd		f0 22		beq $82e1	                BEQ	mssuccess
.82bf						msnfail:
.82bf		b1 70		lda ($70),y	                LDA	(romhead_xtab),Y
.82c1		f0 07		beq $82ca	                BEQ	msnfail2
.82c3		c9 ff		cmp #$ff	                CMP	#$FF
.82c5		f0 17		beq $82de	                BEQ	msfail
.82c7		c8		iny		                INY
.82c8		d0 f5		bne $82bf	                BNE	msnfail
.82ca						msnfail2:
.82ca		c8		iny		                INY
.82cb		b1 70		lda ($70),y	                LDA	(romhead_xtab),Y
.82cd		30 f0		bmi $82bf	                BMI	msnfail
.82cf		98		tya		                TYA
.82d0		18		clc		                CLC
.82d1		65 70		adc $70		                ADC	romhead_xtab+0
.82d3		85 70		sta $70		                STA	romhead_xtab+0
.82d5		90 02		bcc $82d9	                BCC	msskip2
.82d7		e6 71		inc $71		                INC	romhead_xtab+1
.82d9						msskip2:
.82d9		68		pla		                PLA
.82da		a8		tay		                TAY
.82db		4c 90 82	jmp $8290	                JMP	msloop2
.82de						msfail:
.82de		68		pla		                PLA
.82df		38		sec		                SEC
.82e0		60		rts		                RTS
.82e1						mssuccess:
.82e1		e6 70		inc $70		                INC	romhead_xtab+0
.82e3		90 02		bcc $82e7	                BCC	msskip3
.82e5		e6 71		inc $71		                INC	romhead_xtab+1
.82e7						msskip3:
.82e7		a4 72		ldy $72		                LDY	romhead_mstmpy
.82e9		68		pla		                PLA
.82ea		18		clc		                CLC
.82eb		60		rts		                RTS
.82ec						comm:
.82ec						memcomm:
>82ec		4d 45 4d 00			                .text	"MEM",0
>82f0		4d 44 49 53 00			                .text	"MDIS",0
>82f5		4d 43 4f 50 59 00		                .text	"MCOPY",0
>82fb		4d 53 57 41 50 00		                .text	"MSWAP",0
>8301		4d 43 4d 50 00			                .text	"MCMP",0
>8306		4d 46 49 4c 4c 00		                .text	"MFILL",0
>830c		4d 53 45 41 52 43 48 00		                .text	"MSEARCH",0
>8314		80 00				                .byte	$80,$00
.8316						disccomm:
>8316		44 45 44 49 54 00		                .text	"DEDIT",0
>831c		46 4f 52 4d 41 54 00		                .text	"FORMAT",0
>8323		4c 4f 41 44 49 44 53 00		                .text	"LOADIDS",0
>832b		50 49 44 53 00			                .text	"PIDS",0
>8330		56 45 52 49 46 59 00		                .text	"VERIFY",0
>8337		80 00				                .byte	$80,$00
.8339						filecomm:
>8339		44 4c 4f 41 44 00		                .text	"DLOAD",0
>833f		44 52 55 4e 00			                .text	"DRUN",0
>8344		54 4f 55 43 48 00		                .text	"TOUCH",0
>834a		43 4c 4f 53 45 00		                .text	"CLOSE",0
>8350		80 00				                .byte	$80,$00
.8352						romcomm:
>8352		52 4c 49 53 54 00		                .text	"RLIST",0
>8358		52 4f 4e 00			                .text	"RON",0
>835c		52 4f 46 46 00			                .text	"ROFF",0
>8361		52 4c 4f 41 44 00		                .text	"RLOAD",0
>8367		52 53 41 56 45 00		                .text	"RSAVE",0
>836d		52 49 4e 46 4f 00		                .text	"RINFO",0
>8373		53 45 4e 44 00			                .text	"SEND",0
>8378		80 00				                .byte	$80,$00
.837a						gencomm:
>837a		50 42 55 46 46 00		                .text	"PBUFF",0
>8380		4c 56 45 43 54 4f 52 53		                .text	"LVECTORS",0
>8388		00
>8389		4b 45 59 4c 49 53 54 00		                .text	"KEYLIST",0
>8391		4b 45 59 53 41 56 45 00		                .text	"KEYSAVE",0
>8399		4b 45 59 4c 4f 41 44 00		                .text	"KEYLOAD",0
>83a1		52 45 43 4f 56 45 52 00		                .text	"RECOVER",0
>83a9		45 43 48 4f 00			                .text	"ECHO",0
>83ae		ff				                .byte	$FF
.83af						comtab:
>83af		5c 91				                .word	mempa
>83b1		57 91				                .word	mdispa
>83b3		04 94				                .word	mcopypa
>83b5		0a 94				                .word	mswappa
>83b7		10 94				                .word	mcmppa
>83b9		fe 93				                .word	mfillpa
>83bb		d2 93				                .word	msearchpa
>83bd		69 9b				                .word	deditpa
>83bf		5f a1				                .word	formatpa
>83c1		d8 a2				                .word	loadidspa
>83c3		15 a3				                .word	pidspa
>83c5		8e a3				                .word	verifypa
>83c7		b7 a5				                .word	dloadpa
>83c9		f0 a5				                .word	drunpa
>83cb		f9 a5				                .word	touchpa
>83cd		37 a6				                .word	closepa
>83cf		ef a9				                .word	rlistpa
>83d1		ab a9				                .word	ronpa
>83d3		d7 a9				                .word	roffpa
>83d5		b8 a6				                .word	rloadpa
>83d7		d3 a6				                .word	rsavepa
>83d9		e2 a6				                .word	rinfopa
>83db		eb aa				                .word	sendpa
>83dd		48 ab				                .word	pbuffpa
>83df		9c ae				                .word	lvectorspa
>83e1		4d af				                .word	keylistpa
>83e3		00 b0				                .word	keysavepa
>83e5		f3 af				                .word	keyloadpa
>83e7		0e b0				                .word	recoverpa
>83e9		58 b0				                .word	echopa
.83eb						helptab:
.83eb						memhelp:
>83eb		06				                .byte	$06 ;mem
>83ec		86				                .byte	$86 ;mdis
>83ed		12				                .byte	$12 ;mcopy
>83ee		92				                .byte	$92 ;mswap
>83ef		92				                .byte	$92 ;mcmp
>83f0		0f				                .byte	$0F ;mfill
>83f1		8f				                .byte	$8F ;msearch
.83f2						dischelp:
>83f2		00				                .byte	$00 ;dedit
>83f3		1a				                .byte	$1A ;format
>83f4		08				                .byte	$08 ;loadids
>83f5		06				                .byte	$06 ;pids
>83f6		0c				                .byte	$0C ;verify
.83f7						filehelp:
>83f7		01				                .byte	$01 ;dload
>83f8		81				                .byte	$81 ;drun
>83f9		0f				                .byte	$0F ;touch
>83fa		0a				                .byte	$0A ;close
.83fb						romhelp:
>83fb		00				                .byte	$00 ;rlist
>83fc		03				                .byte	$03 ;ron
>83fd		83				                .byte	$83 ;roff
>83fe		04				                .byte	$04 ;rload
>83ff		84				                .byte	$84 ;rsave
>8400		04				                .byte	$04 ;rinfo
>8401		05				                .byte	$05 ;send
.8402						genhelp:
>8402		04				                .byte	$04 ;pbuff
>8403		00				                .byte	$00 ;lvectors
>8404		08				                .byte	$08 ;keylist
>8405		01				                .byte	$01 ;keysave
>8406		81				                .byte	$81 ;keyload
>8407		00				                .byte	$00 ;recover
>8408		10				                .byte	$10
.8409						toktab:
>8409		00				                .byte	tok0-tokens
>840a		05				                .byte	tok1-tokens
>840b		0a				                .byte	tok2-tokens
>840c		0f				                .byte	tok3-tokens
>840d		14				                .byte	tok4-tokens
>840e		19				                .byte	tok5-tokens
>840f		20				                .byte	tok6-tokens
>8410		25				                .byte	tok7-tokens
>8411		28				                .byte	tok8-tokens
>8412		2e				                .byte	tok9-tokens
>8413		33				                .byte	tok10-tokens
>8414		37				                .byte	tok11-tokens
>8415		3e				                .byte	tok12-tokens
>8416		43				                .byte	tok13-tokens
>8417		46				                .byte	tok14-tokens
>8418		52				                .byte	tok15-tokens
>8419		57				                .byte	tok16-tokens
>841a		60				                .byte	tok17-tokens
>841b		66				                .byte	tok18-tokens
>841c		69				                .byte	tok19-tokens
>841d		6d				                .byte	tok20-tokens
>841e		71				                .byte	tok21-tokens
>841f		77				                .byte	tok22-tokens
>8420		77				                .byte	tok23-tokens
>8421		7d				                .byte	tok24-tokens
>8422		7f				                .byte	tok25-tokens
>8423		81				                .byte	tok26-tokens
>8424		83				                .byte	tok27-tokens
>8425		85				                .byte	tok28-tokens
>8426		87				                .byte	tok29-tokens
>8427		89				                .byte	tok30-tokens
>8428		8b				                .byte	tok31-tokens
>8429		8d				                .byte	tok32-tokens
>842a		91				                .byte	tok33-tokens
.842b						tokens:
.842b						tok0:
>842b		3c 66 73 70 3e			                .text	"<fsp>"
.8430						tok1:
>8430		3c 64 72 76 3e			                .text	"<drv>"
.8435						tok2:
>8435		62 61 6e 6b 3e			                .text	"bank>"
.843a						tok3:
>843a		3c 66 72 6f 6d			                .text	"<from"
.843f						tok4:
>843f		61 64 64 72 3e			                .text	"addr>"
.8444						tok5:
>8444		3c 28 74 6f 29 28 2b		                .text	"<(to)(+"
.844b						tok6:
>844b		3c 28 74 6f 20			                .text	"<(to "
.8450						tok7:
>8450		29 28 2b			                .text	")(+"
.8453						tok8:
>8453		73 74 61 72 74 3e		                .text	"start>"
.8459						tok9:
>8459		6c 65 6e 29 3e			                .text	"len)>"
.845e						tok10:
>845e		64 65 73 74			                .text	"dest"
.8462						tok11:
>8462		74 72 6b 73 29 3e 20		                .text	"trks)> "
.8469						tok12:
>8469		74 72 6b 3e 20			                .text	"trk> "
.846e						tok13:
>846e		74 72 6b			                .text	"trk"
.8471						tok14:
>8471		3c 6e 6f 2e 20 73 65 63		                .text	"<no. sects> "
>8479		74 73 3e 20
.847d						tok15:
>847d		3c 73 65 63 74			                .text	"<sect"
.8482						tok16:
>8482		3c 28 62 79 74 65 29 28		                .text	"<(byte)("""
>848a		22
.848b						tok17:
>848b		73 74 72 69 6e 67		                .text	"string"
.8491						tok18:
>8491		65 6e 64			                .text	"end"
.8494						tok19:
>8494		73 72 63 20			                .text	"src "
.8498						tok20:
>8498		66 73 70 3e			                .text	"fsp>"
.849c						tok21:
>849c		28 62 79 74 65 29		                .text	"(byte)"
.84a2						tok22:
.84a2						tok23:
>84a2		6f 66 66 73 65 74		                .text	"offset"
.84a8						tok24:
>84a8		29 28				                .text	")("
.84aa						tok25:
>84aa		28 3c				                .text	"(<"
.84ac						tok26:
>84ac		3c 28				                .text	"<("
.84ae						tok27:
>84ae		29 3e				                .text	")>"
.84b0						tok28:
>84b0		29 29				                .text	"))"
.84b2						tok29:
>84b2		3e 20				                .text	"> "
.84b4						tok30:
>84b4		20 3c				                .text	" <"
.84b6						tok31:
>84b6		20 28				                .text	" ("
.84b8						tok32:
>84b8		20 2e 2e 2e			                .text	" ..."
.84bc						tok33:
.84bc						h_mem_coms:
.84bc						h_mem:
.84bc						h_mdis:
>84bc		9d 83 9a 20 85 9a		                .byte	$9D,$83,$9A,' ',$85,$9A
.84c2						h_mcopy:
.84c2						h_mswap:
.84c2						h_mcmp:
>84c2		9d 83 20 6f 74 9a 20 83		                .byte	$9D,$83,' ','o','t',$9A,' ',$83
>84ca		20 84 28 9e 8b 9f 8a 86		                .byte	' ',$84,'(',$9E,$8B,$9F,$8A,$86
>84d2		9e 84				                .byte	$9E,$84
.84d4						h_mfill:
.84d4						h_msearch:
>84d4		29 83 9f 3b a0 a1 9c 22		                .byte	')',$83,$9F,IFS,$A0,$A1,$9C,'"'
>84dc		92 91 20 8a 86 9e 84		                .byte	$92,$91,' ',$8A,$86,$9E,$84
.84e3						h_disc_coms:
.84e3						h_dedit:
.84e3						h_idedit:
.84e3						h_format:
>84e3		29 9d 85 20 64 69 9a 8f		                .byte	')',$9D,$85,' ','d','i',$9A,$8F
>84eb		28 9e 65 7a 69 73 20 90		                .byte	'(',$9E,'e','z','i','s',' ',$90
>84f3		28 8c 88 8e 87 8d 20 84		                .byte	'(',$8C,$88,$8E,$87,$8D,' ',$84
>84fb		20 82				                .byte	' ',$82
.84fd						h_loadids:
>84fd		29 82 28 8f 8d 9f 85 3c		                .byte	')',$82,'(',$8F,$8D,$9F,$85,'<'
.8505						h_pids:
>8505		29 82 28 8f 8d 3c		                .byte	')',$82,'(',$8F,$8D,'<'
.850b						h_verify:
>850b		29 45 28 8c 88 8e 87 8d		                .byte	')','E','(',$8C,$88,$8E,$87,$8D
>8513		20 84 20 82			                .byte	' ',$84,' ',$82
.8517						h_file_coms:
.8517						h_dload:
.8517						h_drun:
.8517						h_fdelete:
.8517						h_fcrc:
>8517		81				                .byte	$81
.8518						h_touch:
>8518		85 20 63 65 78 65 9f 85		                .byte	$85,' ','c','e','x','e',$9F,$85
>8520		20 64 61 6f 6c 9f 81		                .byte	' ','d','a','o','l',$9F,$81
.8527						h_close:
>8527		29 3e				                .byte	')','>'
>8529		6c 65 6e 6e 61 68 63		                .text	'lennahc'
>8530		9a				                .byte	$9A
.8531						h_recover:
.8531						h_rom_coms:
.8531						h_rlist:
.8531						h_ron:
.8531						h_roff:
>8531		a1 83 3c			                .byte	$A1,$83,'<'
.8534						h_rload:
.8534						h_rsave:
>8534		81 20 83 3c			                .byte	$81,' ',$83,'<'
.8538						h_rinfo:
>8538		29 a1 83 9a			                .byte	')',$A1,$83,$9A
.853c						h_send:
>853c		3e 92 9f 83 3c			                .byte	'>',$92,$9F,$83,'<'
.8541						h_gen_coms:
.8541						h_pbuff:
>8541		29 a1 83 9a			                .byte	')',$A1,$83,$9A
.8545						h_lvec:
.8545						h_keylist:
>8545		29 a1				                .byte	')',$A1
>8547		3e 73 79 65 6b			                .text	'>syek'
>854c		9a				                .byte	$9A
.854d						h_keysave:
.854d						h_keyload:
>854d		81				                .byte	$81
.854e						h_break:
.854e						h_hbreak:
.854e						h_echo:
>854e		a1 9d 22 92 22 28 96 a0		                .byte	$A1,$9D,'"',$92,'"','(',$96,$A0
>8556		3b a1 29 92 a0 3b a1 96		                .byte	IFS,$A1,')',$92,$A0,IFS,$A1,$96

;******  Return to file: hackrom.s65


;******  Processing file: common.s65

.855e						num:
>855e		30 31 32 33 34 35 36 37		                .text	"0123456789ABCDEF"
>8566		38 39 41 42 43 44 45 46
.856e						letter:
>856e		2e 2e 2e 2e 2e 2e 2e 2e		                .text	"................................ !"
>8576		2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e
>8586		2e 2e 2e 2e 2e 2e 2e 2e 20 21
>8590		22				                .text	'"'
>8591		5f 24 25 26 27 28 29 2a		                .text	"_$%&'()*+,-./0123456789:;<=>?"
>8599		2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a
>85a9		3b 3c 3d 3e 3f
>85ae		40				                .text	"@"
>85af		41 42 43 44 45 46 47 48		                .text	"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
>85b7		49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58
>85c7		59 5a
>85c9		5b 5c 5d 5e 60 23		                .text	"[\]^`#"
>85cf		61 62 63 64 65 66 67 68		                .text	"abcdefghijklmnopqrstuvwxyz{|}~"
>85d7		69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78
>85e7		79 7a 7b 7c 7d 7e
>85ed		7f				                .byte	127
.85ee						cursor2:
>85ee		cf 4b				                .word	$4BCF
.85f0						capitalise:
.85f0		29 7f		and #$7f	                AND	#$7F
.85f2		c9 7b		cmp #$7b	                CMP	#'z'+1
.85f4		b0 06		bcs $85fc	                BCS	nochange
.85f6		c9 61		cmp #$61	                CMP	#'a'
.85f8		90 02		bcc $85fc	                BCC	nochange
.85fa		e9 20		sbc #$20	                SBC	#32
.85fc						nochange:
.85fc		60		rts		                RTS
.85fd						poke6845:
.85fd		8d 00 fe	sta $fe00	                STA	$FE00
.8600		8e 01 fe	stx $fe01	                STX	$FE01
.8603		60		rts		                RTS
.8604						hex_asc:
.8604		48		pha		                PHA
.8605		29 0f		and #$0f	                AND	#$F
.8607		aa		tax		                TAX
.8608		bd 5e 85	lda $855e,x	                LDA	num,X
.860b		a8		tay		                TAY
.860c		68		pla		                PLA
.860d		4a		lsr a		                LSR	A
.860e		4a		lsr a		                LSR	A
.860f		4a		lsr a		                LSR	A
.8610		4a		lsr a		                LSR	A
.8611		aa		tax		                TAX
.8612		bd 5e 85	lda $855e,x	                LDA	num,X
.8615		60		rts		                RTS
.8616						printnumx:
.8616		18		clc		                CLC
.8617						printnum:
.8617		08		php		                PHP
.8618		86 74		stx $74		                STX	tmp
.861a		84 75		sty $75		                STY	tmp2
.861c		a0 00		ldy #$00	                LDY	#$00
.861e		48		pha		                PHA
.861f		4a		lsr a		                LSR	A
.8620		4a		lsr a		                LSR	A
.8621		4a		lsr a		                LSR	A
.8622		4a		lsr a		                LSR	A
.8623		aa		tax		                TAX
.8624		bd 5e 85	lda $855e,x	                LDA	num,X
.8627		91 80		sta ($80),y	                STA	(screenlo),Y
.8629		68		pla		                PLA
.862a		29 0f		and #$0f	                AND	#$0F
.862c		aa		tax		                TAX
.862d		bd 5e 85	lda $855e,x	                LDA	num,X
.8630		c8		iny		                INY
.8631		91 80		sta ($80),y	                STA	(screenlo),Y
.8633		a5 80		lda $80		                LDA	screenlo
.8635		28		plp		                PLP
.8636		69 02		adc #$02	                ADC	#2
.8638		85 80		sta $80		                STA	screenlo
.863a		90 02		bcc $863e	                BCC	pnj
.863c		e6 81		inc $81		                INC	screenhi
.863e						pnj:
.863e		a6 74		ldx $74		                LDX	tmp
.8640		a4 75		ldy $75		                LDY	tmp2
.8642		60		rts		                RTS
.8643						asc_hex:
.8643		8a		txa		                TXA
.8644		20 f5 88	jsr $88f5	                JSR	convert
.8647		0a		asl a		                ASL	A
.8648		0a		asl a		                ASL	A
.8649		0a		asl a		                ASL	A
.864a		0a		asl a		                ASL	A
.864b		85 74		sta $74		                STA	tmp
.864d		98		tya		                TYA
.864e		20 f5 88	jsr $88f5	                JSR	convert
.8651		05 74		ora $74		                ORA	tmp
.8653		60		rts		                RTS
.8654						rdquoted:
.8654						quote:
.8654		c8		iny		                INY
.8655		98		tya		                TYA
.8656		48		pha		                PHA
.8657		88		dey		                DEY
.8658		20 c2 ff	jsr $ffc2	                JSR	gsinit
.865b		84 70		sty $70		                STY	common_newy
.865d		84 71		sty $71		                STY	common_endstr
.865f						quote1:
.865f		20 c5 ff	jsr $ffc5	                JSR	gsread
.8662		b0 0d		bcs $8671	                BCS	quote2
.8664		84 70		sty $70		                STY	common_newy
.8666		a4 71		ldy $71		                LDY	common_endstr
.8668		91 f2		sta ($f2),y	                STA	($F2),Y
.866a		e6 71		inc $71		                INC	common_endstr
.866c		a4 70		ldy $70		                LDY	common_newy
.866e		4c 5f 86	jmp $865f	                JMP	quote1
.8671						quote2:
.8671		e6 70		inc $70		                INC	common_newy
.8673		68		pla		                PLA
.8674		a8		tay		                TAY
.8675		49 ff		eor #$ff	                EOR	#$FF
.8677		18		clc		                CLC
.8678		65 71		adc $71		                ADC	common_endstr
.867a		aa		tax		                TAX
.867b		e8		inx		                INX
.867c		38		sec		                SEC
.867d		a9 00		lda #$00	                LDA	#$00
.867f						rdstrend:
.867f		60		rts		                RTS
.8680						rdstr:
.8680		20 a6 86	jsr $86a6	                JSR	nonspace
.8683		f0 1d		beq $86a2	                BEQ	rdstrfail
.8685		c9 22		cmp #$22	                CMP	#'"'
.8687		f0 cb		beq $8654	                BEQ	rdquoted
.8689		88		dey		                DEY
.868a		98		tya		                TYA
.868b		48		pha		                PHA
.868c		a9 22		lda #$22	                LDA	#'"'
.868e						rdq1:
.868e		88		dey		                DEY
.868f		91 f2		sta ($f2),y	                STA	($F2),Y
.8691		c8		iny		                INY
.8692		c8		iny		                INY
.8693		20 b0 86	jsr $86b0	                JSR	rdstrcom
.8696		d0 f6		bne $868e	                BNE	rdq1
.8698		88		dey		                DEY
.8699		a9 22		lda #$22	                LDA	#'"'
.869b		91 f2		sta ($f2),y	                STA	($F2),Y
.869d		68		pla		                PLA
.869e		a8		tay		                TAY
.869f		88		dey		                DEY
.86a0		d0 b2		bne $8654	                BNE	rdquoted
.86a2						rdstrfail:
.86a2		a2 00		ldx #$00	                LDX	#$00
.86a4		c8		iny		                INY
.86a5		60		rts		                RTS
.86a6						nonspace:
.86a6		88		dey		                DEY
.86a7						nonspace0:
.86a7		c8		iny		                INY
.86a8		b1 f2		lda ($f2),y	                LDA	($F2),Y
.86aa		c9 20		cmp #$20	                CMP	#' '
.86ac		f0 f9		beq $86a7	                BEQ	nonspace0
.86ae		d0 06		bne $86b6	                BNE	nonspace2
.86b0						rdstrcom:
.86b0		b1 f2		lda ($f2),y	                LDA	($F2),Y
.86b2		c9 20		cmp #$20	                CMP	#' '
.86b4		f0 0a		beq $86c0	                BEQ	nonspace1
.86b6						nonspace2:
.86b6		c9 3b		cmp #$3b	                CMP	#IFS
.86b8		f0 06		beq $86c0	                BEQ	nonspace1
.86ba		c9 2b		cmp #$2b	                CMP	#'+'
.86bc		f0 02		beq $86c0	                BEQ	nonspace1
.86be		c9 0d		cmp #$0d	                CMP	#$0D
.86c0						nonspace1:
.86c0		60		rts		                RTS
.86c1						decimal:
.86c1		20 49 8a	jsr $8a49	                JSR	sev
.86c4		20 31 87	jsr $8731	                JSR	hexD
.86c7		98		tya		                TYA
.86c8		48		pha		                PHA
.86c9		a2 84		ldx #$84	                LDX	#<clibuf
.86cb		a0 00		ldy #$00	                LDY	#>clibuf
.86cd		20 d7 87	jsr $87d7	                JSR	dec_hex
.86d0		a2 03		ldx #$03	                LDX	#3
.86d2						decloop0:
.86d2		b5 88		lda $88,x	                LDA	clibuf+4,X
.86d4		95 84		sta $84,x	                STA	clibuf,X
.86d6		ca		dex		                DEX
.86d7		10 f9		bpl $86d2	                BPL	decloop0
.86d9		68		pla		                PLA
.86da		a8		tay		                TAY
.86db		a2 00		ldx #$00	                LDX	#$00
.86dd		18		clc		                CLC
.86de		60		rts		                RTS
.86df						rdstrnum:
.86df		20 a6 86	jsr $86a6	                JSR	nonspace
.86e2		c9 22		cmp #$22	                CMP	#'"'
.86e4		f0 9a		beq $8680	                BEQ	rdstr
.86e6						rdnum:
.86e6		20 a6 86	jsr $86a6	                JSR	nonspace
.86e9		c9 2b		cmp #$2b	                CMP	#'+'
.86eb		f0 06		beq $86f3	                BEQ	plusnum
.86ed		c9 3b		cmp #$3b	                CMP	#IFS
.86ef		d0 1b		bne $870c	                BNE	rdnumx
.86f1		f0 15		beq $8708	                BEQ	rdexitfail
.86f3						plusnum:
.86f3		c8		iny		                INY
.86f4		20 0c 87	jsr $870c	                JSR	rdnumx
.86f7		f0 01		beq $86fa	                BEQ	swallow
.86f9						backone:
.86f9		88		dey		                DEY
.86fa						swallow:
.86fa		a2 04		ldx #$04	                LDX	#$04
.86fc		18		clc		                CLC
.86fd						rdadd:
.86fd		b5 83		lda $83,x	                LDA	clibuf-1,X
.86ff		75 7f		adc $7f,x	                ADC	oldclibuf-1,X
.8701		95 83		sta $83,x	                STA	clibuf-1,X
.8703		ca		dex		                DEX
.8704		d0 f7		bne $86fd	                BNE	rdadd
.8706						rdexitOK:
.8706		18		clc		                CLC
.8707		60		rts		                RTS
.8708						rdexitfail:
.8708		a2 ff		ldx #$ff	                LDX	#$FF
.870a		c8		iny		                INY
.870b		60		rts		                RTS
.870c						rdnumx:
.870c		20 c9 87	jsr $87c9	                JSR	wipeclib
.870f		20 a6 86	jsr $86a6	                JSR	nonspace
.8712		f0 f4		beq $8708	                BEQ	rdexitfail
.8714		c9 22		cmp #$22	                CMP	#'"'
.8716		d0 06		bne $871e	                BNE	rdn0
.8718		20 9c 81	jsr $819c	                JSR	synerr
.871b		4c bf 88	jmp $88bf	                JMP	fatal
.871e						rdn0:
.871e		c8		iny		                INY
.871f		c9 40		cmp #$40	                CMP	#'@'
.8721		f0 46		beq $8769	                BEQ	var
.8723		c9 23		cmp #$23	                CMP	#'#'
.8725		f0 9a		beq $86c1	                BEQ	decimal
.8727		c9 25		cmp #$25	                CMP	#'%'
.8729		f0 29		beq $8754	                BEQ	binary
.872b		c9 26		cmp #$26	                CMP	#'&'
.872d		f0 01		beq $8730	                BEQ	hex
.872f		88		dey		                DEY
.8730						hex:
.8730		b8		clv		                CLV
.8731						hexD:
.8731		20 b0 86	jsr $86b0	                JSR	rdstrcom
.8734		f0 d0		beq $8706	                BEQ	rdexitOK
.8736		70 05		bvs $873d	                BVS	hexD2
.8738		20 f5 88	jsr $88f5	                JSR	ahex_A
.873b		50 03		bvc $8740	                BVC	hex3
.873d						hexD2:
.873d		20 0d 89	jsr $890d	                JSR	adec_A
.8740						hex3:
.8740		a2 03		ldx #$03	                LDX	#3
.8742						hex2:
.8742		06 84		asl $84		                ASL	clibuf
.8744		26 85		rol $85		                ROL	clibuf+1
.8746		26 86		rol $86		                ROL	clibuf+2
.8748		26 87		rol $87		                ROL	clibuf+3
.874a		ca		dex		                DEX
.874b		10 f5		bpl $8742	                BPL	hex2
.874d		05 84		ora $84		                ORA	clibuf
.874f		85 84		sta $84		                STA	clibuf
.8751		c8		iny		                INY
.8752		d0 dd		bne $8731	                BNE	hexD
.8754						binary:
.8754		b1 f2		lda ($f2),y	                LDA	($F2),Y
.8756		20 b0 86	jsr $86b0	                JSR	rdstrcom
.8759		f0 ab		beq $8706	                BEQ	rdexitOK
.875b		20 ea 88	jsr $88ea	                JSR	abin_C
.875e		26 84		rol $84		                ROL	clibuf
.8760		26 85		rol $85		                ROL	clibuf+1
.8762		26 86		rol $86		                ROL	clibuf+2
.8764		26 87		rol $87		                ROL	clibuf+3
.8766		c8		iny		                INY
.8767		d0 eb		bne $8754	                BNE	binary
.8769						var:
.8769		b1 f2		lda ($f2),y	                LDA	($F2),Y
.876b		09 20		ora #$20	                ORA	#$20
.876d		c9 70		cmp #$70	                CMP	#'p'	; PAGE
.876f		d0 07		bne $8778	                BNE	notpage
.8771		a5 18		lda $18		                LDA	$18
.8773		85 85		sta $85		                STA	clibuf+1
.8775		4c a9 87	jmp $87a9	                JMP	var2
.8778						notpage:
.8778		c9 74		cmp #$74	                CMP	#'t'	; TOP
.877a		d0 0d		bne $8789	                BNE	nottop
.877c		a2 12		ldx #$12	                LDX	#$12
.877e						varz:
.877e		b5 00		lda $00,x	                LDA	0,X
.8780		85 84		sta $84		                STA	clibuf
.8782		b5 01		lda $01,x	                LDA	1,X
.8784		85 85		sta $85		                STA	clibuf+1
.8786		4c a9 87	jmp $87a9	                JMP	var2
.8789						nottop:
.8789		c9 6c		cmp #$6c	                CMP	#'l'	; LOMEM
.878b		f0 f1		beq $877e	                BEQ	varz
.878d						notlomem:
.878d		c9 68		cmp #$68	                CMP	#'h'	; HIMEM
.878f		d0 04		bne $8795	                BNE	nothimem
.8791		a2 06		ldx #$06	                LDX	#6
.8793		d0 e9		bne $877e	                BNE	varz
.8795						nothimem:
.8795		c9 6f		cmp #$6f	                CMP	#'o'	; OSHWM
.8797		d0 08		bne $87a1	                BNE	notoshwm
.8799		ad 44 02	lda $0244	                LDA	$244
.879c		85 85		sta $85		                STA	clibuf+1
.879e		4c a9 87	jmp $87a9	                JMP	var2
.87a1						notoshwm:
.87a1		c9 72		cmp #$72	                CMP	#'r'; ROM
.87a3		d0 0c		bne $87b1	                BNE	notvar
.87a5		a9 80		lda #$80	                LDA	#$80
.87a7		85 85		sta $85		                STA	clibuf+1
.87a9						var2:
.87a9		c8		iny		                INY
.87aa		20 b0 86	jsr $86b0	                JSR	rdstrcom
.87ad		d0 fa		bne $87a9	                BNE	var2
.87af		18		clc		                CLC
.87b0						rdexit2:
.87b0		60		rts		                RTS
.87b1						notvar:
.87b1		20 af 89	jsr $89af	                JSR	pcprint
>87b4		55 6e 6b 6e 6f 77 6e 20		                .text	"Unknown variable",13,0
>87bc		76 61 72 69 61 62 6c 65 0d 00
.87c6		4c bf 88	jmp $88bf	                JMP	fatal
.87c9						wipeclib:
.87c9		a2 04		ldx #$04	                LDX	#$04
.87cb						clearclib:
.87cb		b5 83		lda $83,x	                LDA	clibuf-1,X
.87cd		95 7f		sta $7f,x	                STA	oldclibuf-1,X
.87cf		a9 00		lda #$00	                LDA	#$00
.87d1		95 83		sta $83,x	                STA	clibuf-1,X
.87d3		ca		dex		                DEX
.87d4		d0 f5		bne $87cb	                BNE	clearclib
.87d6		60		rts		                RTS
.87d7						dec_hex:
.87d7		86 8c		stx $8c		                STX	common_ptrDH
.87d9		84 8d		sty $8d		                STY	common_ptrDH+1
.87db		a9 00		lda #$00	                LDA	#0
.87dd		85 8e		sta $8e		                STA	common_dhbits
.87df		a0 07		ldy #$07	                LDY	#7
.87e1						zerohexnum:
.87e1		91 8c		sta ($8c),y	                STA	(common_ptrDH),Y
.87e3		88		dey		                DEY
.87e4		c0 03		cpy #$03	                CPY	#3
.87e6		d0 f9		bne $87e1	                BNE	zerohexnum
.87e8						zeroinc:
.87e8		99 70 00	sta $0070,y	                STA	common_dhinc,Y
.87eb		88		dey		                DEY
.87ec		10 fa		bpl $87e8	                BPL	zeroinc
.87ee		e6 70		inc $70		                INC	common_dhinc
.87f0		a9 00		lda #$00	                LDA	#0
.87f2		f0 14		beq $8808	                BEQ	overDH1
.87f4						dhmloop:
.87f4		a5 8e		lda $8e		                LDA	common_dhbits
.87f6		29 03		and #$03	                AND	#3
.87f8		d0 0e		bne $8808	                BNE	overDH1
.87fa		a0 03		ldy #$03	                LDY	#3
.87fc		a2 ff		ldx #$ff	                LDX	#$FF
.87fe		18		clc		                CLC
.87ff						loopDH5:
.87ff		e8		inx		                INX
.8800		68		pla		                PLA
.8801		75 70		adc $70,x	                ADC	common_dhinc,X
.8803		95 70		sta $70,x	                STA	common_dhinc,X
.8805		88		dey		                DEY
.8806		10 f7		bpl $87ff	                BPL	loopDH5
.8808						overDH1:
.8808		c9 01		cmp #$01	                CMP	#1
.880a		d0 08		bne $8814	                BNE	overDH4
.880c		a2 03		ldx #$03	                LDX	#3
.880e						loopDH4:
.880e		b5 70		lda $70,x	                LDA	common_dhinc,X
.8810		48		pha		                PHA
.8811		ca		dex		                DEX
.8812		10 fa		bpl $880e	                BPL	loopDH4
.8814						overDH4:
.8814		a0 03		ldy #$03	                LDY	#3
.8816		18		clc		                CLC
.8817						shiftloop:
.8817		b1 8c		lda ($8c),y	                LDA	(common_ptrDH),Y
.8819		6a		ror a		                ROR	A
.881a		91 8c		sta ($8c),y	                STA	(common_ptrDH),Y
.881c		88		dey		                DEY
.881d		10 f8		bpl $8817	                BPL	shiftloop
.881f		90 15		bcc $8836	                BCC	overDH2
.8821		18		clc		                CLC
.8822		a0 04		ldy #$04	                LDY	#4
.8824		a2 00		ldx #$00	                LDX	#0
.8826		08		php		                PHP
.8827						loopDH2:
.8827		28		plp		                PLP
.8828		b1 8c		lda ($8c),y	                LDA	(common_ptrDH),Y
.882a		75 70		adc $70,x	                ADC	common_dhinc,X
.882c		91 8c		sta ($8c),y	                STA	(common_ptrDH),Y
.882e		08		php		                PHP
.882f		e8		inx		                INX
.8830		c8		iny		                INY
.8831		e0 04		cpx #$04	                CPX	#4
.8833		d0 f2		bne $8827	                BNE	loopDH2
.8835		28		plp		                PLP
.8836						overDH2:
.8836		a5 8e		lda $8e		                LDA	common_dhbits
.8838		29 03		and #$03	                AND	#3
.883a		c9 03		cmp #$03	                CMP	#3
.883c		f0 0b		beq $8849	                BEQ	overDH3
.883e		18		clc		                CLC
.883f		a2 00		ldx #$00	                LDX	#0
.8841		a0 03		ldy #$03	                LDY	#3
.8843						loopDH3:
.8843		36 70		rol $70,x	                ROL	common_dhinc,X
.8845		e8		inx		                INX
.8846		88		dey		                DEY
.8847		10 fa		bpl $8843	                BPL	loopDH3
.8849						overDH3:
.8849		e6 8e		inc $8e		                INC	common_dhbits
.884b		a5 8e		lda $8e		                LDA	common_dhbits
.884d		c9 20		cmp #$20	                CMP	#32
.884f		d0 a3		bne $87f4	                BNE	dhmloop
.8851		68		pla		                PLA
.8852		68		pla		                PLA
.8853		68		pla		                PLA
.8854		68		pla		                PLA
.8855		60		rts		                RTS
.8856						hex_dec:
.8856		86 8c		stx $8c		                STX	common_ptrHD
.8858		84 8d		sty $8d		                STY	common_ptrHD+1
.885a		a9 20		lda #$20	                LDA	#32
.885c		85 8e		sta $8e		                STA	common_hdbits
.885e		a0 07		ldy #$07	                LDY	#7
.8860		a9 00		lda #$00	                LDA	#0
.8862						zerodecnum:
.8862		91 8c		sta ($8c),y	                STA	(common_ptrHD),Y
.8864		88		dey		                DEY
.8865		c0 03		cpy #$03	                CPY	#3
.8867		d0 f9		bne $8862	                BNE	zerodecnum
.8869						zeroincHD:
.8869		99 70 00	sta $0070,y	                STA	common_hdinc,Y
.886c		88		dey		                DEY
.886d		10 fa		bpl $8869	                BPL	zeroincHD
.886f		e6 70		inc $70		                INC	common_hdinc
.8871						HDmloop:
.8871		a0 03		ldy #$03	                LDY	#3
.8873		18		clc		                CLC
.8874						hdshift:
.8874		b1 8c		lda ($8c),y	                LDA	(common_ptrHD),Y
.8876		6a		ror a		                ROR	A
.8877		91 8c		sta ($8c),y	                STA	(common_ptrHD),Y
.8879		88		dey		                DEY
.887a		10 f8		bpl $8874	                BPL	hdshift
.887c		90 17		bcc $8895	                BCC	overHD2
.887e		18		clc		                CLC
.887f		a0 04		ldy #$04	                LDY	#4
.8881		a2 00		ldx #$00	                LDX	#0
.8883		08		php		                PHP
.8884						loopHD2:
.8884		28		plp		                PLP
.8885		f8		sed		                SED
.8886		b1 8c		lda ($8c),y	                LDA	(common_ptrHD),Y
.8888		75 70		adc $70,x	                ADC	common_hdinc,X
.888a		91 8c		sta ($8c),y	                STA	(common_ptrHD),Y
.888c		08		php		                PHP
.888d		d8		cld		                CLD
.888e		e8		inx		                INX
.888f		c8		iny		                INY
.8890		e0 04		cpx #$04	                CPX	#4
.8892		d0 f0		bne $8884	                BNE	loopHD2
.8894		28		plp		                PLP
.8895						overHD2:
.8895		a0 03		ldy #$03	                LDY	#3
.8897		18		clc		                CLC
.8898		a2 00		ldx #$00	                LDX	#0
.889a						loopHD1:
.889a		f8		sed		                SED
.889b		b5 70		lda $70,x	                LDA	common_hdinc,X
.889d		75 70		adc $70,x	                ADC	common_hdinc,X
.889f		95 70		sta $70,x	                STA	common_hdinc,X
.88a1		d8		cld		                CLD
.88a2		e8		inx		                INX
.88a3		88		dey		                DEY
.88a4		10 f4		bpl $889a	                BPL	loopHD1
.88a6		c6 8e		dec $8e		                DEC	common_hdbits
.88a8		a5 8e		lda $8e		                LDA	common_hdbits
.88aa		d0 c5		bne $8871	                BNE	HDmloop
.88ac		60		rts		                RTS
.88ad						nan:
.88ad		20 af 89	jsr $89af	                JSR	pcprint
>88b0		4e 6f 74 20 61 20 6e 75		                .text	"Not a number.",13,0
>88b8		6d 62 65 72 2e 0d 00
.88bf						fatal:
.88bf		ae 9f 03	ldx $039f	                LDX	stacksave
.88c2		ca		dex		                DEX
.88c3		ca		dex		                DEX
.88c4		9a		txs		                TXS
.88c5		60		rts		                RTS
.88c6						fatal_error:
.88c6		68		pla		                PLA
.88c7		85 77		sta $77		                STA	tmpx
.88c9		68		pla		                PLA
.88ca		85 78		sta $78		                STA	tmpy
.88cc		a0 01		ldy #$01	                LDY	#1
.88ce						fatal_err1:
.88ce		b1 77		lda ($77),y	                LDA	(tmpx),Y
.88d0		99 00 01	sta $0100,y	                STA	$0100,Y
.88d3		f0 03		beq $88d8	                BEQ	fatal_err2
.88d5		c8		iny		                INY
.88d6		d0 f6		bne $88ce	                BNE	fatal_err1
.88d8						fatal_err2:
.88d8		a9 00		lda #$00	                LDA	#$00
.88da		8d 00 01	sta $0100	                STA	$100
.88dd		ae 9f 03	ldx $039f	                LDX	stacksave
.88e0		ca		dex		                DEX
.88e1		ca		dex		                DEX
.88e2		9a		txs		                TXS
.88e3		4c 00 01	jmp $0100	                JMP	$100
.88e6						check_escape:
.88e6		a5 ff		lda $ff		                LDA	$FF
.88e8		0a		asl a		                ASL	A
.88e9		60		rts		                RTS
.88ea						abin_C:
.88ea		c9 30		cmp #$30	                CMP	#'0'
.88ec		30 bf		bmi $88ad	                BMI	nan
.88ee		c9 32		cmp #$32	                CMP	#'2'
.88f0		b0 bb		bcs $88ad	                BCS	nan
.88f2		c9 31		cmp #$31	                CMP	#'1'
.88f4		60		rts		                RTS
.88f5						convert:
.88f5						ahex_A:
.88f5		c9 30		cmp #$30	                CMP	#'0'
.88f7		90 b4		bcc $88ad	                BCC	nan
.88f9		c9 3a		cmp #$3a	                CMP	#':'
.88fb		90 0d		bcc $890a	                BCC	notA_F
.88fd		09 20		ora #$20	                ORA	#$20
.88ff		c9 61		cmp #$61	                CMP	#'a'
.8901		90 aa		bcc $88ad	                BCC	nan
.8903		c9 67		cmp #$67	                CMP	#'g'
.8905		b0 a6		bcs $88ad	                BCS	nan
.8907		38		sec		                SEC
.8908		e9 07		sbc #$07	                SBC	#7
.890a						notA_F:
.890a		29 0f		and #$0f	                AND	#$0F
.890c		60		rts		                RTS
.890d						adec_A:
.890d		c9 30		cmp #$30	                CMP	#'0'
.890f		90 9c		bcc $88ad	                BCC	nan
.8911		c9 3a		cmp #$3a	                CMP	#':'
.8913		b0 98		bcs $88ad	                BCS	nan
.8915		29 0f		and #$0f	                AND	#$0F
.8917		60		rts		                RTS
.8918						setcursor:
.8918		8d 48 02	sta $0248	                STA	$248
.891b		8d 20 fe	sta $fe20	                STA	$FE20
.891e		a9 01		lda #$01	                LDA	#1
.8920		8d 55 02	sta $0255	                STA	$255
.8923		a9 1e		lda #$1e	                LDA	#30
.8925		8d 54 02	sta $0254	                STA	$254
.8928		a9 01		lda #$01	                LDA	#1
.892a		8d 7d 02	sta $027d	                STA	$27D
.892d		a9 0a		lda #$0a	                LDA	#10
.892f		a2 41		ldx #$41	                LDX	#$41
.8931		20 fd 85	jsr $85fd	                JSR	poke6845
.8934		a9 0b		lda #$0b	                LDA	#11
.8936		a9 10		lda #$10	                LDA	#$10
.8938		4c fd 85	jmp $85fd	                JMP	poke6845
.893b						escape:
.893b		68		pla		                PLA
.893c		68		pla		                PLA
.893d		68		pla		                PLA
.893e		8d 48 02	sta $0248	                STA	$248
.8941		8d 20 fe	sta $fe20	                STA	$FE20
.8944		68		pla		                PLA
.8945		8d 55 02	sta $0255	                STA	$255
.8948		68		pla		                PLA
.8949		8d 54 02	sta $0254	                STA	$254
.894c		68		pla		                PLA
.894d		8d 7d 02	sta $027d	                STA	$27D
.8950		68		pla		                PLA
.8951		85 79		sta $79		                STA	romid
.8953		a9 0b		lda #$0b	                LDA	#11
.8955		a2 13		ldx #$13	                LDX	#19
.8957		20 fd 85	jsr $85fd	                JSR	poke6845
.895a		a9 0a		lda #$0a	                LDA	#10
.895c		a2 72		ldx #$72	                LDX	#$72
.895e		20 fd 85	jsr $85fd	                JSR	poke6845
.8961		a9 1f		lda #$1f	                LDA	#31
.8963		20 ee ff	jsr $ffee	                JSR	$FFEE
.8966		a9 00		lda #$00	                LDA	#0
.8968		20 ee ff	jsr $ffee	                JSR	$FFEE
.896b		a9 18		lda #$18	                LDA	#24
.896d		20 ee ff	jsr $ffee	                JSR	$FFEE
.8970		a9 7e		lda #$7e	                LDA	#$7E
.8972		4c f4 ff	jmp $fff4	                JMP	$FFF4
.8975						bsdigit:
.8975		85 80		sta $80		                STA	numlo
.8977		a2 80		ldx #$80	                LDX	#$80
.8979		8a		txa		                TXA
.897a						sbloop:
.897a		aa		tax		                TAX
.897b		24 80		bit $80		                BIT	numlo
.897d		d0 04		bne $8983	                BNE	sbone
.897f		a9 30		lda #$30	                LDA	#'0'
.8981		d0 02		bne $8985	                BNE	sbjmp
.8983						sbone:
.8983		a9 31		lda #$31	                LDA	#'1'
.8985						sbjmp:
.8985		20 ee ff	jsr $ffee	                JSR	$FFEE
.8988		8a		txa		                TXA
.8989		4a		lsr a		                LSR	A
.898a		d0 ee		bne $897a	                BNE	sbloop
.898c		60		rts		                RTS
.898d						ldigitxy:
.898d		86 80		stx $80		                STX	numlo
.898f		84 81		sty $81		                STY	numhi
.8991						ldigit:
.8991		a5 81		lda $81		                LDA	numhi
.8993		20 98 89	jsr $8998	                JSR	wdigit
.8996		a5 80		lda $80		                LDA	numlo
.8998						wdigit:
.8998		85 74		sta $74		                STA	tmp
.899a		8a		txa		                TXA
.899b		48		pha		                PHA
.899c		98		tya		                TYA
.899d		48		pha		                PHA
.899e		a5 74		lda $74		                LDA	tmp
.89a0		20 04 86	jsr $8604	                JSR	hex_asc
.89a3		20 ee ff	jsr $ffee	                JSR	$FFEE
.89a6		98		tya		                TYA
.89a7		20 ee ff	jsr $ffee	                JSR	$FFEE
.89aa		68		pla		                PLA
.89ab		a8		tay		                TAY
.89ac		68		pla		                PLA
.89ad		aa		tax		                TAX
.89ae		60		rts		                RTS
.89af						pcprint:
.89af		68		pla		                PLA
.89b0		85 77		sta $77		                STA	tmpx
.89b2		68		pla		                PLA
.89b3		85 78		sta $78		                STA	tmpy
.89b5		a0 01		ldy #$01	                LDY	#1
.89b7						print1:
.89b7		b1 77		lda ($77),y	                LDA	(tmpx),Y
.89b9		f0 06		beq $89c1	                BEQ	print2
.89bb		20 e3 ff	jsr $ffe3	                JSR	$FFE3
.89be		c8		iny		                INY
.89bf		d0 f6		bne $89b7	                BNE	print1
.89c1						print2:
.89c1		98		tya		                TYA
.89c2		18		clc		                CLC
.89c3		65 77		adc $77		                ADC	tmpx
.89c5		aa		tax		                TAX
.89c6		a5 78		lda $78		                LDA	tmpy
.89c8		69 00		adc #$00	                ADC	#0
.89ca		48		pha		                PHA
.89cb		8a		txa		                TXA
.89cc		48		pha		                PHA
.89cd		60		rts		                RTS
.89ce						xyprint:
.89ce		86 77		stx $77		                STX	tmpx
.89d0		84 78		sty $78		                STY	tmpy
.89d2						locprint:
.89d2		a0 00		ldy #$00	                LDY	#0
.89d4						loc1:
.89d4		b1 77		lda ($77),y	                LDA	(tmpx),Y
.89d6		f0 06		beq $89de	                BEQ	loc2
.89d8		20 e3 ff	jsr $ffe3	                JSR	$FFE3
.89db		c8		iny		                INY
.89dc		d0 f6		bne $89d4	                BNE	loc1
.89de						loc2:
.89de		60		rts		                RTS
.89df						checkrom:
.89df		85 79		sta $79		                STA	romid
.89e1		20 5b b1	jsr $b15b	                JSR	reloc
.89e4		90 31		bcc $8a17	                BCC	notrsize
.89e6		a9 8f		lda #$8f	                LDA	#$8F
.89e8		85 7d		sta $7d		                STA	poshi
.89ea		a9 ff		lda #$ff	                LDA	#$FF
.89ec		85 7c		sta $7c		                STA	poslo
.89ee						rtlooq:
.89ee		a0 00		ldy #$00	                LDY	#$00
.89f0		20 d8 b0	jsr $b0d8	                JSR	rdposx
.89f3		85 74		sta $74		                STA	tmp
.89f5		49 ff		eor #$ff	                EOR	#$FF
.89f7		20 08 b1	jsr $b108	                JSR	wrposx
.89fa		20 d8 b0	jsr $b0d8	                JSR	rdposx
.89fd		c5 74		cmp $74		                CMP	tmp
.89ff		f0 10		beq $8a11	                BEQ	foundsize
.8a01		a5 74		lda $74		                LDA	tmp
.8a03		20 08 b1	jsr $b108	                JSR	wrposx
.8a06		a5 7d		lda $7d		                LDA	poshi
.8a08		18		clc		                CLC
.8a09		69 10		adc #$10	                ADC	#$10
.8a0b		85 7d		sta $7d		                STA	poshi
.8a0d		c9 cf		cmp #$cf	                CMP	#$CF
.8a0f		d0 dd		bne $89ee	                BNE	rtlooq
.8a11						foundsize:
.8a11		a5 7d		lda $7d		                LDA	poshi
.8a13		29 f0		and #$f0	                AND	#$F0
.8a15		85 74		sta $74		                STA	tmp
.8a17						notrsize:
.8a17		a9 07		lda #$07	                LDA	#$07
.8a19		85 7c		sta $7c		                STA	poslo
.8a1b		a9 80		lda #$80	                LDA	#$80
.8a1d		85 7d		sta $7d		                STA	poshi
.8a1f		a0 00		ldy #$00	                LDY	#0
.8a21		20 d8 b0	jsr $b0d8	                JSR	rdposx
.8a24		85 7c		sta $7c		                STA	poslo
.8a26		a2 02		ldx #$02	                LDX	#2
.8a28						crl:
.8a28		c8		iny		                INY
.8a29		20 d8 b0	jsr $b0d8	                JSR	rdposx
.8a2c		dd 46 8a	cmp $8a46,x	                CMP	copyright,X
.8a2f		d0 08		bne $8a39	                BNE	crnot
.8a31		ca		dex		                DEX
.8a32		10 f4		bpl $8a28	                BPL	crl
.8a34		a5 74		lda $74		                LDA	tmp
.8a36		a2 00		ldx #$00	                LDX	#$00
.8a38		60		rts		                RTS
.8a39						crnot:
.8a39		a5 74		lda $74		                LDA	tmp
.8a3b		a2 ff		ldx #$ff	                LDX	#$FF
.8a3d		60		rts		                RTS
>8a3e		55 6e 6b 6e 6f 77 6e		narmsg	.text	"Unknown"
>8a45		98				                .byte	152
>8a46		29 43 28			copyright	.text	")C("
.8a49						sev:
.8a49		48		pha		                PHA
.8a4a		08		php		                PHP
.8a4b		68		pla		                PLA
.8a4c		09 40		ora #$40	                ORA	#$40
.8a4e		48		pha		                PHA
.8a4f		28		plp		                PLP
.8a50		68		pla		                PLA
.8a51		60		rts		                RTS
.8a52						beginrom:
.8a52		a9 00		lda #$00	                LDA	#$00
.8a54		85 7c		sta $7c		                STA	poslo
.8a56		a9 80		lda #$80	                LDA	#$80
.8a58		85 7d		sta $7d		                STA	poshi
.8a5a		60		rts		                RTS
.8a5b						doosfblk:
.8a5b		8a		txa		                TXA
.8a5c		48		pha		                PHA
.8a5d		a2 11		ldx #$11	                LDX	#$11
.8a5f		a9 00		lda #$00	                LDA	#$00
.8a61						rlsblank0:
.8a61		9d ee 02	sta $02ee,x	                STA	osfileb,X
.8a64		ca		dex		                DEX
.8a65		10 fa		bpl $8a61	                BPL	rlsblank0
.8a67		18		clc		                CLC
.8a68		98		tya		                TYA
.8a69		65 f2		adc $f2		                ADC	$F2
.8a6b		8d ee 02	sta $02ee	                STA	osfileb
.8a6e		a5 f3		lda $f3		                LDA	$F3
.8a70		69 00		adc #$00	                ADC	#$00
.8a72		8d ef 02	sta $02ef	                STA	osfileb+1
.8a75		68		pla		                PLA
.8a76		85 71		sta $71		                STA	common_endstr
.8a78		98		tya		                TYA
.8a79		18		clc		                CLC
.8a7a		65 71		adc $71		                ADC	common_endstr
.8a7c		a8		tay		                TAY
.8a7d		a9 0d		lda #$0d	                LDA	#$0D
.8a7f		91 f2		sta ($f2),y	                STA	($F2),Y
.8a81		60		rts		                RTS
.8a82						doosfile:
.8a82		a2 ee		ldx #$ee	                LDX	#<osfileb
.8a84		a0 02		ldy #$02	                LDY	#>osfileb
.8a86		4c dd ff	jmp $ffdd	                JMP	osfile
.8a89						break:
.8a89		8d f1 02	sta $02f1	                STA	osfileb+3
.8a8c		8e f9 02	stx $02f9	                STX	osfileb+11
.8a8f		8c fd 02	sty $02fd	                STY	osfileb+15
.8a92		ad fc ff	lda $fffc	                LDA	$FFFC
.8a95		8d f4 02	sta $02f4	                STA	osfileb+6
.8a98		ad fd ff	lda $fffd	                LDA	$FFFD
.8a9b		8d f5 02	sta $02f5	                STA	osfileb+7
.8a9e		a9 00		lda #$00	                LDA	#$00
.8aa0		60		rts		                RTS
.8aa1						keycom:
.8aa1		20 80 86	jsr $8680	                JSR	rdstr
.8aa4		f0 b5		beq $8a5b	                BEQ	doosfblk
.8aa6		4c 9c 81	jmp $819c	                JMP	synerr
.8aa9						osbyte_x0_y255:
.8aa9		a2 00		ldx #$00	                ldx #0
.8aab		a0 ff		ldy #$ff	                ldy #255
.8aad		4c f4 ff	jmp $fff4	                jmp osbyte

;******  Return to file: hackrom.s65


;******  Processing file: errors.s65

=0						E_UNKNOWN_ERR = 0
=$08						E_CLOCK_ERR = $08
=$0c						E_SECTOR_ID_ERR = $0C
=$0e						E_DATA_CRC_ERR = $0E
=$10						E_DRV_NOT_RDY = $10
=$12						E_WRITE_PROTECT = $12
=$14						E_TRK0_NOT_FND = $14
=$16						E_WRITE_FAULT = $16
=$18						E_SCTR_NOT_FND = $18
=$01						E_SYNERR = $01
.8ab0						error_die:
.8ab0		a2 07		ldx #$07	                LDX	#num_errors
.8ab2						error_die_lp0:
.8ab2		dd c9 8a	cmp $8ac9,x	                CMP	error_tab,X
.8ab5		f0 03		beq $8aba	                BEQ	die_horribly
.8ab7		ca		dex		                DEX
.8ab8		d0 f8		bne $8ab2	                BNE	error_die_lp0
.8aba						die_horribly:
.8aba		0a		asl a		                ASL	A
.8abb		aa		tax		                TAX
.8abc		bd d1 8a	lda $8ad1,x	                LDA	error_pnt,X
.8abf		85 77		sta $77		                STA	tmpx
.8ac1		bd d2 8a	lda $8ad2,x	                LDA	error_pnt+1,X
.8ac4		85 78		sta $78		                STA	tmpy
.8ac6		6c 77 00	jmp ($0077)	                JMP	(tmpx)
.8ac9						error_tab:
>8ac9		00				                .byte	E_UNKNOWN_ERR
>8aca		08				                .byte	E_CLOCK_ERR
>8acb		0c				                .byte	E_SECTOR_ID_ERR
>8acc		0e				                .byte	E_DATA_CRC_ERR
>8acd		10				                .byte	E_DRV_NOT_RDY
>8ace		12				                .byte	E_WRITE_PROTECT
>8acf		16				                .byte	E_WRITE_FAULT
>8ad0		18				                .byte	E_SCTR_NOT_FND
.8ad1						end_error_tab:
=7						num_errors = end_error_tab-error_tab-1
.8ad1						error_pnt:
>8ad1		e3 8a				                .word	unknown_error
>8ad3		f5 8a				                .word	clock_error
>8ad5		05 8b				                .word	sector_id_err
>8ad7		1d 8b				                .word	data_crc_error
>8ad9		30 8b				                .word	drv_not_rdy
>8adb		44 8b				                .word	write_protect
>8add		56 8b				                .word	trk0_not_fnd
>8adf		6c 8b				                .word	write_fault
>8ae1		7c 8b				                .word	sctr_not_fnd
.8ae3						errors:
.8ae3						unknown_error:
.8ae3		20 c6 88	jsr $88c6	                JSR	fatal_error
>8ae6		00				                .byte	E_UNKNOWN_ERR
>8ae7		55 6e 6b 6e 6f 77 6e 20		                .text	"Unknown error"
>8aef		65 72 72 6f 72
>8af4		00				                .byte	$00
.8af5						clock_error:
.8af5		20 c6 88	jsr $88c6	                JSR	fatal_error
>8af8		08				                .byte	E_CLOCK_ERR
>8af9		43 6c 6f 63 6b 20 65 72		                .text	"Clock error"
>8b01		72 6f 72
>8b04		00				                .byte	$00
.8b05						sector_id_err:
.8b05		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b08		0c				                .byte	E_SECTOR_ID_ERR
>8b09		53 65 63 74 6f 72 20 49		                .text	"Sector Id CRC error"
>8b11		64 20 43 52 43 20 65 72 72 6f 72
>8b1c		00				                .byte	$00
.8b1d						data_crc_error:
.8b1d		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b20		0e				                .byte	E_DATA_CRC_ERR
>8b21		44 61 74 61 20 43 52 43		                .text	"Data CRC Error"
>8b29		20 45 72 72 6f 72
>8b2f		00				                .byte	$00
.8b30						drv_not_rdy:
.8b30		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b33		10				                .byte	E_DRV_NOT_RDY
>8b34		44 72 69 76 65 20 6e 6f		                .text	"Drive not ready"
>8b3c		74 20 72 65 61 64 79
>8b43		00				                .byte	$00
.8b44						write_protect:
.8b44		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b47		12				                .byte	E_WRITE_PROTECT
>8b48		57 72 69 74 65 20 70 72		                .text	"Write protect"
>8b50		6f 74 65 63 74
>8b55		00				                .byte	$00
.8b56						trk0_not_fnd:
.8b56		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b59		14				                .byte	E_TRK0_NOT_FND
>8b5a		54 72 61 63 6b 20 30 20		                .text	"Track 0 not found"
>8b62		6e 6f 74 20 66 6f 75 6e 64
>8b6b		00				                .byte	$00
.8b6c						write_fault:
.8b6c		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b6f		16				                .byte	E_WRITE_FAULT
>8b70		57 72 69 74 65 20 66 61		                .text	"Write fault"
>8b78		75 6c 74
>8b7b		00				                .byte	$00
.8b7c						sctr_not_fnd:
.8b7c		20 c6 88	jsr $88c6	                JSR	fatal_error
>8b7f		18				                .byte	E_SCTR_NOT_FND
>8b80		53 65 63 74 6f 72 20 6e		                .text	"Sector not found"
>8b88		6f 74 20 66 6f 75 6e 64
>8b90		00				                .byte	$00

;******  Return to file: hackrom.s65


;******  Processing file: mem.s65

.8b91						opcodes:
=$01						ca = ("ADC")[0] & $1f
=$04						cb = ("ADC")[1] & $1f
=$03						cc = ("ADC")[2] & $1f
>8b91		21				                .byte ca | (cb&%11100)<<3
>8b92		0c				                .byte (cb&%00011) | cc<<2
=$01						ca = ("AND")[0] & $1f
=$0e						cb = ("AND")[1] & $1f
=$04						cc = ("AND")[2] & $1f
>8b93		61				                .byte ca | (cb&%11100)<<3
>8b94		12				                .byte (cb&%00011) | cc<<2
=$01						ca = ("ASL")[0] & $1f
=$13						cb = ("ASL")[1] & $1f
=$0c						cc = ("ASL")[2] & $1f
>8b95		81				                .byte ca | (cb&%11100)<<3
>8b96		33				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BBR")[0] & $1f
=$02						cb = ("BBR")[1] & $1f
=$12						cc = ("BBR")[2] & $1f
>8b97		02				                .byte ca | (cb&%11100)<<3
>8b98		4a				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BBS")[0] & $1f
=$02						cb = ("BBS")[1] & $1f
=$13						cc = ("BBS")[2] & $1f
>8b99		02				                .byte ca | (cb&%11100)<<3
>8b9a		4e				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BCC")[0] & $1f
=$03						cb = ("BCC")[1] & $1f
=$03						cc = ("BCC")[2] & $1f
>8b9b		02				                .byte ca | (cb&%11100)<<3
>8b9c		0f				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BCS")[0] & $1f
=$03						cb = ("BCS")[1] & $1f
=$13						cc = ("BCS")[2] & $1f
>8b9d		02				                .byte ca | (cb&%11100)<<3
>8b9e		4f				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BEQ")[0] & $1f
=$05						cb = ("BEQ")[1] & $1f
=$11						cc = ("BEQ")[2] & $1f
>8b9f		22				                .byte ca | (cb&%11100)<<3
>8ba0		45				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BIT")[0] & $1f
=$09						cb = ("BIT")[1] & $1f
=$14						cc = ("BIT")[2] & $1f
>8ba1		42				                .byte ca | (cb&%11100)<<3
>8ba2		51				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BMI")[0] & $1f
=$0d						cb = ("BMI")[1] & $1f
=$09						cc = ("BMI")[2] & $1f
>8ba3		62				                .byte ca | (cb&%11100)<<3
>8ba4		25				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BNE")[0] & $1f
=$0e						cb = ("BNE")[1] & $1f
=$05						cc = ("BNE")[2] & $1f
>8ba5		62				                .byte ca | (cb&%11100)<<3
>8ba6		16				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BPL")[0] & $1f
=$10						cb = ("BPL")[1] & $1f
=$0c						cc = ("BPL")[2] & $1f
>8ba7		82				                .byte ca | (cb&%11100)<<3
>8ba8		30				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BRA")[0] & $1f
=$12						cb = ("BRA")[1] & $1f
=$01						cc = ("BRA")[2] & $1f
>8ba9		82				                .byte ca | (cb&%11100)<<3
>8baa		06				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BRK")[0] & $1f
=$12						cb = ("BRK")[1] & $1f
=$0b						cc = ("BRK")[2] & $1f
>8bab		82				                .byte ca | (cb&%11100)<<3
>8bac		2e				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BVC")[0] & $1f
=$16						cb = ("BVC")[1] & $1f
=$03						cc = ("BVC")[2] & $1f
>8bad		a2				                .byte ca | (cb&%11100)<<3
>8bae		0e				                .byte (cb&%00011) | cc<<2
=$02						ca = ("BVS")[0] & $1f
=$16						cb = ("BVS")[1] & $1f
=$13						cc = ("BVS")[2] & $1f
>8baf		a2				                .byte ca | (cb&%11100)<<3
>8bb0		4e				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CLC")[0] & $1f
=$0c						cb = ("CLC")[1] & $1f
=$03						cc = ("CLC")[2] & $1f
>8bb1		63				                .byte ca | (cb&%11100)<<3
>8bb2		0c				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CLD")[0] & $1f
=$0c						cb = ("CLD")[1] & $1f
=$04						cc = ("CLD")[2] & $1f
>8bb3		63				                .byte ca | (cb&%11100)<<3
>8bb4		10				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CLI")[0] & $1f
=$0c						cb = ("CLI")[1] & $1f
=$09						cc = ("CLI")[2] & $1f
>8bb5		63				                .byte ca | (cb&%11100)<<3
>8bb6		24				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CLR")[0] & $1f
=$0c						cb = ("CLR")[1] & $1f
=$12						cc = ("CLR")[2] & $1f
>8bb7		63				                .byte ca | (cb&%11100)<<3
>8bb8		48				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CLV")[0] & $1f
=$0c						cb = ("CLV")[1] & $1f
=$16						cc = ("CLV")[2] & $1f
>8bb9		63				                .byte ca | (cb&%11100)<<3
>8bba		58				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CMP")[0] & $1f
=$0d						cb = ("CMP")[1] & $1f
=$10						cc = ("CMP")[2] & $1f
>8bbb		63				                .byte ca | (cb&%11100)<<3
>8bbc		41				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CPX")[0] & $1f
=$10						cb = ("CPX")[1] & $1f
=$18						cc = ("CPX")[2] & $1f
>8bbd		83				                .byte ca | (cb&%11100)<<3
>8bbe		60				                .byte (cb&%00011) | cc<<2
=$03						ca = ("CPY")[0] & $1f
=$10						cb = ("CPY")[1] & $1f
=$19						cc = ("CPY")[2] & $1f
>8bbf		83				                .byte ca | (cb&%11100)<<3
>8bc0		64				                .byte (cb&%00011) | cc<<2
=$04						ca = ("DEC")[0] & $1f
=$05						cb = ("DEC")[1] & $1f
=$03						cc = ("DEC")[2] & $1f
>8bc1		24				                .byte ca | (cb&%11100)<<3
>8bc2		0d				                .byte (cb&%00011) | cc<<2
=$04						ca = ("DEX")[0] & $1f
=$05						cb = ("DEX")[1] & $1f
=$18						cc = ("DEX")[2] & $1f
>8bc3		24				                .byte ca | (cb&%11100)<<3
>8bc4		61				                .byte (cb&%00011) | cc<<2
=$04						ca = ("DEY")[0] & $1f
=$05						cb = ("DEY")[1] & $1f
=$19						cc = ("DEY")[2] & $1f
>8bc5		24				                .byte ca | (cb&%11100)<<3
>8bc6		65				                .byte (cb&%00011) | cc<<2
=$05						ca = ("EOR")[0] & $1f
=$0f						cb = ("EOR")[1] & $1f
=$12						cc = ("EOR")[2] & $1f
>8bc7		65				                .byte ca | (cb&%11100)<<3
>8bc8		4b				                .byte (cb&%00011) | cc<<2
=$05						ca = ("EQU")[0] & $1f
=$11						cb = ("EQU")[1] & $1f
=$15						cc = ("EQU")[2] & $1f
>8bc9		85				                .byte ca | (cb&%11100)<<3
>8bca		55				                .byte (cb&%00011) | cc<<2
=$09						ca = ("INC")[0] & $1f
=$0e						cb = ("INC")[1] & $1f
=$03						cc = ("INC")[2] & $1f
>8bcb		69				                .byte ca | (cb&%11100)<<3
>8bcc		0e				                .byte (cb&%00011) | cc<<2
=$09						ca = ("INX")[0] & $1f
=$0e						cb = ("INX")[1] & $1f
=$18						cc = ("INX")[2] & $1f
>8bcd		69				                .byte ca | (cb&%11100)<<3
>8bce		62				                .byte (cb&%00011) | cc<<2
=$09						ca = ("INY")[0] & $1f
=$0e						cb = ("INY")[1] & $1f
=$19						cc = ("INY")[2] & $1f
>8bcf		69				                .byte ca | (cb&%11100)<<3
>8bd0		66				                .byte (cb&%00011) | cc<<2
=$0a						ca = ("JMP")[0] & $1f
=$0d						cb = ("JMP")[1] & $1f
=$10						cc = ("JMP")[2] & $1f
>8bd1		6a				                .byte ca | (cb&%11100)<<3
>8bd2		41				                .byte (cb&%00011) | cc<<2
=$0a						ca = ("JSR")[0] & $1f
=$13						cb = ("JSR")[1] & $1f
=$12						cc = ("JSR")[2] & $1f
>8bd3		8a				                .byte ca | (cb&%11100)<<3
>8bd4		4b				                .byte (cb&%00011) | cc<<2
=$0c						ca = ("LDA")[0] & $1f
=$04						cb = ("LDA")[1] & $1f
=$01						cc = ("LDA")[2] & $1f
>8bd5		2c				                .byte ca | (cb&%11100)<<3
>8bd6		04				                .byte (cb&%00011) | cc<<2
=$0c						ca = ("LDX")[0] & $1f
=$04						cb = ("LDX")[1] & $1f
=$18						cc = ("LDX")[2] & $1f
>8bd7		2c				                .byte ca | (cb&%11100)<<3
>8bd8		60				                .byte (cb&%00011) | cc<<2
=$0c						ca = ("LDY")[0] & $1f
=$04						cb = ("LDY")[1] & $1f
=$19						cc = ("LDY")[2] & $1f
>8bd9		2c				                .byte ca | (cb&%11100)<<3
>8bda		64				                .byte (cb&%00011) | cc<<2
=$0c						ca = ("LSR")[0] & $1f
=$13						cb = ("LSR")[1] & $1f
=$12						cc = ("LSR")[2] & $1f
>8bdb		8c				                .byte ca | (cb&%11100)<<3
>8bdc		4b				                .byte (cb&%00011) | cc<<2
=$0e						ca = ("NOP")[0] & $1f
=$0f						cb = ("NOP")[1] & $1f
=$10						cc = ("NOP")[2] & $1f
>8bdd		6e				                .byte ca | (cb&%11100)<<3
>8bde		43				                .byte (cb&%00011) | cc<<2
=$0f						ca = ("ORA")[0] & $1f
=$12						cb = ("ORA")[1] & $1f
=$01						cc = ("ORA")[2] & $1f
>8bdf		8f				                .byte ca | (cb&%11100)<<3
>8be0		06				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PHA")[0] & $1f
=$08						cb = ("PHA")[1] & $1f
=$01						cc = ("PHA")[2] & $1f
>8be1		50				                .byte ca | (cb&%11100)<<3
>8be2		04				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PHP")[0] & $1f
=$08						cb = ("PHP")[1] & $1f
=$10						cc = ("PHP")[2] & $1f
>8be3		50				                .byte ca | (cb&%11100)<<3
>8be4		40				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PHX")[0] & $1f
=$08						cb = ("PHX")[1] & $1f
=$18						cc = ("PHX")[2] & $1f
>8be5		50				                .byte ca | (cb&%11100)<<3
>8be6		60				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PHY")[0] & $1f
=$08						cb = ("PHY")[1] & $1f
=$19						cc = ("PHY")[2] & $1f
>8be7		50				                .byte ca | (cb&%11100)<<3
>8be8		64				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PLA")[0] & $1f
=$0c						cb = ("PLA")[1] & $1f
=$01						cc = ("PLA")[2] & $1f
>8be9		70				                .byte ca | (cb&%11100)<<3
>8bea		04				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PLP")[0] & $1f
=$0c						cb = ("PLP")[1] & $1f
=$10						cc = ("PLP")[2] & $1f
>8beb		70				                .byte ca | (cb&%11100)<<3
>8bec		40				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PLX")[0] & $1f
=$0c						cb = ("PLX")[1] & $1f
=$18						cc = ("PLX")[2] & $1f
>8bed		70				                .byte ca | (cb&%11100)<<3
>8bee		60				                .byte (cb&%00011) | cc<<2
=$10						ca = ("PLY")[0] & $1f
=$0c						cb = ("PLY")[1] & $1f
=$19						cc = ("PLY")[2] & $1f
>8bef		70				                .byte ca | (cb&%11100)<<3
>8bf0		64				                .byte (cb&%00011) | cc<<2
=$12						ca = ("ROL")[0] & $1f
=$0f						cb = ("ROL")[1] & $1f
=$0c						cc = ("ROL")[2] & $1f
>8bf1		72				                .byte ca | (cb&%11100)<<3
>8bf2		33				                .byte (cb&%00011) | cc<<2
=$12						ca = ("ROR")[0] & $1f
=$0f						cb = ("ROR")[1] & $1f
=$12						cc = ("ROR")[2] & $1f
>8bf3		72				                .byte ca | (cb&%11100)<<3
>8bf4		4b				                .byte (cb&%00011) | cc<<2
=$12						ca = ("RTI")[0] & $1f
=$14						cb = ("RTI")[1] & $1f
=$09						cc = ("RTI")[2] & $1f
>8bf5		b2				                .byte ca | (cb&%11100)<<3
>8bf6		24				                .byte (cb&%00011) | cc<<2
=$12						ca = ("RTS")[0] & $1f
=$14						cb = ("RTS")[1] & $1f
=$13						cc = ("RTS")[2] & $1f
>8bf7		b2				                .byte ca | (cb&%11100)<<3
>8bf8		4c				                .byte (cb&%00011) | cc<<2
=$13						ca = ("SBC")[0] & $1f
=$02						cb = ("SBC")[1] & $1f
=$03						cc = ("SBC")[2] & $1f
>8bf9		13				                .byte ca | (cb&%11100)<<3
>8bfa		0e				                .byte (cb&%00011) | cc<<2
=$13						ca = ("SEC")[0] & $1f
=$05						cb = ("SEC")[1] & $1f
=$03						cc = ("SEC")[2] & $1f
>8bfb		33				                .byte ca | (cb&%11100)<<3
>8bfc		0d				                .byte (cb&%00011) | cc<<2
=$13						ca = ("SED")[0] & $1f
=$05						cb = ("SED")[1] & $1f
=$04						cc = ("SED")[2] & $1f
>8bfd		33				                .byte ca | (cb&%11100)<<3
>8bfe		11				                .byte (cb&%00011) | cc<<2
=$13						ca = ("SEI")[0] & $1f
=$05						cb = ("SEI")[1] & $1f
=$09						cc = ("SEI")[2] & $1f
>8bff		33				                .byte ca | (cb&%11100)<<3
>8c00		25				                .byte (cb&%00011) | cc<<2
=$13						ca = ("STA")[0] & $1f
=$14						cb = ("STA")[1] & $1f
=$01						cc = ("STA")[2] & $1f
>8c01		b3				                .byte ca | (cb&%11100)<<3
>8c02		04				                .byte (cb&%00011) | cc<<2
=$13						ca = ("STX")[0] & $1f
=$14						cb = ("STX")[1] & $1f
=$18						cc = ("STX")[2] & $1f
>8c03		b3				                .byte ca | (cb&%11100)<<3
>8c04		60				                .byte (cb&%00011) | cc<<2
=$13						ca = ("STY")[0] & $1f
=$14						cb = ("STY")[1] & $1f
=$19						cc = ("STY")[2] & $1f
>8c05		b3				                .byte ca | (cb&%11100)<<3
>8c06		64				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TAX")[0] & $1f
=$01						cb = ("TAX")[1] & $1f
=$18						cc = ("TAX")[2] & $1f
>8c07		14				                .byte ca | (cb&%11100)<<3
>8c08		61				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TAY")[0] & $1f
=$01						cb = ("TAY")[1] & $1f
=$19						cc = ("TAY")[2] & $1f
>8c09		14				                .byte ca | (cb&%11100)<<3
>8c0a		65				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TRB")[0] & $1f
=$12						cb = ("TRB")[1] & $1f
=$02						cc = ("TRB")[2] & $1f
>8c0b		94				                .byte ca | (cb&%11100)<<3
>8c0c		0a				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TSB")[0] & $1f
=$13						cb = ("TSB")[1] & $1f
=$02						cc = ("TSB")[2] & $1f
>8c0d		94				                .byte ca | (cb&%11100)<<3
>8c0e		0b				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TSX")[0] & $1f
=$13						cb = ("TSX")[1] & $1f
=$18						cc = ("TSX")[2] & $1f
>8c0f		94				                .byte ca | (cb&%11100)<<3
>8c10		63				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TXA")[0] & $1f
=$18						cb = ("TXA")[1] & $1f
=$01						cc = ("TXA")[2] & $1f
>8c11		d4				                .byte ca | (cb&%11100)<<3
>8c12		04				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TXS")[0] & $1f
=$18						cb = ("TXS")[1] & $1f
=$13						cc = ("TXS")[2] & $1f
>8c13		d4				                .byte ca | (cb&%11100)<<3
>8c14		4c				                .byte (cb&%00011) | cc<<2
=$14						ca = ("TYA")[0] & $1f
=$19						cb = ("TYA")[1] & $1f
=$01						cc = ("TYA")[2] & $1f
>8c15		d4				                .byte ca | (cb&%11100)<<3
>8c16		05				                .byte (cb&%00011) | cc<<2
.8c17						length:
>8c17		01 02 02 02 03 03 03 02		                .byte	$01,$02,$02,$02,$03,$03,$03,$02
>8c1f		02 01 02 03 02 02 02 03		                .byte	$02,$01,$02,$03,$02,$02,$02,$03
>8c27		03 03 03 03 03 03 03 03		                .byte	$03,$03,$03,$03,$03,$03,$03,$03
>8c2f		03				                .byte	$03
.8c30						calc:
.8c30		aa		tax		                TAX
.8c31		bd ce 91	lda $91ce,x	                LDA	op,X
.8c34		85 74		sta $74		                STA	tmp
.8c36		29 7f		and #$7f	                AND	#$7F
.8c38		85 70		sta $70		                STA	mem_tmpop
.8c3a		18		clc		                CLC
.8c3b		8a		txa		                TXA
.8c3c		6a		ror a		                ROR	A
.8c3d		aa		tax		                TAX
.8c3e		bd ce 92	lda $92ce,x	                LDA	mode,X
.8c41		90 04		bcc $8c47	                BCC	clcjmp
.8c43		4a		lsr a		                LSR	A
.8c44		4a		lsr a		                LSR	A
.8c45		4a		lsr a		                LSR	A
.8c46		4a		lsr a		                LSR	A
.8c47						clcjmp:
.8c47		29 0f		and #$0f	                AND	#$F
.8c49		48		pha		                PHA
.8c4a		a5 74		lda $74		                LDA	tmp
.8c4c		2a		rol a		                ROL	A
.8c4d		68		pla		                PLA
.8c4e		2a		rol a		                ROL	A
.8c4f		85 71		sta $71		                STA	mem_tmpam
.8c51		aa		tax		                TAX
.8c52		bd 17 8c	lda $8c17,x	                LDA	length,X
.8c55		85 72		sta $72		                STA	mem_tmplen
.8c57		60		rts		                RTS
.8c58						printop:
.8c58		a5 70		lda $70		                LDA	mem_tmpop
.8c5a		0a		asl a		                ASL	A
.8c5b		aa		tax		                TAX
.8c5c		a0 00		ldy #$00	                LDY	#0
.8c5e		bd 91 8b	lda $8b91,x	                LDA	opcodes,X
.8c61		48		pha		                PHA
.8c62		29 1f		and #$1f	                AND	#$1F
.8c64		09 40		ora #$40	                ORA #$40
.8c66		91 80		sta ($80),y	                STA	(screenlo),Y
.8c68		68		pla		                PLA
.8c69		29 e0		and #$e0	                AND	#$E0
.8c6b		4a		lsr a		                LSR	A
.8c6c		4a		lsr a		                LSR	A
.8c6d		4a		lsr a		                LSR	A
.8c6e		85 74		sta $74		                STA	tmp
.8c70		e8		inx		                INX
.8c71		c8		iny		                INY
.8c72		bd 91 8b	lda $8b91,x	                LDA	opcodes,X
.8c75		48		pha		                PHA
.8c76		29 03		and #$03	                AND	#$3
.8c78		65 74		adc $74		                ADC	tmp
.8c7a		09 40		ora #$40	                ORA #$40
.8c7c		91 80		sta ($80),y	                STA	(screenlo),Y
.8c7e		c8		iny		                INY
.8c7f		68		pla		                PLA
.8c80		29 7c		and #$7c	                AND	#$7C
.8c82		4a		lsr a		                LSR	A
.8c83		4a		lsr a		                LSR	A
.8c84		09 40		ora #$40	                ORA #$40
.8c86		91 80		sta ($80),y	                STA	(screenlo),Y
.8c88		a5 80		lda $80		                LDA	screenlo
.8c8a		18		clc		                CLC
.8c8b		69 04		adc #$04	                ADC	#4
.8c8d		85 80		sta $80		                STA	screenlo
.8c8f		90 02		bcc $8c93	                BCC	poj
.8c91		e6 81		inc $81		                INC	screenhi
.8c93						poj:
.8c93		60		rts		                RTS
.8c94						disscreen:
.8c94		a9 02		lda #$02	                LDA	#2
.8c96						dsloop0:
.8c96		2c 4d fe	bit $fe4d	                BIT	$FE4D
.8c99		d0 fb		bne $8c96	                BNE	dsloop0
.8c9b		a9 79		lda #$79	                LDA	#$79
.8c9d		85 80		sta $80		                STA	screenlo
.8c9f		a9 7c		lda #$7c	                LDA	#$7C
.8ca1		85 81		sta $81		                STA	screenhi
.8ca3		a0 00		ldy #$00	                LDY	#0
.8ca5		a5 7c		lda $7c		                LDA	poslo
.8ca7		85 7e		sta $7e		                STA	tmpposlo
.8ca9		a5 7d		lda $7d		                LDA	poshi
.8cab		85 7f		sta $7f		                STA	tmpposhi
.8cad						sloop:
.8cad		a5 80		lda $80		                LDA	screenlo
.8caf		85 7a		sta $7a		                STA	tmpscrlo
.8cb1		a5 81		lda $81		                LDA	screenhi
.8cb3		85 7b		sta $7b		                STA	tmpscrhi
.8cb5		98		tya		                TYA
.8cb6		48		pha		                PHA
.8cb7		a5 7f		lda $7f		                LDA	tmpposhi
.8cb9		20 16 86	jsr $8616	                JSR	printnumx
.8cbc		a5 7e		lda $7e		                LDA	tmpposlo
.8cbe		38		sec		                SEC
.8cbf		20 17 86	jsr $8617	                JSR	printnum
.8cc2		a0 00		ldy #$00	                LDY	#0
.8cc4		20 e5 b0	jsr $b0e5	                JSR	rdtmpposx
.8cc7		20 30 8c	jsr $8c30	                JSR	calc
.8cca		aa		tax		                TAX
.8ccb		a0 00		ldy #$00	                LDY	#0
.8ccd						sloop1:
.8ccd		20 e5 b0	jsr $b0e5	                JSR	rdtmpposx
.8cd0		38		sec		                SEC
.8cd1		20 17 86	jsr $8617	                JSR	printnum
.8cd4		c8		iny		                INY
.8cd5		ca		dex		                DEX
.8cd6		d0 f5		bne $8ccd	                BNE	sloop1
.8cd8		a0 1b		ldy #$1b	                LDY	#27
.8cda		a9 20		lda #$20	                LDA	#32
.8cdc						sloop0:
.8cdc		91 80		sta ($80),y	                STA	(screenlo),Y
.8cde		88		dey		                DEY
.8cdf		10 fb		bpl $8cdc	                BPL	sloop0
.8ce1		a5 7a		lda $7a		                LDA	tmpscrlo
.8ce3		18		clc		                CLC
.8ce4		69 10		adc #$10	                ADC	#16
.8ce6		85 80		sta $80		                STA	screenlo
.8ce8		a5 7b		lda $7b		                LDA	tmpscrhi
.8cea		69 00		adc #$00	                ADC	#0
.8cec		85 81		sta $81		                STA	screenhi
.8cee		a6 72		ldx $72		                LDX	mem_tmplen
.8cf0		a0 00		ldy #$00	                LDY	#0
.8cf2						sloop2:
.8cf2		20 e5 b0	jsr $b0e5	                JSR	rdtmpposx
.8cf5		29 7f		and #$7f	                AND	#$7F
.8cf7		c9 20		cmp #$20	                CMP	#$20
.8cf9		b0 02		bcs $8cfd	                BCS	sjmp6
.8cfb		a9 2e		lda #$2e	                LDA	#'.'
.8cfd						sjmp6:
.8cfd		91 80		sta ($80),y	                STA	(screenlo),Y
.8cff		c8		iny		                INY
.8d00		ca		dex		                DEX
.8d01		d0 ef		bne $8cf2	                BNE	sloop2
.8d03		a5 7a		lda $7a		                LDA	tmpscrlo
.8d05		18		clc		                CLC
.8d06		69 16		adc #$16	                ADC	#22
.8d08		85 80		sta $80		                STA	screenlo
.8d0a		a5 7b		lda $7b		                LDA	tmpscrhi
.8d0c		69 00		adc #$00	                ADC	#0
.8d0e		85 81		sta $81		                STA	screenhi
.8d10		20 58 8c	jsr $8c58	                JSR	printop
.8d13		20 39 8d	jsr $8d39	                JSR	amprint
.8d16		a5 7e		lda $7e		                LDA	tmpposlo
.8d18		18		clc		                CLC
.8d19		65 72		adc $72		                ADC	mem_tmplen
.8d1b		85 7e		sta $7e		                STA	tmpposlo
.8d1d		90 02		bcc $8d21	                BCC	sjmp1
.8d1f		e6 7f		inc $7f		                INC	tmpposhi
.8d21						sjmp1:
.8d21		a5 7a		lda $7a		                LDA	tmpscrlo
.8d23		18		clc		                CLC
.8d24		69 28		adc #$28	                ADC	#$28
.8d26		85 80		sta $80		                STA	screenlo
.8d28		a5 7b		lda $7b		                LDA	tmpscrhi
.8d2a		69 00		adc #$00	                ADC	#0
.8d2c		85 81		sta $81		                STA	screenhi
.8d2e		68		pla		                PLA
.8d2f		a8		tay		                TAY
.8d30		c8		iny		                INY
.8d31		c0 16		cpy #$16	                CPY	#22
.8d33		b0 03		bcs $8d38	                BCS	send
.8d35		4c ad 8c	jmp $8cad	                JMP	sloop
.8d38						send:
.8d38		60		rts		                RTS
.8d39						amprint:
.8d39		a6 71		ldx $71		                LDX	mem_tmpam
.8d3b		bd 19 8e	lda $8e19,x	                LDA	amoffset,X
.8d3e		aa		tax		                TAX
.8d3f						amloop:
.8d3f		bd 90 8d	lda $8d90,x	                LDA	amtab,X
.8d42		30 1f		bmi $8d63	                BMI	amend
.8d44		c9 03		cmp #$03	                CMP	#3
.8d46		f0 1c		beq $8d64	                BEQ	relative
.8d48		b0 0b		bcs $8d55	                BCS	amtext
.8d4a		a8		tay		                TAY
.8d4b		20 e5 b0	jsr $b0e5	                JSR	rdtmpposx
.8d4e		20 16 86	jsr $8616	                JSR	printnumx
.8d51		e8		inx		                INX
.8d52		4c 3f 8d	jmp $8d3f	                JMP	amloop
.8d55						amtext:
.8d55		a0 00		ldy #$00	                LDY	#0
.8d57		91 80		sta ($80),y	                STA	(screenlo),Y
.8d59		e8		inx		                INX
.8d5a		e6 80		inc $80		                INC	screenlo
.8d5c		d0 02		bne $8d60	                BNE	amj1
.8d5e		e6 81		inc $81		                INC	screenhi
.8d60						amj1:
.8d60		4c 3f 8d	jmp $8d3f	                JMP	amloop
.8d63						amend:
.8d63		60		rts		                RTS
.8d64						relative:
.8d64		a4 72		ldy $72		                LDY	mem_tmplen
.8d66		88		dey		                DEY
.8d67		a5 7e		lda $7e		                LDA	tmpposlo
.8d69		18		clc		                CLC
.8d6a		65 72		adc $72		                ADC	mem_tmplen
.8d6c		85 74		sta $74		                STA	tmp
.8d6e		a5 7f		lda $7f		                LDA	tmpposhi
.8d70		69 00		adc #$00	                ADC	#0
.8d72		85 75		sta $75		                STA	tmp+1
.8d74		20 e5 b0	jsr $b0e5	                JSR	rdtmpposx
.8d77		c9 80		cmp #$80	                CMP	#$80
.8d79		90 04		bcc $8d7f	                BCC	r1
.8d7b		a2 ff		ldx #$ff	                LDX	#$FF
.8d7d		30 02		bmi $8d81	                BMI	r2
.8d7f						r1:
.8d7f		a2 00		ldx #$00	                LDX	#$00
.8d81						r2:
.8d81		18		clc		                CLC
.8d82		65 74		adc $74		                ADC	tmp
.8d84		48		pha		                PHA
.8d85		8a		txa		                TXA
.8d86		65 75		adc $75		                ADC	tmp+1
.8d88		20 16 86	jsr $8616	                JSR	printnumx
.8d8b		68		pla		                PLA
.8d8c		20 16 86	jsr $8616	                JSR	printnumx
.8d8f		60		rts		                RTS
.8d90						amtab:
>8d90		ff				am00	.byte	$FF
>8d91		5f 26 01 ff			am01	.byte	$5F,$26,$01,$FF
>8d95		26 01 ff			am02	.byte	$26,$01,$FF
>8d98		26 01 2c 58 ff			am03	.byte	$26,$01,$2C,$58,$FF
>8d9d		26 02 01 ff			am04	.byte	$26,$02,$01,$FF
>8da1		26 02 01 2c 58 ff		am05	.byte	$26,$02,$01,$2C,$58,$FF
>8da7		26 02 01 2c 59 ff		am06	.byte	$26,$02,$01,$2C,$59,$FF
>8dad		28 26 01 2c 58 29 ff		am07	.byte	$28,$26,$01,$2C,$58,$29,$FF
>8db4		28 26 01 29 2c 59 ff		am08	.byte	$28,$26,$01,$29,$2C,$59,$FF
>8dbb		41 ff				am09	.byte	$41,$FF
>8dbd		26 03 ff			am10	.byte	$26,$03,$FF
>8dc0		28 26 02 01 29 ff		am11	.byte	$28,$26,$02,$01,$29,$FF
>8dc6		26 01 2c 59 ff			am12	.byte	$26,$01,$2C,$59,$FF
>8dcb		28 26 01 29 ff			am13	.byte	$28,$26,$01,$29,$FF
>8dd0		26 01 00 ff			am14	.byte	$26,$01,$00,$FF
>8dd4		26 02 01 00 ff			am15	.byte	$26,$02,$01,$00,$FF
>8dd9		30 20 26 01 20 03 ff		am16	.byte	$30,$20,$26,$01,$20,$03,$FF
>8de0		31 20 26 01 20 03 ff		am17	.byte	$31,$20,$26,$01,$20,$03,$FF
>8de7		32 20 26 01 20 03 ff		am18	.byte	$32,$20,$26,$01,$20,$03,$FF
>8dee		33 20 26 01 20 03 ff		am19	.byte	$33,$20,$26,$01,$20,$03,$FF
>8df5		34 20 26 01 20 03 ff		am20	.byte	$34,$20,$26,$01,$20,$03,$FF
>8dfc		35 20 26 01 20 03 ff		am21	.byte	$35,$20,$26,$01,$20,$03,$FF
>8e03		36 20 26 01 20 03 ff		am22	.byte	$36,$20,$26,$01,$20,$03,$FF
>8e0a		37 20 26 01 20 03 ff		am23	.byte	$37,$20,$26,$01,$20,$03,$FF
>8e11		28 26 02 01 2c 58 29 ff		am24	.byte	$28,$26,$02,$01,$2C,$58,$29,$FF
.8e19						amoffset:
>8e19		00				                .byte	am00-amtab
>8e1a		01				                .byte	am01-amtab
>8e1b		05				                .byte	am02-amtab
>8e1c		08				                .byte	am03-amtab
>8e1d		0d				                .byte	am04-amtab
>8e1e		11				                .byte	am05-amtab
>8e1f		17				                .byte	am06-amtab
>8e20		1d				                .byte	am07-amtab
>8e21		24				                .byte	am08-amtab
>8e22		2b				                .byte	am09-amtab
>8e23		2d				                .byte	am10-amtab
>8e24		30				                .byte	am11-amtab
>8e25		36				                .byte	am12-amtab
>8e26		3b				                .byte	am13-amtab
>8e27		40				                .byte	am14-amtab
>8e28		44				                .byte	am15-amtab
>8e29		49				                .byte	am16-amtab
>8e2a		50				                .byte	am17-amtab
>8e2b		57				                .byte	am18-amtab
>8e2c		5e				                .byte	am19-amtab
>8e2d		65				                .byte	am20-amtab
>8e2e		6c				                .byte	am21-amtab
>8e2f		73				                .byte	am22-amtab
>8e30		7a				                .byte	am23-amtab
>8e31		81				                .byte	am24-amtab
.8e32						hexscreen:
.8e32		a9 0e		lda #$0e	                LDA	#14
.8e34		a2 2a		ldx #$2a	                LDX	#$2A
.8e36		20 fd 85	jsr $85fd	                JSR	poke6845
.8e39		a6 8a		ldx $8a		                LDX	mem_xpos
.8e3b		a5 8b		lda $8b		                LDA	mem_hmode
.8e3d		d0 06		bne $8e45	                BNE	ascii
.8e3f		bd 95 91	lda $9195,x	                LDA	hhex,X
.8e42		4c 48 8e	jmp $8e48	                JMP	hjmp0
.8e45						ascii:
.8e45		bd 9d 91	lda $919d,x	                LDA	hascii,X
.8e48						hjmp0:
.8e48		aa		tax		                TAX
.8e49		a9 0f		lda #$0f	                LDA	#15
.8e4b		20 fd 85	jsr $85fd	                JSR	poke6845
.8e4e		a9 79		lda #$79	                LDA	#$79
.8e50		85 80		sta $80		                STA	screenlo
.8e52		a9 7c		lda #$7c	                LDA	#$7C
.8e54		85 81		sta $81		                STA	screenhi
.8e56		a0 00		ldy #$00	                LDY	#0
.8e58		a5 7c		lda $7c		                LDA	poslo
.8e5a		85 7a		sta $7a		                STA	tmpscrlo
.8e5c		a5 7d		lda $7d		                LDA	poshi
.8e5e		85 7b		sta $7b		                STA	tmpscrhi
.8e60		a9 02		lda #$02	                LDA	#2
.8e62						hsloop0:
.8e62		2c 4d fe	bit $fe4d	                BIT	$FE4D
.8e65		d0 fb		bne $8e62	                BNE	hsloop0
.8e67						hsloop2:
.8e67		a5 7b		lda $7b		                LDA	tmpscrhi
.8e69		20 16 86	jsr $8616	                JSR	printnumx
.8e6c		a5 7a		lda $7a		                LDA	tmpscrlo
.8e6e		20 16 86	jsr $8616	                JSR	printnumx
.8e71		a5 80		lda $80		                LDA	screenlo
.8e73		69 02		adc #$02	                ADC	#2
.8e75		85 80		sta $80		                STA	screenlo
.8e77		a2 07		ldx #$07	                LDX	#7
.8e79						hsloop1:
.8e79		20 d8 b0	jsr $b0d8	                JSR	rdposx
.8e7c		95 82		sta $82,x	                STA	mem_tmpblock,X
.8e7e		38		sec		                SEC
.8e7f		20 17 86	jsr $8617	                JSR	printnum
.8e82		c8		iny		                INY
.8e83		ca		dex		                DEX
.8e84		10 f3		bpl $8e79	                BPL	hsloop1
.8e86		a2 07		ldx #$07	                LDX	#7
.8e88		98		tya		                TYA
.8e89		48		pha		                PHA
.8e8a		a0 01		ldy #$01	                LDY	#1
.8e8c						hsloop3:
.8e8c		8a		txa		                TXA
.8e8d		48		pha		                PHA
.8e8e		b5 82		lda $82,x	                LDA	mem_tmpblock,X
.8e90		29 7f		and #$7f	                AND	#$7F
.8e92		aa		tax		                TAX
.8e93		bd 6e 85	lda $856e,x	                LDA	letter,X
.8e96		91 80		sta ($80),y	                STA	(screenlo),Y
.8e98		68		pla		                PLA
.8e99		aa		tax		                TAX
.8e9a		c8		iny		                INY
.8e9b		ca		dex		                DEX
.8e9c		10 ee		bpl $8e8c	                BPL	hsloop3
.8e9e		68		pla		                PLA
.8e9f		a8		tay		                TAY
.8ea0		a5 80		lda $80		                LDA	screenlo
.8ea2		18		clc		                CLC
.8ea3		69 0a		adc #$0a	                ADC	#10
.8ea5		85 80		sta $80		                STA	screenlo
.8ea7		90 02		bcc $8eab	                BCC	hsjmp1
.8ea9		e6 81		inc $81		                INC	screenhi
.8eab						hsjmp1:
.8eab		a5 7a		lda $7a		                LDA	tmpscrlo
.8ead		18		clc		                CLC
.8eae		69 08		adc #$08	                ADC	#8
.8eb0		85 7a		sta $7a		                STA	tmpscrlo
.8eb2		90 02		bcc $8eb6	                BCC	hsjmp4
.8eb4		e6 7b		inc $7b		                INC	tmpscrhi
.8eb6						hsjmp4:
.8eb6		c0 b0		cpy #$b0	                CPY	#$B0
.8eb8		d0 ad		bne $8e67	                BNE	hsloop2
.8eba		60		rts		                RTS
.8ebb						drawband:
.8ebb		a9 82		lda #$82	                LDA	#130
.8ebd		8d 0d 7e	sta $7e0d	                STA	$7E0D
.8ec0		a9 81		lda #$81	                LDA	#129
.8ec2		8d 26 7e	sta $7e26	                STA	$7E26
.8ec5		60		rts		                RTS
.8ec6						start:
.8ec6		20 5b b1	jsr $b15b	                JSR	reloc
.8ec9		a5 f4		lda $f4		                LDA	$F4
.8ecb		48		pha		                PHA
.8ecc		ad 7d 02	lda $027d	                LDA	$27D
.8ecf		48		pha		                PHA
.8ed0		ad 54 02	lda $0254	                LDA	$254
.8ed3		48		pha		                PHA
.8ed4		ad 55 02	lda $0255	                LDA	$255
.8ed7		48		pha		                PHA
.8ed8		20 af 89	jsr $89af	                JSR	pcprint
.8edb						titmsg:
>8edb		16 07				                .byte 22, 7 ;MODE 7
>8edd		81				                .byte	129
>8ede		4d 65 6d 6f 72 79 20 42		                .text	"Memory Bank"
>8ee6		61 6e 6b
>8ee9		86				                .byte	134
>8eea		20 20 58 20 3a			                .text	"  X :"
>8eef		0d				                .byte	$0D
>8ef0		81				                .byte	129
>8ef1		44 69 73 70 6c 61 79 20		                .text	"Display Mode"
>8ef9		4d 6f 64 65
>8efd		86				                .byte	134
>8efe		00				                .byte	0
.8eff		ad 48 02	lda $0248	                LDA	$248
.8f02		48		pha		                PHA
.8f03		a5 74		lda $74		                LDA	tmp
.8f05		85 79		sta $79		                STA	romid
.8f07		20 cf 90	jsr $90cf	                JSR	romtitle
.8f0a		a9 00		lda #$00	                LDA	#$00
.8f0c		85 72		sta $72		                STA	toggle
.8f0e		85 8b		sta $8b		                STA	mem_hmode
.8f10		a9 cf		lda #$cf	                LDA	#$CF
.8f12		20 18 89	jsr $8918	                JSR	setcursor
.8f15		24 73		bit $73		                BIT	mem_display
.8f17		30 03		bmi $8f1c	                BMI	mdis1
.8f19		20 f9 8f	jsr $8ff9	                JSR	sub50
.8f1c						mdis1:
.8f1c		20 d9 8f	jsr $8fd9	                JSR	tabstart
.8f1f						mloop:
.8f1f		a9 8f		lda #$8f	                LDA	#>(mloop-1)
.8f21		48		pha		                PHA
.8f22		a9 1e		lda #$1e	                LDA	#<(mloop-1)
.8f24		48		pha		                PHA
.8f25						mloopx:
.8f25		24 73		bit $73		                BIT	mem_display
.8f27		10 10		bpl $8f39	                BPL	mjmp3
.8f29		20 94 8c	jsr $8c94	                JSR	disscreen
.8f2c		a0 00		ldy #$00	                LDY	#0
.8f2e		20 d8 b0	jsr $b0d8	                JSR	rdposx
.8f31		20 30 8c	jsr $8c30	                JSR	calc
.8f34		85 7a		sta $7a		                STA	tmpscrlo
.8f36		4c 40 8f	jmp $8f40	                JMP	mjmp4
.8f39						mjmp3:
.8f39		20 32 8e	jsr $8e32	                JSR	hexscreen
.8f3c		a9 08		lda #$08	                LDA	#$8
.8f3e		85 7a		sta $7a		                STA	tmpscrlo
.8f40						mjmp4:
.8f40		a0 ff		ldy #$ff	                LDY	#$FF
.8f42		a2 ff		ldx #$ff	                LDX	#$FF
.8f44		a9 81		lda #$81	                LDA	#$81
.8f46		20 f4 ff	jsr $fff4	                JSR	$FFF4
.8f49		86 81		stx $81		                STX	shift
.8f4b		a0 ff		ldy #$ff	                LDY	#$FF
.8f4d		a2 fe		ldx #$fe	                LDX	#$FE
.8f4f		20 f4 ff	jsr $fff4	                JSR	$FFF4
.8f52		86 80		stx $80		                STX	control
.8f54		a2 00		ldx #$00	                LDX	#0
.8f56		a0 00		ldy #$00	                LDY	#0
.8f58		20 f4 ff	jsr $fff4	                JSR	$FFF4
.8f5b		c0 ff		cpy #$ff	                CPY	#$FF
.8f5d		d0 06		bne $8f65	                BNE	mjmp5
.8f5f		24 73		bit $73		                BIT	mem_display
.8f61		10 c2		bpl $8f25	                BPL	mloopx
.8f63		30 db		bmi $8f40	                BMI	mjmp4
.8f65						mjmp5:
.8f65		c0 1b		cpy #$1b	                CPY	#$1B
.8f67		d0 03		bne $8f6c	                BNE	notend
.8f69		4c 3b 89	jmp $893b	                JMP	escape
.8f6c						notend:
.8f6c		8a		txa		                TXA
.8f6d		48		pha		                PHA
.8f6e		a9 0f		lda #$0f	                LDA	#15
.8f70		a2 01		ldx #$01	                LDX	#1
.8f72		20 f4 ff	jsr $fff4	                JSR	$FFF4
.8f75		68		pla		                PLA
.8f76		aa		tax		                TAX
.8f77		24 72		bit $72		                BIT	toggle
.8f79		10 08		bpl $8f83	                BPL	togjmp0
.8f7b		a9 00		lda #$00	                LDA	#$00
.8f7d		50 02		bvc $8f81	                BVC	togjmp1
.8f7f		09 bf		ora #$bf	                ORA	#$BF
.8f81						togjmp1:
.8f81		85 72		sta $72		                STA	toggle
.8f83						togjmp0:
.8f83		e0 8a		cpx #$8a	                CPX	#$8A
.8f85		d0 18		bne $8f9f	                BNE	notdown
.8f87		24 81		bit $81		                BIT	shift
.8f89		30 11		bmi $8f9c	                BMI	down2
.8f8b		24 80		bit $80		                BIT	control
.8f8d		10 04		bpl $8f93	                BPL	down1
.8f8f		a9 80		lda #$80	                LDA	#$80
.8f91		85 7a		sta $7a		                STA	tmpscrlo
.8f93						down1:
.8f93		a5 7c		lda $7c		                LDA	poslo
.8f95		18		clc		                CLC
.8f96		65 7a		adc $7a		                ADC	tmpscrlo
.8f98		85 7c		sta $7c		                STA	poslo
.8f9a		90 02		bcc $8f9e	                BCC	mmloop
.8f9c						down2:
.8f9c		e6 7d		inc $7d		                INC	poshi
.8f9e						mmloop:
.8f9e		60		rts		                RTS
.8f9f						notdown:
.8f9f		e0 8b		cpx #$8b	                CPX	#$8B
.8fa1		d0 20		bne $8fc3	                BNE	notup
.8fa3		24 81		bit $81		                BIT	shift
.8fa5		30 19		bmi $8fc0	                BMI	up2
.8fa7		24 73		bit $73		                BIT	mem_display
.8fa9		10 04		bpl $8faf	                BPL	up3
.8fab		a9 01		lda #$01	                LDA	#$01
.8fad		85 7a		sta $7a		                STA	tmpscrlo
.8faf						up3:
.8faf		24 80		bit $80		                BIT	control
.8fb1		10 04		bpl $8fb7	                BPL	up1
.8fb3		a9 80		lda #$80	                LDA	#$80
.8fb5		85 7a		sta $7a		                STA	tmpscrlo
.8fb7						up1:
.8fb7		a5 7c		lda $7c		                LDA	poslo
.8fb9		38		sec		                SEC
.8fba		e5 7a		sbc $7a		                SBC	tmpscrlo
.8fbc		85 7c		sta $7c		                STA	poslo
.8fbe		b0 de		bcs $8f9e	                BCS	mmloop
.8fc0						up2:
.8fc0		c6 7d		dec $7d		                DEC	poshi
.8fc2		60		rts		                RTS
.8fc3						notup:
.8fc3		e0 09		cpx #$09	                CPX	#$09
.8fc5		d0 52		bne $9019	                BNE	nottab
.8fc7		a2 00		ldx #$00	                LDX	#0
.8fc9		8a		txa		                TXA
.8fca						tabloop:
.8fca		9d 78 7c	sta $7c78,x	                STA	$7C78,X
.8fcd		9d 00 7d	sta $7d00,x	                STA	$7D00,X
.8fd0		9d 00 7e	sta $7e00,x	                STA	$7E00,X
.8fd3		9d 00 7f	sta $7f00,x	                STA	$7F00,X
.8fd6		e8		inx		                INX
.8fd7		d0 f1		bne $8fca	                BNE	tabloop
.8fd9						tabstart:
.8fd9		a5 73		lda $73		                LDA	mem_display
.8fdb		49 ff		eor #$ff	                EOR	#$FF
.8fdd		85 73		sta $73		                STA	mem_display
.8fdf		f0 15		beq $8ff6	                BEQ	tabjmp0
.8fe1		a5 8a		lda $8a		                LDA	mem_xpos
.8fe3		18		clc		                CLC
.8fe4		69 50		adc #$50	                ADC	#$50
.8fe6		85 74		sta $74		                STA	tmp
.8fe8		a5 7c		lda $7c		                LDA	poslo
.8fea		65 74		adc $74		                ADC	tmp
.8fec		85 7c		sta $7c		                STA	poslo
.8fee		90 02		bcc $8ff2	                BCC	tj1
.8ff0		e6 7d		inc $7d		                INC	poshi
.8ff2						tj1:
.8ff2		a9 0b		lda #$0b	                LDA	#11
.8ff4		d0 19		bne $900f	                BNE	tabjmp1
.8ff6						tabjmp0:
.8ff6		20 bb 8e	jsr $8ebb	                JSR	drawband
.8ff9						sub50:
.8ff9		a5 7c		lda $7c		                LDA	poslo
.8ffb		38		sec		                SEC
.8ffc		e9 50		sbc #$50	                SBC	#$50
.8ffe		85 7c		sta $7c		                STA	poslo
.9000		b0 02		bcs $9004	                BCS	tj2
.9002		c6 7d		dec $7d		                DEC	poshi
.9004						tj2:
.9004		20 88 91	jsr $9188	                JSR	round8
.9007		a5 8b		lda $8b		                LDA	mem_hmode
.9009		29 01		and #$01	                AND	#1
.900b		aa		tax		                TAX
.900c		bd a5 91	lda $91a5,x	                LDA	cursor3,X
.900f						tabjmp1:
.900f		8d 48 02	sta $0248	                STA	$248
.9012		8d 20 fe	sta $fe20	                STA	$FE20
.9015		20 36 91	jsr $9136	                JSR	printmode
.9018						qmloop:
.9018		60		rts		                RTS
.9019						nottab:
.9019		e0 88		cpx #$88	                CPX	#$88
.901b		d0 25		bne $9042	                BNE	notleft
.901d						left2:
.901d		24 80		bit $80		                BIT	control
.901f		30 1b		bmi $903c	                BMI	cleft2
.9021		24 73		bit $73		                BIT	mem_display
.9023		d0 f3		bne $9018	                BNE	qmloop
.9025		24 81		bit $81		                BIT	shift
.9027		30 0e		bmi $9037	                BMI	sleft
.9029		a5 8a		lda $8a		                LDA	mem_xpos
.902b		f0 03		beq $9030	                BEQ	ljmp0
.902d		c6 8a		dec $8a		                DEC	mem_xpos
.902f		60		rts		                RTS
.9030						ljmp0:
.9030		a9 07		lda #$07	                LDA	#7
.9032		85 8a		sta $8a		                STA	mem_xpos
.9034		4c b7 8f	jmp $8fb7	                JMP	up1
.9037						sleft:
.9037		a9 00		lda #$00	                LDA	#0
.9039		85 8a		sta $8a		                STA	mem_xpos
.903b		60		rts		                RTS
.903c						cleft2:
.903c		c6 79		dec $79		                DEC	romid
.903e		20 cf 90	jsr $90cf	                JSR	romtitle
.9041		60		rts		                RTS
.9042						notleft:
.9042		e0 89		cpx #$89	                CPX	#$89
.9044		d0 2b		bne $9071	                BNE	notright
.9046		24 80		bit $80		                BIT	control
.9048		30 1d		bmi $9067	                BMI	cright2
.904a		24 73		bit $73		                BIT	mem_display
.904c		d0 ca		bne $9018	                BNE	qmloop
.904e		24 81		bit $81		                BIT	shift
.9050		30 10		bmi $9062	                BMI	sright
.9052						right2:
.9052		a5 8a		lda $8a		                LDA	mem_xpos
.9054		c9 07		cmp #$07	                CMP	#7
.9056		f0 03		beq $905b	                BEQ	rjmp0
.9058		e6 8a		inc $8a		                INC	mem_xpos
.905a		60		rts		                RTS
.905b						rjmp0:
.905b		a9 00		lda #$00	                LDA	#0
.905d		85 8a		sta $8a		                STA	mem_xpos
.905f		4c 93 8f	jmp $8f93	                JMP	down1
.9062						sright:
.9062		a9 07		lda #$07	                LDA	#7
.9064		85 8a		sta $8a		                STA	mem_xpos
.9066		60		rts		                RTS
.9067						cright2:
.9067		e6 79		inc $79		                INC	romid
.9069		20 cf 90	jsr $90cf	                JSR	romtitle
.906c		60		rts		                RTS
.906d		24 73		bit $73		                BIT	mem_display
.906f		d0 a7		bne $9018	                BNE	qmloop
.9071						notright:
.9071		e0 87		cpx #$87	                CPX	#$87
.9073		d0 15		bne $908a	                BNE	notcopy
.9075		a5 8b		lda $8b		                LDA	mem_hmode
.9077		49 ff		eor #$ff	                EOR	#$FF
.9079		85 8b		sta $8b		                STA	mem_hmode
.907b		29 01		and #$01	                AND	#1
.907d		aa		tax		                TAX
.907e		bd a5 91	lda $91a5,x	                LDA	cursor3,X
.9081		8d 48 02	sta $0248	                STA	$248
.9084		8d 20 fe	sta $fe20	                STA	$FE20
.9087		4c 36 91	jmp $9136	                JMP	printmode
.908a						notcopy:
.908a		a9 50		lda #$50	                LDA	#$50
.908c		18		clc		                CLC
.908d		65 8a		adc $8a		                ADC	mem_xpos
.908f		a8		tay		                TAY
.9090		8a		txa		                TXA
.9091		24 8b		bit $8b		                BIT	mem_hmode
.9093		30 30		bmi $90c5	                BMI	sascii
.9095		c9 30		cmp #$30	                CMP	#'0'
.9097		90 22		bcc $90bb	                BCC	storeend
.9099		c9 47		cmp #$47	                CMP	#'G'
.909b		b0 1e		bcs $90bb	                BCS	storeend
.909d		c9 3a		cmp #$3a	                CMP	#':'
.909f		b0 1b		bcs $90bc	                BCS	checkAtoF
.90a1		e9 2f		sbc #$2f	                SBC	#$2F
.90a3						storeshift:
.90a3		85 74		sta $74		                STA	tmp
.90a5		20 d8 b0	jsr $b0d8	                JSR	rdposx
.90a8		0a		asl a		                ASL	A
.90a9		0a		asl a		                ASL	A
.90aa		0a		asl a		                ASL	A
.90ab		0a		asl a		                ASL	A
.90ac		05 74		ora $74		                ORA	tmp
.90ae		20 08 b1	jsr $b108	                JSR	wrposx
.90b1		24 72		bit $72		                BIT	toggle
.90b3		30 13		bmi $90c8	                BMI	storeright
.90b5		a9 ff		lda #$ff	                LDA	#$FF
.90b7		85 72		sta $72		                STA	toggle
.90b9		f0 0d		beq $90c8	                BEQ	storeright
.90bb						storeend:
.90bb		60		rts		                RTS
.90bc						checkAtoF:
.90bc		c9 41		cmp #$41	                CMP	#'A'
.90be		90 fb		bcc $90bb	                BCC	storeend
.90c0		e9 37		sbc #$37	                SBC	#$37
.90c2		4c a3 90	jmp $90a3	                JMP	storeshift
.90c5						sascii:
.90c5		20 08 b1	jsr $b108	                JSR	wrposx
.90c8						storeright:
.90c8		a9 00		lda #$00	                LDA	#$00
.90ca		85 72		sta $72		                STA	toggle
.90cc		4c 52 90	jmp $9052	                JMP	right2
.90cf						romtitle:
.90cf		24 79		bit $79		                bit romid
.90d1		70 52		bvs $9125	                bvs tube
.90d3						rom:
.90d3		a5 79		lda $79		                LDA	romid
.90d5		29 0f		and #$0f	                AND	#romid_rom_mask
.90d7		aa		tax		                TAX
.90d8		bd 5e 85	lda $855e,x	                LDA	num,X
.90db		8d 0f 7c	sta $7c0f	                STA	$7C0F
.90de		a5 7c		lda $7c		                LDA	poslo
.90e0		48		pha		                PHA
.90e1		a5 7d		lda $7d		                LDA	poshi
.90e3		48		pha		                PHA
.90e4		20 52 8a	jsr $8a52	                JSR	beginrom
.90e7		a0 07		ldy #$07	                LDY	#7
.90e9		20 d8 b0	jsr $b0d8	                JSR	rdposx
.90ec		a8		tay		                TAY
.90ed		a2 03		ldx #$03	                LDX	#3
.90ef		a5 79		lda $79		                LDA	romid
.90f1		18		clc		                CLC
.90f2		20 df 89	jsr $89df	                JSR	checkrom
.90f5		d0 1c		bne $9113	                BNE	notarom
.90f7		20 52 8a	jsr $8a52	                JSR	beginrom
.90fa		a0 09		ldy #$09	                LDY	#9
.90fc						rtloop:
.90fc		20 d8 b0	jsr $b0d8	                JSR	rdposx
.90ff		9d 13 7c	sta $7c13,x	                STA	$7C13,X
.9102		c8		iny		                INY
.9103		e8		inx		                INX
.9104		e0 15		cpx #$15	                CPX	#$15
.9106		f0 16		beq $911e	                BEQ	romend
.9108		c9 00		cmp #$00	                CMP	#0
.910a		d0 f0		bne $90fc	                BNE	rtloop
.910c		a9 98		lda #$98	                LDA	#152
.910e		9d 13 7c	sta $7c13,x	                STA	$7C13,X
.9111		d0 0b		bne $911e	                BNE	romend
.9113						notarom:
.9113		a2 0a		ldx #$0a	                LDX	#10
.9115						narloop:
.9115		bd 3e 8a	lda $8a3e,x	                LDA	narmsg,X
.9118		9d 13 7c	sta $7c13,x	                STA	$7C13,X
.911b		ca		dex		                DEX
.911c		10 f7		bpl $9115	                BPL	narloop
.911e						romend:
.911e		68		pla		                PLA
.911f		85 7d		sta $7d		                STA	poshi
.9121		68		pla		                PLA
.9122		85 7c		sta $7c		                STA	poslo
.9124		60		rts		                RTS
.9125						tube:
.9125		20 6f b1	jsr $b16f	                jsr get_tube_flag
.9128		f0 a9		beq $90d3	                beq rom         ;taken if Tube isn't actually active
.912a		a2 07		ldx #$07	                ldx #parasitemsg.end-parasitemsg-1
.912c						tube_loop:
.912c		bd c6 91	lda $91c6,x	                lda parasitemsg,X
.912f		9d 0f 7c	sta $7c0f,x	                sta $7c0f,x
.9132		ca		dex		                dex
.9133		10 f7		bpl $912c	                bpl tube_loop
.9135		60		rts		                rts
.9136						printmode:
.9136		24 73		bit $73		                BIT	mem_display
.9138		10 04		bpl $913e	                BPL	prmd0
.913a		a2 00		ldx #$00	                LDX	#0
.913c		70 0a		bvs $9148	                BVS	printit
.913e						prmd0:
.913e		24 8b		bit $8b		                BIT	mem_hmode
.9140		30 04		bmi $9146	                BMI	prmd1
.9142		a2 0c		ldx #$0c	                LDX	#hexmsg-dismsg
.9144		50 02		bvc $9148	                BVC	printit
.9146						prmd1:
.9146		a2 18		ldx #$18	                LDX	#ascmsg-dismsg
.9148						printit:
.9148		a0 00		ldy #$00	                LDY	#0
.914a						pil:
.914a		bd a7 91	lda $91a7,x	                LDA	dismsg,X
.914d		99 37 7c	sta $7c37,y	                STA	$7C37,Y
.9150		e8		inx		                INX
.9151		c8		iny		                INY
.9152		c9 00		cmp #$00	                CMP	#0
.9154		d0 f4		bne $914a	                BNE	pil
.9156		60		rts		                RTS
.9157						mdispa:
.9157		a9 00		lda #$00	                LDA	#$00
.9159		4c 5e 91	jmp $915e	                JMP	memcompa
.915c						mempa:
.915c		a9 ff		lda #$ff	                LDA	#$FF
.915e						memcompa:
.915e		85 73		sta $73		                STA	mem_display
.9160		20 e6 86	jsr $86e6	                JSR	rdnum
.9163		d0 12		bne $9177	                BNE	mdefaults
.9165		a5 84		lda $84		                LDA	clibuf
.9167		85 7c		sta $7c		                STA	poslo
.9169		a5 85		lda $85		                LDA	clibuf+1
.916b		85 7d		sta $7d		                STA	poshi
.916d		20 e6 86	jsr $86e6	                JSR	rdnum
.9170		d0 0e		bne $9180	                BNE	mdefaults2
.9172		a5 84		lda $84		                LDA	clibuf
.9174		4c 83 91	jmp $9183	                jmp got_tmp
.9177						mdefaults:
.9177		a9 00		lda #$00	                lda #0
.9179		85 7c		sta $7c		                sta poslo
.917b		20 0f b2	jsr $b20f	                jsr get_PAGE_MSB
.917e		85 7d		sta $7d		                sta poshi
.9180						mdefaults2:
.9180		20 04 b2	jsr $b204	                jsr get_default_romid
.9183						got_tmp:
.9183		85 74		sta $74		                STA	tmp
.9185		4c c6 8e	jmp $8ec6	                JMP	start
.9188						round8:
.9188		a5 7c		lda $7c		                LDA	poslo
.918a		48		pha		                PHA
.918b		29 f8		and #$f8	                AND	#$F8
.918d		85 7c		sta $7c		                STA	poslo
.918f		68		pla		                PLA
.9190		29 07		and #$07	                AND	#$7
.9192		85 8a		sta $8a		                STA	mem_xpos
.9194		60		rts		                RTS
.9195						hhex:
>9195		10 13 16 19 1c 1f 22 25		                .byte	$10,$13,$16,$19,$1C,$1F,$22,$25
.919d						hascii:
>919d		28 29 2a 2b 2c 2d 2e 2f		                .byte	$28,$29,$2A,$2B,$2C,$2D,$2E,$2F
.91a5						cursor3:
>91a5		cf 4b				                .word	$4BCF
.91a7						dismsg:
>91a7		44 69 73 61 73 73 65 6d		                .text	"Disassembly",0
>91af		62 6c 79 00
.91b3						hexmsg:
>91b3		48 65 78 61 64 65 63 69		                .text	"Hexadecimal",0
>91bb		6d 61 6c 00
.91bf						ascmsg:
>91bf		41 53 43 49 49			                .text	"ASCII"
>91c4		98				                .byte	152
>91c5		00				                .byte	0
.91c6						parasitemsg:
>91c6		50 61 72 61 73 69 74 65		                .text "Parasite"
.91ce						end:

;******  Return to file: hackrom.s65


;******  Processing file: memcode.s65

.91ce						op:
>91ce		0d a7 1c 1c			                .byte	$0D,$A7,$1C,$1C
>91d2		3e 27 02 1c			                .byte	$3E,$27,$02,$1C
>91d6		29 a7 82 9c			                .byte	$29,$A7,$82,$9C
>91da		3e 27 02 03			                .byte	$3E,$27,$02,$03
>91de		0b 27 a7 1c			                .byte	$0B,$27,$A7,$1C
>91e2		3d a7 82 1c			                .byte	$3D,$A7,$82,$1C
>91e6		10 27 9d 9c			                .byte	$10,$27,$9D,$9C
>91ea		3d a7 82 83			                .byte	$3D,$A7,$82,$83
>91ee		21 81 1c 1c			                .byte	$21,$81,$1C,$1C
>91f2		08 01 30 1c			                .byte	$08,$01,$30,$1C
>91f6		2d 81 b0 9c			                .byte	$2D,$81,$B0,$9C
>91fa		08 01 30 03			                .byte	$08,$01,$30,$03
>91fe		09 01 81 1c			                .byte	$09,$01,$81,$1C
>9202		88 81 b0 1c			                .byte	$88,$81,$B0,$1C
>9206		35 01 98 9c			                .byte	$35,$01,$98,$9C
>920a		88 81 b0 83			                .byte	$88,$81,$B0,$83
>920e		32 9b 1c 1c			                .byte	$32,$9B,$1C,$1C
>9212		1c 1b 25 1c			                .byte	$1C,$1B,$25,$1C
>9216		28 9b a5 9c			                .byte	$28,$9B,$A5,$9C
>921a		20 1b 25 03			                .byte	$20,$1B,$25,$03
>921e		0e 1b 9b 1c			                .byte	$0E,$1B,$9B,$1C
>9222		1c 9b a5 1c			                .byte	$1C,$9B,$A5,$1C
>9226		12 1b 2b 9c			                .byte	$12,$1B,$2B,$9C
>922a		9c 9b a5 83			                .byte	$9C,$9B,$A5,$83
>922e		33 80 1c 1c			                .byte	$33,$80,$1C,$1C
>9232		13 00 31 1c			                .byte	$13,$00,$31,$1C
>9236		2c 80 b1 9c			                .byte	$2C,$80,$B1,$9C
>923a		a0 00 31 03			                .byte	$A0,$00,$31,$03
>923e		0f 00 80 1c			                .byte	$0F,$00,$80,$1C
>9242		93 80 b1 1c			                .byte	$93,$80,$B1,$1C
>9246		37 00 2f 1c			                .byte	$37,$00,$2F,$1C
>924a		20 80 b1 83			                .byte	$20,$80,$B1,$83
>924e		0c b8 1c 1c			                .byte	$0C,$B8,$1C,$1C
>9252		3a 38 39 1c			                .byte	$3A,$38,$39,$1C
>9256		1a 88 40 9c			                .byte	$1A,$88,$40,$9C
>925a		3a 38 39 04			                .byte	$3A,$38,$39,$04
>925e		05 38 b8 1c			                .byte	$05,$38,$B8,$1C
>9262		ba b8 39 1c			                .byte	$BA,$B8,$39,$1C
>9266		42 38 41 9c			                .byte	$42,$38,$41,$9C
>926a		13 b8 93 84			                .byte	$13,$B8,$93,$84
>926e		a4 a2 a3 1c			                .byte	$A4,$A2,$A3,$1C
>9272		24 22 23 1c			                .byte	$24,$22,$23,$1C
>9276		3c a2 3b 9c			                .byte	$3C,$A2,$3B,$9C
>927a		24 22 23 04			                .byte	$24,$22,$23,$04
>927e		06 22 a2 1c			                .byte	$06,$22,$A2,$1C
>9282		a4 a2 23 1c			                .byte	$A4,$A2,$23,$1C
>9286		14 22 3f 9c			                .byte	$14,$22,$3F,$9C
>928a		a4 a2 23 84			                .byte	$A4,$A2,$23,$84
>928e		97 95 1c 1c			                .byte	$97,$95,$1C,$1C
>9292		17 15 18 1c			                .byte	$17,$15,$18,$1C
>9296		1f 95 19 9c			                .byte	$1F,$95,$19,$9C
>929a		17 15 18 04			                .byte	$17,$15,$18,$04
>929e		0a 15 95 1c			                .byte	$0A,$15,$95,$1C
>92a2		1c 95 98 1c			                .byte	$1C,$95,$98,$1C
>92a6		11 15 2a 9c			                .byte	$11,$15,$2A,$9C
>92aa		9c 95 98 84			                .byte	$9C,$95,$98,$84
>92ae		96 b4 1c 1c			                .byte	$96,$B4,$1C,$1C
>92b2		16 34 1d 1c			                .byte	$16,$34,$1D,$1C
>92b6		1e b4 26 9c			                .byte	$1E,$B4,$26,$9C
>92ba		16 34 1d 04			                .byte	$16,$34,$1D,$04
>92be		07 34 1c 1c			                .byte	$07,$34,$1C,$1C
>92c2		1c b4 9d 1c			                .byte	$1C,$B4,$9D,$1C
>92c6		36 34 2e 9c			                .byte	$36,$34,$2E,$9C
>92ca		9c b4 9d 84			                .byte	$9C,$B4,$9D,$84
>92ce		30 77 11 71			                .byte	$30,$77,$11,$71
>92d2		00 74 22 82			                .byte	$00,$74,$22,$82
>92d6		45 76 11 71			                .byte	$45,$76,$11,$71
>92da		30 74 22 82			                .byte	$30,$74,$22,$82
>92de		32 77 11 71			                .byte	$32,$77,$11,$71
>92e2		00 74 22 92			                .byte	$00,$74,$22,$92
>92e6		45 76 11 71			                .byte	$45,$76,$11,$71
>92ea		30 74 22 92			                .byte	$30,$74,$22,$92
>92ee		30 77 17 71			                .byte	$30,$77,$17,$71
>92f2		00 74 22 a2			                .byte	$00,$74,$22,$A2
>92f6		45 76 17 71			                .byte	$45,$76,$17,$71
>92fa		30 70 27 a2			                .byte	$30,$70,$27,$A2
>92fe		30 77 11 71			                .byte	$30,$77,$11,$71
>9302		00 74 25 b2			                .byte	$00,$74,$25,$B2
>9306		45 76 11 71			                .byte	$45,$76,$11,$71
>930a		30 70 2c b2			                .byte	$30,$70,$2C,$B2
>930e		35 77 11 71			                .byte	$35,$77,$11,$71
>9312		00 70 22 82			                .byte	$00,$70,$22,$82
>9316		45 76 11 76			                .byte	$45,$76,$11,$76
>931a		30 70 22 82			                .byte	$30,$70,$22,$82
>931e		30 70 11 71			                .byte	$30,$70,$11,$71
>9322		00 70 22 92			                .byte	$00,$70,$22,$92
>9326		45 76 11 76			                .byte	$45,$76,$11,$76
>932a		30 70 22 93			                .byte	$30,$70,$22,$93
>932e		30 77 11 71			                .byte	$30,$77,$11,$71
>9332		00 70 22 a2			                .byte	$00,$70,$22,$A2
>9336		45 76 17 71			                .byte	$45,$76,$17,$71
>933a		30 70 27 a2			                .byte	$30,$70,$27,$A2
>933e		30 77 11 71			                .byte	$30,$77,$11,$71
>9342		00 70 22 b2			                .byte	$00,$70,$22,$B2
>9346		45 77 17 71			                .byte	$45,$77,$17,$71
>934a		30 70 27 b2			                .byte	$30,$70,$27,$B2
=37582						mode	=	op+$100

;******  Return to file: hackrom.s65


;******  Processing file: memcoms.s65

.934e						mrdnum:
.934e		8a		txa		                TXA
.934f		48		pha		                PHA
.9350		20 e6 86	jsr $86e6	                JSR	rdnum
.9353		d0 0d		bne $9362	                BNE	memoryerr
.9355		68		pla		                PLA
.9356		aa		tax		                TAX
.9357		a5 84		lda $84		                LDA	clibuf
.9359		95 74		sta $74,x	                STA	membuf,X
.935b		a5 85		lda $85		                LDA	clibuf+1
.935d		e8		inx		                INX
.935e		95 74		sta $74,x	                STA	membuf,X
.9360		e8		inx		                INX
.9361		60		rts		                RTS
.9362						memoryerr:
.9362		4c 9c 81	jmp $819c	                JMP	synerr
.9365						rdoptrom:
.9365		8a		txa		                TXA
.9366		48		pha		                PHA
.9367		20 e6 86	jsr $86e6	                JSR	rdnum
.936a		f0 09		beq $9375	                BEQ	rdor0
.936c		68		pla		                PLA
.936d		aa		tax		                TAX
.936e		20 04 b2	jsr $b204	                jsr get_default_romid ;LDA	$F4
.9371		95 74		sta $74,x	                STA	membuf,X
.9373		e8		inx		                INX
.9374		60		rts		                RTS
.9375						rdor0:
.9375		68		pla		                PLA
.9376		aa		tax		                TAX
.9377		a5 84		lda $84		                LDA	clibuf
.9379		95 74		sta $74,x	                STA	membuf,X
.937b		e8		inx		                INX
.937c		a9 00		lda #$00	                LDA	#$00
.937e		60		rts		                RTS
.937f						memorycom:
.937f		20 9e 93	jsr $939e	                JSR	memorycom1
.9382						memorycom2:
.9382		20 4e 93	jsr $934e	                JSR	mrdnum
.9385		20 65 93	jsr $9365	                JSR	rdoptrom
.9388						rdoptrom2:
.9388		d0 06		bne $9390	                BNE	rdor2
.938a		20 65 93	jsr $9365	                JSR	rdoptrom
.938d		f0 05		beq $9394	                BEQ	rdor3
.938f		ca		dex		                DEX
.9390						rdor2:
.9390		b5 74		lda $74,x	                LDA	membuf,X
.9392		95 75		sta $75,x	                STA	membuf+1,X
.9394						rdor3:
.9394		a2 07		ldx #$07	                LDX	#$07
.9396						memr:
.9396		b5 74		lda $74,x	                LDA	membuf,X
.9398		95 87		sta $87,x	                STA	block,X
.939a		ca		dex		                DEX
.939b		10 f9		bpl $9396	                BPL	memr
.939d		60		rts		                RTS
.939e						memorycom1:
.939e		a2 00		ldx #$00	                LDX	#$00
.93a0		20 4e 93	jsr $934e	                JSR	mrdnum
.93a3		20 4e 93	jsr $934e	                JSR	mrdnum
.93a6		38		sec		                SEC
.93a7		a5 76		lda $76		                LDA	mfto
.93a9		e5 74		sbc $74		                SBC	mffrom
.93ab		85 76		sta $76		                STA	mfto
.93ad		a5 77		lda $77		                LDA	mfto+1
.93af		e5 75		sbc $75		                SBC	mffrom+1
.93b1		85 77		sta $77		                STA	mfto+1
.93b3		60		rts		                RTS
.93b4						memorycom3:
.93b4		20 9e 93	jsr $939e	                JSR	memorycom1
.93b7		20 db 95	jsr $95db	                JSR	fill
.93ba		48		pha		                PHA
.93bb		08		php		                PHP
.93bc		a2 06		ldx #$06	                LDX	#mfbank-mfbuf
.93be		a5 f4		lda $f4		                LDA	$F4
.93c0		28		plp		                PLP
.93c1		20 88 93	jsr $9388	                JSR	rdoptrom2
.93c4		68		pla		                PLA
.93c5		85 7b		sta $7b		                STA	mflen
.93c7		a5 f2		lda $f2		                LDA	$F2
.93c9		85 78		sta $78		                STA	mfdata
.93cb		a5 f3		lda $f3		                LDA	$F3
.93cd		85 79		sta $79		                STA	mfdata+1
.93cf		4c 94 93	jmp $9394	                JMP	rdor3
.93d2						msearchpa:
.93d2		20 b4 93	jsr $93b4	                JSR	memorycom3
.93d5						msrchpal:
.93d5		20 7d 95	jsr $957d	                JSR	msearch
.93d8		90 21		bcc $93fb	                BCC	msrchpae
.93da		38		sec		                SEC
.93db		a5 87		lda $87		                LDA	mSms
.93dd		e9 01		sbc #$01	                SBC	#$01
.93df		85 80		sta $80		                STA	numlo
.93e1		a5 88		lda $88		                LDA	mSms+1
.93e3		e9 00		sbc #$00	                SBC	#$00
.93e5		85 81		sta $81		                STA	numhi
.93e7		20 91 89	jsr $8991	                JSR	ldigit
.93ea		a9 20		lda #$20	                LDA	#' '
.93ec		20 ee ff	jsr $ffee	                JSR	$FFEE
.93ef		a5 8a		lda $8a		                LDA	mSml+1
.93f1		c9 ff		cmp #$ff	                CMP	#$FF
.93f3		d0 e0		bne $93d5	                BNE	msrchpal
.93f5		a5 89		lda $89		                LDA	mSml
.93f7		c9 ff		cmp #$ff	                CMP	#$FF
.93f9		d0 da		bne $93d5	                BNE	msrchpal
.93fb						msrchpae:
.93fb		4c e7 ff	jmp $ffe7	                JMP	$FFE7
.93fe						mfillpa:
.93fe		20 b4 93	jsr $93b4	                JSR	memorycom3
.9401		4c 4f 95	jmp $954f	                JMP	mfill
.9404						mcopypa:
.9404		20 7f 93	jsr $937f	                JSR	memorycom
.9407		4c 34 94	jmp $9434	                JMP	mmove
.940a						mswappa:
.940a		20 7f 93	jsr $937f	                JSR	memorycom
.940d		4c 1e 95	jmp $951e	                JMP	mswap
.9410						mcmppa:
.9410		20 7f 93	jsr $937f	                JSR	memorycom
.9413		20 dd 94	jsr $94dd	                JSR	mcmp
.9416		b0 01		bcs $9419	                BCS	mcdiff
.9418		60		rts		                RTS
.9419						mcdiff:
.9419		20 af 89	jsr $89af	                JSR	pcprint
>941c		44 69 66 66 65 72 20 61		                .text	"Differ at ",0
>9424		74 20 00
.9427		a5 88		lda $88		                LDA	mc1s+1
.9429		20 98 89	jsr $8998	                JSR	wdigit
.942c		a5 87		lda $87		                LDA	mc1s
.942e		20 98 89	jsr $8998	                JSR	wdigit
.9431		4c e7 ff	jmp $ffe7	                JMP	$FFE7

;******  Return to file: hackrom.s65


;******  Processing file: memcom.s65

.9434						mmove:
.9434		20 af 94	jsr $94af	                JSR	mmcom5
.9437		a5 8c		lda $8c		                LDA	mmds+1
.9439		c5 88		cmp $88		                CMP	mmss+1
.943b		90 23		bcc $9460	                BCC	mmfor
.943d		a5 8b		lda $8b		                LDA	mmds
.943f		c5 87		cmp $87		                CMP	mmss
.9441		90 1d		bcc $9460	                BCC	mmfor
.9443						mmback:
.9443		a2 00		ldx #$00	                LDX	#mmss-block
.9445		20 70 94	jsr $9470	                JSR	mmcom
.9448		a2 04		ldx #$04	                LDX	#mmds-block
.944a		20 70 94	jsr $9470	                JSR	mmcom
.944d		20 a0 94	jsr $94a0	                JSR	mmcom3
.9450						mmback0:
.9450		20 7e 94	jsr $947e	                JSR	mmcom2
.9453		a2 04		ldx #$04	                LDX	#mmds-block
.9455		20 b7 94	jsr $94b7	                JSR	mmcom4
.9458		a2 00		ldx #$00	                LDX	#mmss-block
.945a		20 b7 94	jsr $94b7	                JSR	mmcom4
.945d		4c 50 94	jmp $9450	                JMP	mmback0
.9460						mmfor:
.9460		20 a0 94	jsr $94a0	                JSR	mmcom3
.9463						mmfor0:
.9463		20 7e 94	jsr $947e	                JSR	mmcom2
.9466		c8		iny		                INY
.9467		d0 fa		bne $9463	                BNE	mmfor0
.9469		e6 88		inc $88		                INC	mmss+1
.946b		e6 8c		inc $8c		                INC	mmds+1
.946d		4c 63 94	jmp $9463	                JMP	mmfor0
.9470						mmcom:
.9470		18		clc		                CLC
.9471		b5 87		lda $87,x	                LDA	block,X
.9473		65 89		adc $89		                ADC	mmsl
.9475		95 87		sta $87,x	                STA	block,X
.9477		b5 88		lda $88,x	                LDA	block+1,X
.9479		65 8a		adc $8a		                ADC	mmsl+1
.947b		95 88		sta $88,x	                STA	block+1,X
.947d		60		rts		                RTS
.947e						mmcom2:
.947e		a5 8a		lda $8a		                LDA	mmsl+1
.9480		d0 04		bne $9486	                BNE	mmfb2
.9482		a5 89		lda $89		                LDA	mmsl
.9484		f0 17		beq $949d	                BEQ	mmend
.9486						mmfb2:
.9486		20 c3 94	jsr $94c3	                JSR	rdwr1s
.9489		20 d8 b0	jsr $b0d8	                JSR	rdposx
.948c		85 86		sta $86		                STA	memcom_mmtmp
.948e						mscom:
.948e		20 d0 94	jsr $94d0	                JSR	rdwr2s
.9491		a5 86		lda $86		                LDA	memcom_mmtmp
.9493						mfcom:
.9493		20 08 b1	jsr $b108	                JSR	wrposx
.9496		e6 89		inc $89		                INC	mmsl
.9498		d0 02		bne $949c	                BNE	mmfb3
.949a		e6 8a		inc $8a		                INC	mmsl+1
.949c						mmfb3:
.949c		60		rts		                RTS
.949d						mmend:
.949d		68		pla		                PLA
.949e		68		pla		                PLA
.949f		60		rts		                RTS
.94a0						mmcom3:
.94a0		a0 00		ldy #$00	                LDY	#$00
.94a2		a5 89		lda $89		                LDA	mmsl
.94a4		49 ff		eor #$ff	                EOR	#$FF
.94a6		85 89		sta $89		                STA	mmsl
.94a8		a5 8a		lda $8a		                LDA	mmsl+1
.94aa		49 ff		eor #$ff	                EOR	#$FF
.94ac		85 8a		sta $8a		                STA	mmsl+1
.94ae		60		rts		                RTS
.94af						mmcom5:
.94af		a2 02		ldx #$02	                LDX	#mclen-block
.94b1		20 b7 94	jsr $94b7	                JSR	mmcom4
.94b4		4c 5b b1	jmp $b15b	                JMP	reloc
.94b7						mmcom4:
.94b7		38		sec		                SEC
.94b8		b5 87		lda $87,x	                LDA	block,X
.94ba		e9 01		sbc #$01	                SBC	#$01
.94bc		95 87		sta $87,x	                STA	block,X
.94be		b0 02		bcs $94c2	                BCS	mmcom41
.94c0		d6 88		dec $88,x	                DEC	block+1,X
.94c2						mmcom41:
.94c2		60		rts		                RTS
.94c3						rdwr1s:
.94c3		a5 87		lda $87		                LDA	mmss	; block+0/1
.94c5		85 7c		sta $7c		                STA	poslo
.94c7		a5 88		lda $88		                LDA	mmss+1
.94c9		85 7d		sta $7d		                STA	poshi
.94cb		a5 8d		lda $8d		                LDA	mmsr; block+6
.94cd		85 79		sta $79		                STA	romid
.94cf		60		rts		                RTS
.94d0						rdwr2s:
.94d0		a5 8b		lda $8b		                LDA	ms2s; block+4/5
.94d2		85 7c		sta $7c		                STA	poslo
.94d4		a5 8c		lda $8c		                LDA	ms2s+1
.94d6		85 7d		sta $7d		                STA	poshi
.94d8		a5 8e		lda $8e		                LDA	ms2r; block+7
.94da		85 79		sta $79		                STA	romid
.94dc						msend:
.94dc		60		rts		                RTS
.94dd						mcmp:
.94dd		20 5b b1	jsr $b15b	                JSR	reloc
.94e0		a0 00		ldy #$00	                LDY	#$00
.94e2						mc1:
.94e2		a5 8a		lda $8a		                LDA	mclen+1
.94e4		d0 04		bne $94ea	                BNE	mc2
.94e6		a5 89		lda $89		                LDA	mclen
.94e8		f0 1d		beq $9507	                BEQ	mcend2
.94ea						mc2:
.94ea		20 c3 94	jsr $94c3	                JSR	rdwr1s
.94ed		20 d8 b0	jsr $b0d8	                JSR	rdposx
.94f0		85 86		sta $86		                STA	memcom_mmtmp
.94f2		20 d0 94	jsr $94d0	                JSR	rdwr2s
.94f5		20 d8 b0	jsr $b0d8	                JSR	rdposx
.94f8		c5 86		cmp $86		                CMP	memcom_mmtmp
.94fa		d0 16		bne $9512	                BNE	mcend
.94fc		c8		iny		                INY
.94fd		f0 0a		beq $9509	                BEQ	mcj1
.94ff		c4 89		cpy $89		                CPY	mclen
.9501		d0 df		bne $94e2	                BNE	mc1
.9503		a5 8a		lda $8a		                LDA	mclen+1
.9505		d0 db		bne $94e2	                BNE	mc1
.9507						mcend2:
.9507		18		clc		                CLC
.9508		60		rts		                RTS
.9509						mcj1:
.9509		e6 88		inc $88		                INC	mc1s+1
.950b		e6 8c		inc $8c		                INC	mc2s+1
.950d		c6 8a		dec $8a		                DEC	mclen+1
.950f		4c e2 94	jmp $94e2	                JMP	mc1
.9512						mcend:
.9512		98		tya		                TYA
.9513		18		clc		                CLC
.9514		65 87		adc $87		                ADC	mc1s
.9516		85 87		sta $87		                STA	mc1s
.9518		90 02		bcc $951c	                BCC	mcend3
.951a		e6 88		inc $88		                INC	mc1s+1
.951c						mcend3:
.951c		38		sec		                SEC
.951d		60		rts		                RTS
.951e						mswap:
.951e		20 af 94	jsr $94af	                JSR	mmcom5
.9521		20 a0 94	jsr $94a0	                JSR	mmcom3
.9524						ms1:
.9524		a5 8a		lda $8a		                LDA	mslen+1
.9526		d0 04		bne $952c	                BNE	ms2
.9528		a5 89		lda $89		                LDA	mslen
.952a		f0 b0		beq $94dc	                BEQ	msend
.952c						ms2:
.952c		20 c3 94	jsr $94c3	                JSR	rdwr1s
.952f		20 d8 b0	jsr $b0d8	                JSR	rdposx
.9532		85 86		sta $86		                STA	memcom_mmtmp
.9534		20 d0 94	jsr $94d0	                JSR	rdwr2s
.9537		20 d8 b0	jsr $b0d8	                JSR	rdposx
.953a		48		pha		                PHA
.953b		20 c3 94	jsr $94c3	                JSR	rdwr1s
.953e		68		pla		                PLA
.953f		20 08 b1	jsr $b108	                JSR	wrposx
.9542		20 8e 94	jsr $948e	                JSR	mscom
.9545		c8		iny		                INY
.9546		d0 dc		bne $9524	                BNE	ms1
.9548		e6 88		inc $88		                INC	ms1s+1
.954a		e6 8c		inc $8c		                INC	ms2s+1
.954c		4c 24 95	jmp $9524	                JMP	ms1
.954f						mfill:
.954f		20 af 94	jsr $94af	                JSR	mmcom5
.9552		20 a0 94	jsr $94a0	                JSR	mmcom3
.9555		a2 00		ldx #$00	                LDX	#$00
.9557						mfill0:
.9557		a5 89		lda $89		                LDA	mfml
.9559		d0 04		bne $955f	                BNE	mfill1
.955b		a5 8a		lda $8a		                LDA	mfml+1
.955d		f0 1d		beq $957c	                BEQ	mfillend
.955f						mfill1:
.955f		84 86		sty $86		                STY	memcom_mmtmp
.9561		20 c3 94	jsr $94c3	                JSR	rdwr1s
.9564		8a		txa		                TXA
.9565		a8		tay		                TAY
.9566		b1 8b		lda ($8b),y	                LDA	(mfd),Y
.9568		a4 86		ldy $86		                LDY	memcom_mmtmp
.956a		20 93 94	jsr $9493	                JSR	mfcom
.956d		e8		inx		                INX
.956e		e4 8e		cpx $8e		                CPX	mfdl
.9570		d0 02		bne $9574	                BNE	mfill2
.9572		a2 00		ldx #$00	                LDX	#$00
.9574						mfill2:
.9574		c8		iny		                INY
.9575		d0 e0		bne $9557	                BNE	mfill0
.9577		e6 88		inc $88		                INC	mfms+1
.9579		4c 57 95	jmp $9557	                JMP	mfill0
.957c						mfillend:
.957c		60		rts		                RTS
.957d						msearch:
.957d		20 af 94	jsr $94af	                JSR	mmcom5
.9580		20 a0 94	jsr $94a0	                JSR	mmcom3
.9583						msearch3:
.9583		a2 00		ldx #$00	                LDX	#$00
.9585						msearch0:
.9585		a5 89		lda $89		                LDA	mSml
.9587		d0 05		bne $958e	                BNE	msearch1
.9589		a5 8a		lda $8a		                LDA	mSml+1
.958b		18		clc		                CLC
.958c		f0 3f		beq $95cd	                BEQ	msearchend
.958e						msearch1:
.958e		20 c3 94	jsr $94c3	                JSR	rdwr1s
.9591		a0 00		ldy #$00	                LDY	#$00
.9593		20 d8 b0	jsr $b0d8	                JSR	rdposx
.9596		e6 87		inc $87		                INC	mSms
.9598		d0 02		bne $959c	                BNE	msearch9
.959a		e6 88		inc $88		                INC	mSms+1
.959c						msearch9:
.959c		e6 89		inc $89		                INC	mSml
.959e		d0 02		bne $95a2	                BNE	msearch2
.95a0		e6 8a		inc $8a		                INC	mSml+1
.95a2						msearch2:
.95a2		48		pha		                PHA
.95a3		8a		txa		                TXA
.95a4		a8		tay		                TAY
.95a5		68		pla		                PLA
.95a6		d1 8b		cmp ($8b),y	                CMP	(mSd),Y
.95a8		d0 d9		bne $9583	                BNE	msearch3
.95aa		e8		inx		                INX
.95ab		e4 8e		cpx $8e		                CPX	mSdl
.95ad		d0 d6		bne $9585	                BNE	msearch0
.95af						mem_dolen:
.95af		20 a0 94	jsr $94a0	                JSR	mmcom3
.95b2		18		clc		                CLC
.95b3		a5 8e		lda $8e		                LDA	mSdl
.95b5		85 74		sta $74		                STA	tmp
.95b7		65 89		adc $89		                ADC	mSml
.95b9		85 89		sta $89		                STA	mSml
.95bb		90 02		bcc $95bf	                BCC	nearly_done
.95bd		e6 8a		inc $8a		                INC	mSml+1
.95bf						nearly_done:
.95bf		c6 74		dec $74		                DEC	tmp
.95c1		38		sec		                SEC
.95c2		a5 87		lda $87		                LDA	mSms
.95c4		e5 74		sbc $74		                SBC	tmp
.95c6		85 87		sta $87		                STA	mSms
.95c8		b0 03		bcs $95cd	                BCS	msearchend
.95ca		c6 8f		dec $8f		                DEC	mSdl+1
.95cc		38		sec		                SEC
.95cd						msearchend:
.95cd		60		rts		                RTS
.95ce						fillend:
.95ce		88		dey		                DEY
.95cf		b1 f2		lda ($f2),y	                LDA	($F2),Y
.95d1		c8		iny		                INY
.95d2		c9 3b		cmp #$3b	                CMP	#IFS
.95d4		08		php		                PHP
.95d5		84 7b		sty $7b		                STY	memcom_filltmpy1
.95d7		a5 7c		lda $7c		                LDA	memcom_filltmpy2
.95d9		28		plp		                PLP
.95da		60		rts		                RTS
.95db						fill:
.95db		a9 00		lda #$00	                LDA	#$00
.95dd		85 7c		sta $7c		                STA	memcom_filltmpy2
.95df						fillx:
.95df		20 df 86	jsr $86df	                JSR	rdstrnum
.95e2		d0 ea		bne $95ce	                BNE	fillend
.95e4		90 17		bcc $95fd	                BCC	fillnum
.95e6						fill0:
.95e6		b1 f2		lda ($f2),y	                LDA	($F2),Y
.95e8		c8		iny		                INY
.95e9		84 7b		sty $7b		                STY	memcom_filltmpy1
.95eb		a4 7c		ldy $7c		                LDY	memcom_filltmpy2
.95ed		91 f2		sta ($f2),y	                STA	($F2),Y
.95ef		c8		iny		                INY
.95f0		84 7c		sty $7c		                STY	memcom_filltmpy2
.95f2		a4 7b		ldy $7b		                LDY	memcom_filltmpy1
.95f4		c4 71		cpy $71		                CPY	common_endstr
.95f6		90 ee		bcc $95e6	                BCC	fill0
.95f8		a4 70		ldy $70		                LDY	common_newy
.95fa		4c df 95	jmp $95df	                JMP	fillx
.95fd						fillnum:
.95fd		98		tya		                TYA
.95fe		48		pha		                PHA
.95ff		a4 7c		ldy $7c		                LDY	memcom_filltmpy2
.9601		a2 03		ldx #$03	                LDX	#$03
.9603						fillnum0:
.9603		b5 84		lda $84,x	                LDA	clibuf,X
.9605		d0 03		bne $960a	                BNE	fillnum1
.9607		ca		dex		                DEX
.9608		d0 f9		bne $9603	                BNE	fillnum0
.960a						fillnum1:
.960a		b5 84		lda $84,x	                LDA	clibuf,X
.960c		91 f2		sta ($f2),y	                STA	($F2),Y
.960e		c8		iny		                INY
.960f		ca		dex		                DEX
.9610		10 f8		bpl $960a	                BPL	fillnum1
.9612		84 7c		sty $7c		                STY	memcom_filltmpy2
.9614		68		pla		                PLA
.9615		a8		tay		                TAY
.9616		4c df 95	jmp $95df	                JMP	fillx

;******  Return to file: hackrom.s65


;******  Processing file: discom.s65

.9619						msg_point:
>9619		45 96				                .word	e_not_found
>961b		4f 96				                .word	e_del_data
>961d		f9 8a				                .word	clock_error+4
>961f		09 8b				                .word	sector_id_err+4
>9621		21 8b				                .word	data_crc_error+4
>9623		34 8b				                .word	drv_not_rdy+4
>9625		48 8b				                .word	write_protect+4
>9627		5a 8b				                .word	trk0_not_fnd+4
>9629		70 8b				                .word	write_fault+4
>962b		80 8b				                .word	sctr_not_fnd+4
.962d						msg_tab:
>962d		00				                .byte	$00
>962e		20				                .byte	$20
>962f		08				                .byte	$08
>9630		0c				                .byte	$0C
>9631		0e				                .byte	$0E
>9632		10				                .byte	$10
>9633		12				                .byte	$12
>9634		14				                .byte	$14
>9635		16				                .byte	$16
>9636		18				                .byte	$18
.9637						msg_tab_end:
=9						num_msgs = msg_tab_end-msg_tab-1
.9637						get_err_entry:
.9637		a0 09		ldy #$09	                LDY	#num_msgs
.9639						demlp0:
.9639		d9 2d 96	cmp $962d,y	                CMP	msg_tab,Y
.963c		f0 03		beq $9641	                BEQ	give_msg
.963e		88		dey		                DEY
.963f		d0 f8		bne $9639	                BNE	demlp0
.9641						give_msg:
.9641		98		tya		                TYA
.9642		0a		asl a		                ASL	A
.9643		a8		tay		                TAY
.9644		60		rts		                RTS
.9645						msg:
.9645						e_not_found:
>9645		4e 6f 74 20 66 6f 75 6e		                .text	"Not found"
>964d		64
>964e		00				                .byte	0
.964f						e_del_data:
>964f		44 65 6c 65 74 65 64 20		                .text	"Deleted data"
>9657		64 61 74 61
>965b		00				                .byte	0
.965c						discerrmsg:
.965c		20 37 96	jsr $9637	                JSR	get_err_entry
.965f		b9 19 96	lda $9619,y	                LDA	msg_point,Y
.9662		aa		tax		                TAX
.9663		b9 1a 96	lda $961a,y	                LDA	msg_point+1,Y
.9666		a8		tay		                TAY
.9667		4c ce 89	jmp $89ce	                JMP	xyprint
.966a						sectsizes:
>966a		00 80 01 00			                .byte	$00,$80,$01,$00
>966e		02 00 04 00			                .byte	$02,$00,$04,$00
>9672		08 00 10 00			                .byte	$08,$00,$10,$00
>9676		20 00 40 00			                .byte	$20,$00,$40,$00
.967a						os7F:
.967a		a2 84		ldx #$84	                LDX	#<param
.967c		a0 00		ldy #$00	                LDY	#>param
.967e		a9 7f		lda #$7f	                LDA	#$7F
.9680		4c f1 ff	jmp $fff1	                JMP	$FFF1
.9683						seek:
.9683		84 75		sty $75		                STY	tmp2
.9685		85 84		sta $84		                STA	param
.9687		a9 01		lda #$01	                LDA	#1
.9689		85 89		sta $89		                STA	param+5
.968b		a9 69		lda #$69	                LDA	#$69
.968d		85 8a		sta $8a		                STA	param+6
.968f		86 8b		stx $8b		                STX	param+7
.9691		20 7a 96	jsr $967a	                JSR	os7F
.9694		a6 8b		ldx $8b		                LDX	param+7
.9696		a4 75		ldy $75		                LDY	tmp2
.9698		a5 84		lda $84		                LDA	param
.969a		60		rts		                RTS
.969b						writetrack:
.969b		48		pha		                PHA
.969c		a9 7a		lda #$7a	                LDA	#$7A
.969e						trkregcom:
.969e		85 8a		sta $8a		                STA	param+6
.96a0		68		pla		                PLA
.96a1		84 74		sty $74		                STY	tmp
.96a3		85 84		sta $84		                STA	param
.96a5		29 01		and #$01	                AND	#1
.96a7		f0 02		beq $96ab	                BEQ	drive0_2
.96a9		a9 08		lda #$08	                LDA	#8
.96ab						drive0_2:
.96ab		18		clc		                CLC
.96ac		69 12		adc #$12	                ADC	#$12
.96ae		85 8b		sta $8b		                STA	param+7
.96b0		a9 02		lda #$02	                LDA	#$02
.96b2		85 89		sta $89		                STA	param+5
.96b4		86 8c		stx $8c		                STX	param+8
.96b6		20 7a 96	jsr $967a	                JSR	os7F
.96b9		a5 84		lda $84		                LDA	param
.96bb		a6 8c		ldx $8c		                LDX	param+8
.96bd		a4 74		ldy $74		                LDY	tmp
.96bf		60		rts		                RTS
.96c0						readtrack:
.96c0		48		pha		                PHA
.96c1		a9 7d		lda #$7d	                LDA	#$7D
.96c3		4c 9e 96	jmp $969e	                JMP	trkregcom
.96c6						sort_ids:
.96c6		8a		txa		                TXA
.96c7		48		pha		                PHA
.96c8		98		tya		                TYA
.96c9		48		pha		                PHA
.96ca		a2 00		ldx #$00	                LDX	#0
.96cc		86 77		stx $77		                STX	tmp4
.96ce						srtloop1:
.96ce		8a		txa		                TXA
.96cf		a8		tay		                TAY
.96d0		bd 02 0a	lda $0a02,x	                LDA	buffer1+2,X
.96d3						srtloop2:
.96d3		88		dey		                DEY
.96d4		88		dey		                DEY
.96d5		88		dey		                DEY
.96d6		88		dey		                DEY
.96d7		30 1a		bmi $96f3	                BMI	storeids
.96d9		d9 02 0a	cmp $0a02,y	                CMP	buffer1+2,Y
.96dc		d0 f5		bne $96d3	                BNE	srtloop2
.96de		e8		inx		                INX
.96df		e8		inx		                INX
.96e0		e8		inx		                INX
.96e1		e8		inx		                INX
.96e2		e0 80		cpx #$80	                CPX	#$80
.96e4		d0 e8		bne $96ce	                BNE	srtloop1
.96e6						exitsortids:
.96e6		a5 77		lda $77		                LDA	tmp4
.96e8		4a		lsr a		                LSR	A
.96e9		4a		lsr a		                LSR	A
.96ea		85 74		sta $74		                STA	tmp
.96ec		68		pla		                PLA
.96ed		a8		tay		                TAY
.96ee		68		pla		                PLA
.96ef		aa		tax		                TAX
.96f0		a5 74		lda $74		                LDA	tmp
.96f2		60		rts		                RTS
.96f3						storeids:
.96f3		a4 77		ldy $77		                LDY	tmp4
.96f5						srtloop3:
.96f5		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.96f8		99 80 0a	sta $0a80,y	                STA	buffer3,Y
.96fb		e8		inx		                INX
.96fc		c8		iny		                INY
.96fd		8a		txa		                TXA
.96fe		29 03		and #$03	                AND	#3
.9700		d0 f3		bne $96f5	                BNE	srtloop3
.9702		84 77		sty $77		                STY	tmp4
.9704		e0 80		cpx #$80	                CPX	#$80
.9706		d0 c6		bne $96ce	                BNE	srtloop1
.9708		4c e6 96	jmp $96e6	                JMP	exitsortids
.970b						load_ids:
.970b		85 84		sta $84		                STA	param
.970d		a9 20		lda #$20	                LDA	#$20
.970f		85 8d		sta $8d		                STA	param+9
.9711						loadnumids:
.9711		84 75		sty $75		                STY	tmp2
.9713		a9 ff		lda #$ff	                LDA	#$FF
.9715		85 87		sta $87		                STA	param+3
.9717		85 88		sta $88		                STA	param+4
.9719		a9 03		lda #$03	                LDA	#$03
.971b		85 89		sta $89		                STA	param+5
.971d		a9 5b		lda #$5b	                LDA	#$5B
.971f		85 8a		sta $8a		                STA	param+6
.9721		86 8b		stx $8b		                STX	param+7
.9723		a9 00		lda #$00	                LDA	#0
.9725		85 8c		sta $8c		                STA	param+8
.9727		85 8e		sta $8e		                STA	param+10
.9729		20 7a 96	jsr $967a	                JSR	os7F
.972c		a6 8b		ldx $8b		                LDX	param+7
.972e		a4 75		ldy $75		                LDY	tmp2
.9730		a5 84		lda $84		                LDA	param
.9732		60		rts		                RTS
.9733						format:
.9733		08		php		                PHP
.9734		85 84		sta $84		                STA	param
.9736		86 8b		stx $8b		                STX	param+7
.9738		a9 ff		lda #$ff	                LDA	#$FF
.973a		85 87		sta $87		                STA	param+3
.973c		85 88		sta $88		                STA	param+4
.973e		a9 05		lda #$05	                LDA	#$05
.9740		85 89		sta $89		                STA	param+5
.9742		a9 63		lda #$63	                LDA	#$63
.9744		85 8a		sta $8a		                STA	param+6
.9746		98		tya		                TYA
.9747		29 1f		and #$1f	                AND	#$1F
.9749		aa		tax		                TAX
.974a		bd 64 97	lda $9764,x	                LDA	gaps,X
.974d		85 8c		sta $8c		                STA	param+8
.974f		84 8d		sty $8d		                STY	param+9
.9751		a9 00		lda #$00	                LDA	#$00
.9753		85 8e		sta $8e		                STA	param+$A
.9755		a9 10		lda #$10	                LDA	#$10
.9757		85 8f		sta $8f		                STA	param+$B
.9759		20 7a 96	jsr $967a	                JSR	os7F
.975c		a5 90		lda $90		                LDA	param+$C
.975e		a6 8b		ldx $8b		                LDX	param+7
.9760		a4 8d		ldy $8d		                LDY	param+9
.9762		28		plp		                PLP
.9763		60		rts		                RTS
.9764						gaps:
>9764		ff ff ff ff			                .byte	$FF,$FF,$FF,$FF
>9768		ff 48 ff 90			                .byte	$FF,$48,$FF,$90
>976c		50 30 10 80			                .byte	$50,$30,$10,$80
>9770		60 30 20 18			                .byte	$60,$30,$20,$18
>9774		10 0c 0b			                .byte	$10,$0C,$0B
.9777						verify:
.9777		85 8d		sta $8d		                STA	param+9
.9779		a9 03		lda #$03	                LDA	#3
.977b		85 89		sta $89		                STA	param+5
.977d		a9 5f		lda #$5f	                LDA	#$5F
.977f		85 8a		sta $8a		                STA	param+6
.9781		86 8b		stx $8b		                STX	param+7
.9783		84 8c		sty $8c		                STY	param+8
.9785		20 7a 96	jsr $967a	                JSR	os7F
.9788		a6 8b		ldx $8b		                LDX	param+7
.978a		a4 8c		ldy $8c		                LDY	param+8
.978c		a5 8e		lda $8e		                LDA	param+10
.978e		60		rts		                RTS
=135						tabP = ptab+2
.978f						loadsector:
.978f		48		pha		                PHA
.9790		a9 00		lda #$00	                LDA	#<buffer2
.9792		85 87		sta $87		                STA	tabP
.9794		a9 60		lda #$60	                LDA	#>buffer2
.9796		85 88		sta $88		                STA	tabP+1
.9798		86 89		stx $89		                STX	tabP+2
.979a		84 8a		sty $8a		                STY	tabP+3
.979c		a2 87		ldx #$87	                LDX	#<tabP
.979e		a0 00		ldy #$00	                LDY	#>tabP
.97a0		68		pla		                PLA
.97a1						loadsect:
.97a1		08		php		                PHP
.97a2		85 84		sta $84		                STA	param
.97a4		86 85		stx $85		                STX	ptab
.97a6		84 86		sty $86		                STY	ptab+1
.97a8		a0 00		ldy #$00	                LDY	#0
.97aa		b1 85		lda ($85),y	                LDA	(ptab),Y
.97ac		85 70		sta $70		                STA	discom_tmpbuf
.97ae		c8		iny		                INY
.97af		b1 85		lda ($85),y	                LDA	(ptab),Y
.97b1		85 71		sta $71		                STA	discom_tmpbuf+1
.97b3		c8		iny		                INY
.97b4		b1 85		lda ($85),y	                LDA	(ptab),Y
.97b6		c8		iny		                INY
.97b7		aa		tax		                TAX
.97b8		b1 85		lda ($85),y	                LDA	(ptab),Y
.97ba		a8		tay		                TAY
.97bb		86 76		stx $76		                STX	tmp5
.97bd		a5 84		lda $84		                LDA	param
.97bf		20 83 96	jsr $9683	                JSR	seek
.97c2		a5 8c		lda $8c		                LDA	param+8
.97c4		f0 08		beq $97ce	                BEQ	goids
.97c6		c9 18		cmp #$18	                CMP	#$18
.97c8		f0 04		beq $97ce	                BEQ	goids
.97ca		28		plp		                PLP
.97cb		4c 78 98	jmp $9878	                JMP	iderror
.97ce						goids:
.97ce		a9 00		lda #$00	                LDA	#<buffer1
.97d0		85 85		sta $85		                STA	param+1
.97d2		a9 0a		lda #$0a	                LDA	#>buffer1
.97d4		85 86		sta $86		                STA	param+2
.97d6		a5 84		lda $84		                LDA	param
.97d8		20 0b 97	jsr $970b	                JSR	load_ids
.97db		20 c6 96	jsr $96c6	                JSR	sort_ids
.97de		a5 8e		lda $8e		                LDA	param+10
.97e0		f0 04		beq $97e6	                BEQ	goverify
.97e2		28		plp		                PLP
.97e3		4c 78 98	jmp $9878	                JMP	iderror
.97e6						goverify:
.97e6		98		tya		                TYA
.97e7		a4 7f		ldy $7f		                LDY	dedpl
.97e9		f0 13		beq $97fe	                BEQ	physical
.97eb		a2 7c		ldx #$7c	                LDX	#$7C
.97ed						searchsect:
.97ed		dd 02 0a	cmp $0a02,x	                CMP	buffer1+2,X
.97f0		f0 19		beq $980b	                BEQ	got
.97f2		ca		dex		                DEX
.97f3		ca		dex		                DEX
.97f4		ca		dex		                DEX
.97f5		ca		dex		                DEX
.97f6		10 f5		bpl $97ed	                BPL	searchsect
.97f8		a9 18		lda #$18	                LDA	#$18
.97fa		28		plp		                PLP
.97fb		4c 78 98	jmp $9878	                JMP	iderror
.97fe						physical:
.97fe		c5 74		cmp $74		                CMP	tmp
.9800		90 06		bcc $9808	                BCC	oksect
.9802		a9 18		lda #$18	                LDA	#$18
.9804		28		plp		                PLP
.9805		4c 78 98	jmp $9878	                JMP	iderror
.9808						oksect:
.9808		0a		asl a		                ASL	A
.9809		0a		asl a		                ASL	A
.980a		aa		tax		                TAX
.980b						got:
.980b		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.980e		a8		tay		                TAY
.980f		d0 0a		bne $981b	                BNE	dowrite
.9811		a5 8b		lda $8b		                LDA	param+7
.9813		f0 06		beq $981b	                BEQ	dowrite
.9815		a9 18		lda #$18	                LDA	#$18
.9817		28		plp		                PLP
.9818		4c 78 98	jmp $9878	                JMP	iderror
.981b						dowrite:
.981b		8a		txa		                TXA
.981c		48		pha		                PHA
.981d		98		tya		                TYA
.981e		aa		tax		                TAX
.981f		a5 84		lda $84		                LDA	param
.9821		20 9b 96	jsr $969b	                JSR	writetrack
.9824		68		pla		                PLA
.9825		aa		tax		                TAX
.9826		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.9829		85 8b		sta $8b		                STA	param+7
.982b		bd 02 0a	lda $0a02,x	                LDA	buffer1+2,X
.982e		a8		tay		                TAY
.982f		bd 03 0a	lda $0a03,x	                LDA	buffer1+3,X
.9832		28		plp		                PLP
.9833		90 09		bcc $983e	                BCC	doload
.9835		c9 01		cmp #$01	                CMP	#1
.9837		f0 05		beq $983e	                BEQ	doload
.9839		a9 18		lda #$18	                LDA	#$18
.983b		4c 78 98	jmp $9878	                JMP	iderror
.983e						doload:
.983e		29 07		and #$07	                AND	#7
.9840		0a		asl a		                ASL	A
.9841		85 7e		sta $7e		                STA	tmp3
.9843		0a		asl a		                ASL	A
.9844		0a		asl a		                ASL	A
.9845		0a		asl a		                ASL	A
.9846		0a		asl a		                ASL	A
.9847		18		clc		                CLC
.9848		69 01		adc #$01	                ADC	#1
.984a		a6 8b		ldx $8b		                LDX	param+7
.984c		20 77 97	jsr $9777	                JSR	verify
.984f		29 1e		and #$1e	                AND	#$1E
.9851		d0 25		bne $9878	                BNE	iderror
.9853		a5 8e		lda $8e		                LDA	param+10
.9855		29 20		and #$20	                AND	#$20
.9857		f0 08		beq $9861	                BEQ	ndel
.9859		a5 8f		lda $8f		                LDA	discom_deleted
.985b		29 0f		and #$0f	                AND	#$0F
.985d		09 20		ora #$20	                ORA	#$20
.985f		85 8f		sta $8f		                STA	discom_deleted
.9861						ndel:
.9861		a5 70		lda $70		                LDA	discom_tmpbuf
.9863		85 85		sta $85		                STA	param+1
.9865		a5 71		lda $71		                LDA	discom_tmpbuf+1
.9867		85 86		sta $86		                STA	param+2
.9869		a9 57		lda #$57	                LDA	#$57
.986b		85 8a		sta $8a		                STA	param+6
.986d		20 7a 96	jsr $967a	                JSR	os7F
.9870		18		clc		                CLC
.9871		a9 00		lda #$00	                LDA	#0
.9873		85 87		sta $87		                STA	discom_error
.9875		4c 7b 98	jmp $987b	                JMP	finload
.9878						iderror:
.9878		85 87		sta $87		                STA	discom_error
.987a		38		sec		                SEC
.987b						finload:
.987b		08		php		                PHP
.987c		a5 8b		lda $8b		                LDA	param+7
.987e		48		pha		                PHA
.987f		a5 8c		lda $8c		                LDA	param+8
.9881		48		pha		                PHA
.9882		a6 76		ldx $76		                LDX	tmp5
.9884		a5 84		lda $84		                LDA	param
.9886		20 9b 96	jsr $969b	                JSR	writetrack
.9889		68		pla		                PLA
.988a		a8		tay		                TAY
.988b		68		pla		                PLA
.988c		aa		tax		                TAX
.988d		28		plp		                PLP
.988e		a5 87		lda $87		                LDA	discom_error
.9890		60		rts		                RTS
.9891						savesect:
.9891		85 84		sta $84		                STA	param
.9893		8a		txa		                TXA
.9894		48		pha		                PHA
.9895		a5 84		lda $84		                LDA	param
.9897		20 c0 96	jsr $96c0	                JSR	readtrack
.989a		86 74		stx $74		                STX	tmp
.989c		68		pla		                PLA
.989d		aa		tax		                TAX
.989e		a5 84		lda $84		                LDA	param
.98a0		20 9b 96	jsr $969b	                JSR	writetrack
.98a3		a9 ff		lda #$ff	                LDA	#$FF
.98a5		85 87		sta $87		                STA	param+3
.98a7		85 88		sta $88		                STA	param+4
.98a9		a9 03		lda #$03	                LDA	#3
.98ab		85 89		sta $89		                STA	param+5
.98ad		a5 8f		lda $8f		                LDA	discom_deleted
.98af		29 20		and #$20	                AND	#$20
.98b1		f0 02		beq $98b5	                BEQ	add
.98b3		a9 04		lda #$04	                LDA	#$4
.98b5						add:
.98b5		18		clc		                CLC
.98b6		69 4b		adc #$4b	                ADC	#$4B
.98b8		85 8a		sta $8a		                STA	param+6
.98ba		86 8b		stx $8b		                STX	param+7
.98bc		84 8c		sty $8c		                STY	param+8
.98be		ad 03 0a	lda $0a03	                LDA	buffer1+3
.98c1		0a		asl a		                ASL	A
.98c2		0a		asl a		                ASL	A
.98c3		0a		asl a		                ASL	A
.98c4		0a		asl a		                ASL	A
.98c5		0a		asl a		                ASL	A
.98c6		85 8d		sta $8d		                STA	param+9
.98c8		e6 8d		inc $8d		                INC	param+9
.98ca		20 7a 96	jsr $967a	                JSR	os7F
.98cd		a5 8e		lda $8e		                LDA	param+10
.98cf		29 1e		and #$1e	                AND	#$1E
.98d1		4a		lsr a		                LSR	A
.98d2		a8		tay		                TAY
.98d3		a6 74		ldx $74		                LDX	tmp
.98d5		a5 84		lda $84		                LDA	param
.98d7		20 9b 96	jsr $969b	                JSR	writetrack
.98da		98		tya		                TYA
.98db		aa		tax		                TAX
.98dc		a5 84		lda $84		                LDA	param
.98de		60		rts		                RTS
.98df						check62files:
.98df		a2 00		ldx #$00	                LDX	#0
.98e1		a0 02		ldy #$02	                LDY	#2
.98e3		38		sec		                SEC
.98e4		20 8f 97	jsr $978f	                JSR	loadsector
.98e7		90 01		bcc $98ea	                BCC	hokload
.98e9		60		rts		                RTS
.98ea						hokload:
.98ea		a2 07		ldx #$07	                LDX	#7
.98ec		a9 aa		lda #$aa	                LDA	#$AA
.98ee						loop62:
.98ee		dd 00 60	cmp $6000,x	                CMP	buffer2,X
.98f1		d0 04		bne $98f7	                BNE	not62
.98f3		ca		dex		                DEX
.98f4		10 f8		bpl $98ee	                BPL	loop62
.98f6		38		sec		                SEC
.98f7						not62:
.98f7		a9 00		lda #$00	                LDA	#0
.98f9		60		rts		                RTS
.98fa						ptabcom:
.98fa		a9 00		lda #$00	                LDA	#<buffer1
.98fc		85 85		sta $85		                STA	ptab
.98fe		a9 0a		lda #$0a	                LDA	#>buffer1
.9900		85 86		sta $86		                STA	ptab+1
.9902		60		rts		                RTS
.9903						nextlsect:
.9903		85 84		sta $84		                STA	param
.9905		a9 00		lda #$00	                LDA	#0
.9907		85 73		sta $73		                STA	discom_type
.9909		f0 06		beq $9911	                BEQ	nplsect
.990b						prevlsect:
.990b		85 84		sta $84		                STA	param
.990d		a9 ff		lda #$ff	                LDA	#$FF
.990f		85 73		sta $73		                STA	discom_type
.9911						nplsect:
.9911		84 71		sty $71		                STY	discom_dlsect
.9913		86 70		stx $70		                STX	discom_dtrk
.9915		8a		txa		                TXA
.9916		48		pha		                PHA
.9917		98		tya		                TYA
.9918		48		pha		                PHA
.9919						nplloop0:
.9919		a5 73		lda $73		                LDA	discom_type
.991b		f0 0a		beq $9927	                BEQ	nls0
.991d		c6 71		dec $71		                DEC	discom_dlsect
.991f		a5 71		lda $71		                LDA	discom_dlsect
.9921		c9 ff		cmp #$ff	                CMP	#$FF
.9923		f0 19		beq $993e	                BEQ	incdectrk
.9925		d0 04		bne $992b	                BNE	nplloop1
.9927						nls0:
.9927		e6 71		inc $71		                INC	discom_dlsect
.9929		f0 13		beq $993e	                BEQ	incdectrk
.992b						nplloop1:
.992b		a5 71		lda $71		                LDA	discom_dlsect
.992d		a0 00		ldy #$00	                LDY	#$00
.992f						nplloop2:
.992f		d9 02 0a	cmp $0a02,y	                CMP	buffer1+2,Y
.9932		f0 34		beq $9968	                BEQ	nplfnd
.9934		c8		iny		                INY
.9935		c8		iny		                INY
.9936		c8		iny		                INY
.9937		c8		iny		                INY
.9938		c0 80		cpy #$80	                CPY	#$80
.993a		d0 f3		bne $992f	                BNE	nplloop2
.993c		f0 db		beq $9919	                BEQ	nplloop0
.993e						incdectrk:
.993e		a5 73		lda $73		                LDA	discom_type
.9940		f0 06		beq $9948	                BEQ	nls1
.9942		c6 70		dec $70		                DEC	discom_dtrk
.9944		30 17		bmi $995d	                BMI	nplexit
.9946		10 02		bpl $994a	                BPL	nls2
.9948						nls1:
.9948		e6 70		inc $70		                INC	discom_dtrk
.994a						nls2:
.994a		20 fa 98	jsr $98fa	                JSR	ptabcom
.994d		a5 84		lda $84		                LDA	param
.994f		a6 70		ldx $70		                LDX	discom_dtrk
.9951		20 0b 97	jsr $970b	                JSR	load_ids
.9954		a5 8e		lda $8e		                LDA	param+10
.9956		29 1f		and #$1f	                AND	#$1F
.9958		f0 d1		beq $992b	                BEQ	nplloop1
.995a		38		sec		                SEC
.995b		b0 04		bcs $9961	                BCS	nplexit1
.995d						nplexit:
.995d		a9 04		lda #$04	                LDA	#$04
.995f		85 8e		sta $8e		                STA	param+10
.9961						nplexit1:
.9961		68		pla		                PLA
.9962		a8		tay		                TAY
.9963		68		pla		                PLA
.9964		aa		tax		                TAX
.9965		a5 8e		lda $8e		                LDA	param+10
.9967		60		rts		                RTS
.9968						nplfnd:
.9968		68		pla		                PLA
.9969		68		pla		                PLA
.996a		a5 84		lda $84		                LDA	param
.996c		a6 70		ldx $70		                LDX	discom_dtrk
.996e		a4 71		ldy $71		                LDY	discom_dlsect
.9970		18		clc		                CLC
.9971		60		rts		                RTS
.9972						nextpsect:
.9972		85 84		sta $84		                STA	param
.9974		a9 00		lda #$00	                LDA	#0
.9976		85 73		sta $73		                STA	discom_type
.9978		f0 06		beq $9980	                BEQ	nppsect
.997a						prevpsect:
.997a		85 84		sta $84		                STA	param
.997c		a9 ff		lda #$ff	                LDA	#$FF
.997e		85 73		sta $73		                STA	discom_type
.9980						nppsect:
.9980		84 72		sty $72		                STY	discom_dpsect
.9982		86 70		stx $70		                STX	discom_dtrk
.9984		8a		txa		                TXA
.9985		48		pha		                PHA
.9986		98		tya		                TYA
.9987		48		pha		                PHA
.9988		20 c6 96	jsr $96c6	                JSR	sort_ids
.998b		a6 72		ldx $72		                LDX	discom_dpsect
.998d		a5 73		lda $73		                LDA	discom_type
.998f		f0 05		beq $9996	                BEQ	nps0
.9991		ca		dex		                DEX
.9992		30 17		bmi $99ab	                BMI	idtrk
.9994		10 05		bpl $999b	                BPL	nps1
.9996						nps0:
.9996		e8		inx		                INX
.9997						npsloop0:
.9997		e4 74		cpx $74		                CPX	tmp
.9999		f0 10		beq $99ab	                BEQ	idtrk
.999b						nps1:
.999b		8a		txa		                TXA
.999c		0a		asl a		                ASL	A
.999d		0a		asl a		                ASL	A
.999e		aa		tax		                TAX
.999f		bd 82 0a	lda $0a82,x	                LDA	buffer3+2,X
.99a2		a8		tay		                TAY
.99a3		68		pla		                PLA
.99a4		68		pla		                PLA
.99a5		a5 84		lda $84		                LDA	param
.99a7		a6 70		ldx $70		                LDX	discom_dtrk
.99a9		18		clc		                CLC
.99aa		60		rts		                RTS
.99ab						idtrk:
.99ab		a5 73		lda $73		                LDA	discom_type
.99ad		f0 06		beq $99b5	                BEQ	nps2
.99af		c6 70		dec $70		                DEC	discom_dtrk
.99b1		30 16		bmi $99c9	                BMI	npsexit
.99b3		10 02		bpl $99b7	                BPL	nps3
.99b5						nps2:
.99b5		e6 70		inc $70		                INC	discom_dtrk
.99b7						nps3:
.99b7		a6 70		ldx $70		                LDX	discom_dtrk
.99b9		20 fa 98	jsr $98fa	                JSR	ptabcom
.99bc		a5 84		lda $84		                LDA	param
.99be		20 0b 97	jsr $970b	                JSR	load_ids
.99c1		a5 8e		lda $8e		                LDA	param+10
.99c3		29 1f		and #$1f	                AND	#$1F
.99c5		f0 0f		beq $99d6	                BEQ	npsok
.99c7		d0 04		bne $99cd	                BNE	npsexit1
.99c9						npsexit:
.99c9		a9 04		lda #$04	                LDA	#$04
.99cb		85 8e		sta $8e		                STA	param+10
.99cd						npsexit1:
.99cd		68		pla		                PLA
.99ce		a8		tay		                TAY
.99cf		68		pla		                PLA
.99d0		aa		tax		                TAX
.99d1		68		pla		                PLA
.99d2		a5 8e		lda $8e		                LDA	param+10
.99d4		38		sec		                SEC
.99d5		60		rts		                RTS
.99d6						npsok:
.99d6		20 c6 96	jsr $96c6	                JSR	sort_ids
.99d9		a2 00		ldx #$00	                LDX	#$00
.99db		f0 ba		beq $9997	                BEQ	npsloop0

;******  Return to file: hackrom.s65


;******  Processing file: dedit.s65

>99dd		03 0f 0f 0f			char	.byte	$03,$0F,$0F,$0F
.99e1						posblpos:
>99e1		00 01 01 01			                .byte	$00,$01,$01,$01
>99e5		07 07				                .word	$0707
>99e7		07				                .byte	$07
.99e8						ptrcoords:
>99e8		00 01 03 05			                .byte	$00,$01,$03,$05
>99ec		07 0f				                .word	$0F07
>99ee		17				                .byte	$17
.99ef						xcoord:
>99ef		07 16 17 25			                .byte	$07,$16,$17,$25
>99f3		26				                .byte	$26
>99f4		0b 0c 14			                .byte	$0B,$0C,$14
>99f7		16 17 18 19			                .byte	$16,$17,$18,$19
>99fb		1a 1b				                .word	$1B1A
>99fd		1c				                .byte	$1C
>99fe		08 0b 0e 11			                .byte	$08,$0B,$0E,$11
>9a02		14 17 1a 1d			                .byte	$14,$17,$1A,$1D
>9a06		1f 20 21 22			                .byte	$1F,$20,$21,$22
>9a0a		23 24 25 26			                .byte	$23,$24,$25,$26
.9a0e						trkhdlo:
>9a0e		01 02 04 08			                .byte	$01,$02,$04,$08
>9a12		06 02 04 08			                .byte	$06,$02,$04,$08
>9a16		06 02				                .byte	$06,$02
.9a18						trkhdhi:
>9a18		00 00 00 00			                .byte	$00,$00,$00,$00
>9a1c		01 03 06 0c			                .byte	$01,$03,$06,$0C
>9a20		19 33				                .byte	$19,$33
.9a22						ycoord:
>9a22		00 00 00 00 00			                .fill 5,0
>9a27		01 01 01 01 01 01 01 01		                .fill 10,1
>9a2f		01 01
>9a31		0c 0c 0c 0c 0c 0c 0c 0c		                .fill 16,$c
>9a39		0c 0c 0c 0c 0c 0c 0c 0c
.9a41						cursor:
>9a41		4b 4b 4b 4b 4b			                .fill 5,$4b
>9a46		cf 4b				                .word	$4BCF
.9a48						getpsect:
.9a48		ae 33 7c	ldx $7c33	                LDX	$7C33
.9a4b		ac 34 7c	ldy $7c34	                LDY	$7C34
.9a4e		4c 43 86	jmp $8643	                JMP	asc_hex
.9a51						getlsect:
.9a51		ae 25 7c	ldx $7c25	                LDX	$7C25
.9a54		ac 26 7c	ldy $7c26	                LDY	$7C26
.9a57		4c 43 86	jmp $8643	                JMP	asc_hex
.9a5a						gettrk:
.9a5a		ae 16 7c	ldx $7c16	                LDX	$7C16
.9a5d		ac 17 7c	ldy $7c17	                LDY	$7C17
.9a60		4c 43 86	jmp $8643	                JMP	asc_hex
.9a63						getdrv:
.9a63		ad 07 7c	lda $7c07	                LDA	$7C07
.9a66		29 03		and #$03	                AND	#$03
.9a68		60		rts		                RTS
.9a69						putpsect:
.9a69		20 04 86	jsr $8604	                JSR	hex_asc
.9a6c		8d 33 7c	sta $7c33	                STA	$7C33
.9a6f		8c 34 7c	sty $7c34	                STY	$7C34
.9a72		60		rts		                RTS
.9a73						putlsect:
.9a73		20 04 86	jsr $8604	                JSR	hex_asc
.9a76		8d 25 7c	sta $7c25	                STA	$7C25
.9a79		8c 26 7c	sty $7c26	                STY	$7C26
.9a7c		60		rts		                RTS
.9a7d						puttrk:
.9a7d		20 04 86	jsr $8604	                JSR	hex_asc
.9a80		8d 16 7c	sta $7c16	                STA	$7C16
.9a83		8c 17 7c	sty $7c17	                STY	$7C17
.9a86		60		rts		                RTS
.9a87						getlstd:
.9a87		20 51 9a	jsr $9a51	                JSR	getlsect
.9a8a		4c 90 9a	jmp $9a90	                JMP	gettd
.9a8d						getpstd:
.9a8d		20 48 9a	jsr $9a48	                JSR	getpsect
.9a90						gettd:
.9a90		48		pha		                PHA
.9a91		20 5a 9a	jsr $9a5a	                JSR	gettrk
.9a94		aa		tax		                TAX
.9a95		68		pla		                PLA
.9a96		a8		tay		                TAY
.9a97		20 63 9a	jsr $9a63	                JSR	getdrv
.9a9a		60		rts		                RTS
.9a9b						putlst:
.9a9b		8a		txa		                TXA
.9a9c		48		pha		                PHA
.9a9d		98		tya		                TYA
.9a9e		20 73 9a	jsr $9a73	                JSR	putlsect
.9aa1		68		pla		                PLA
.9aa2		20 7d 9a	jsr $9a7d	                JSR	puttrk
.9aa5		60		rts		                RTS
.9aa6						phys_logi:
.9aa6		20 48 9a	jsr $9a48	                JSR	getpsect
.9aa9		0a		asl a		                ASL	A
.9aaa		0a		asl a		                ASL	A
.9aab		aa		tax		                TAX
.9aac		bd 82 0a	lda $0a82,x	                LDA	buffer3+2,X
.9aaf		85 71		sta $71		                STA	discom_dlsect
.9ab1		20 73 9a	jsr $9a73	                JSR	putlsect
.9ab4		60		rts		                RTS
.9ab5						logi_phys:
.9ab5		20 51 9a	jsr $9a51	                JSR	getlsect
.9ab8		a2 00		ldx #$00	                LDX	#$00
.9aba						lploop0:
.9aba		dd 02 0a	cmp $0a02,x	                CMP	buffer1+2,X
.9abd		f0 0c		beq $9acb	                BEQ	lpfnd
.9abf		e8		inx		                INX
.9ac0		e8		inx		                INX
.9ac1		e8		inx		                INX
.9ac2		e8		inx		                INX
.9ac3		e0 80		cpx #$80	                CPX	#$80
.9ac5		d0 f3		bne $9aba	                BNE	lploop0
.9ac7		a9 18		lda #$18	                LDA	#$18
.9ac9		38		sec		                SEC
.9aca		60		rts		                RTS
.9acb						lpfnd:
.9acb		8a		txa		                TXA
.9acc		4a		lsr a		                LSR	A
.9acd		4a		lsr a		                LSR	A
.9ace		20 69 9a	jsr $9a69	                JSR	putpsect
.9ad1		18		clc		                CLC
.9ad2		60		rts		                RTS
.9ad3						message:
.9ad3		85 77		sta $77		                STA	tmp4
.9ad5		8a		txa		                TXA
.9ad6		48		pha		                PHA
.9ad7		98		tya		                TYA
.9ad8		48		pha		                PHA
.9ad9		a9 07		lda #$07	                LDA	#7
.9adb		20 ee ff	jsr $ffee	                JSR	$FFEE
.9ade		a5 77		lda $77		                LDA	tmp4
.9ae0		20 37 96	jsr $9637	                JSR	get_err_entry
.9ae3		b9 19 96	lda $9619,y	                LDA	msg_point,Y
.9ae6		85 77		sta $77		                STA	tmpx
.9ae8		b9 1a 96	lda $961a,y	                LDA	msg_point+1,Y
.9aeb		85 78		sta $78		                STA	tmpy
.9aed		a0 ff		ldy #$ff	                LDY	#$FF
.9aef						msgloop:
.9aef		c8		iny		                INY
.9af0		b1 77		lda ($77),y	                LDA	(tmpx),Y
.9af2		99 98 7f	sta $7f98,y	                STA	$7F98,Y
.9af5		d0 f8		bne $9aef	                BNE	msgloop
.9af7		68		pla		                PLA
.9af8		a8		tay		                TAY
.9af9		68		pla		                PLA
.9afa		aa		tax		                TAX
.9afb		60		rts		                RTS
.9afc						blankmsg:
.9afc		a2 14		ldx #$14	                LDX	#20
.9afe		a9 20		lda #$20	                LDA	#32
.9b00						blankloop:
.9b00		9d 98 7f	sta $7f98,x	                STA	$7F98,X
.9b03		ca		dex		                DEX
.9b04		10 fa		bpl $9b00	                BPL	blankloop
.9b06		60		rts		                RTS
.9b07						round:
.9b07		a9 60		lda #$60	                LDA	#>buffer2
.9b09		c5 7d		cmp $7d		                CMP	dedit_bytehi
.9b0b		90 0a		bcc $9b17	                BCC	ok1
.9b0d		d0 34		bne $9b43	                BNE	setlo
.9b0f		a9 00		lda #$00	                LDA	#<buffer2
.9b11		c5 7c		cmp $7c		                CMP	dedit_bytelo
.9b13		90 02		bcc $9b17	                BCC	ok1
.9b15		d0 2c		bne $9b43	                BNE	setlo
.9b17						ok1:
.9b17		a9 00		lda #$00	                LDA	#<buffer2
.9b19		18		clc		                CLC
.9b1a		65 78		adc $78		                ADC	dedit_sectsizelo
.9b1c		85 7a		sta $7a		                STA	dedit_resultlo
.9b1e		a9 60		lda #$60	                LDA	#>buffer2
.9b20		65 79		adc $79		                ADC	dedit_sectsizehi
.9b22		85 7b		sta $7b		                STA	dedit_resulthi
.9b24		38		sec		                SEC
.9b25		a5 7d		lda $7d		                LDA	dedit_bytehi
.9b27		c5 7b		cmp $7b		                CMP	dedit_resulthi
.9b29		90 20		bcc $9b4b	                BCC	ok2
.9b2b		d0 06		bne $9b33	                BNE	sethi
.9b2d		a5 7c		lda $7c		                LDA	dedit_bytelo
.9b2f		c5 7a		cmp $7a		                CMP	dedit_resultlo
.9b31		90 18		bcc $9b4b	                BCC	ok2
.9b33						sethi:
.9b33		a5 7a		lda $7a		                LDA	dedit_resultlo
.9b35		38		sec		                SEC
.9b36		e9 08		sbc #$08	                SBC	#8
.9b38		85 7c		sta $7c		                STA	dedit_bytelo
.9b3a		a5 7b		lda $7b		                LDA	dedit_resulthi
.9b3c		e9 00		sbc #$00	                SBC	#0
.9b3e		85 7d		sta $7d		                STA	dedit_bytehi
.9b40		4c 4b 9b	jmp $9b4b	                JMP	notsetlo
.9b43						setlo:
.9b43		a9 00		lda #$00	                LDA	#<buffer2
.9b45		85 7c		sta $7c		                STA	dedit_bytelo
.9b47		a9 60		lda #$60	                LDA	#>buffer2
.9b49		85 7d		sta $7d		                STA	dedit_bytehi
.9b4b						notsetlo:
.9b4b						ok2:
.9b4b		60		rts		                RTS
.9b4c						dedinit:
.9b4c		a9 4b		lda #$4b	                LDA	#$4B
.9b4e		20 18 89	jsr $8918	                JSR	setcursor
.9b51		20 af 89	jsr $89af	                JSR	pcprint
>9b54		1f 07 00			                .byte	31,7,0
.9b57		a9 00		lda #$00	                LDA	#0
.9b59		20 ee ff	jsr $ffee	                JSR	$FFEE
.9b5c		85 82		sta $82		                STA	dedit_input
.9b5e		85 83		sta $83		                STA	dedit_pos
.9b60		a9 ff		lda #$ff	                LDA	#$FF
.9b62		85 7f		sta $7f		                STA	dedpl
.9b64		a9 05		lda #$05	                LDA	#$05
.9b66		85 8f		sta $8f		                STA	dedit_loaded
.9b68		60		rts		                RTS
.9b69						deditpa:
.9b69		a5 f4		lda $f4		                LDA	$F4
.9b6b		48		pha		                PHA
.9b6c		ad 7d 02	lda $027d	                LDA	$27D
.9b6f		48		pha		                PHA
.9b70		ad 54 02	lda $0254	                LDA	$254
.9b73		48		pha		                PHA
.9b74		ad 55 02	lda $0255	                LDA	$255
.9b77		48		pha		                PHA
.9b78						deddrawtitle:
.9b78		20 af 89	jsr $89af	                JSR	pcprint
.9b7b						dedtitmsg:
>9b7b		16 07				                .word	$0716
>9b7d		81				                .byte	129
>9b7e		44 52 49 56 45			                .text	"DRIVE"
>9b83		86				                .byte	134
>9b84		30				                .text	"0"
>9b85		81				                .byte	129
>9b86		20 20 50 48 59 53 20 54		                .text	"  PHYS TRACK"
>9b8e		52 41 43 4b
>9b92		86				                .byte	134
>9b93		30 30				                .text	"00"
>9b95		81				                .byte	129
>9b96		20 20 4c 4f 47 49 20 53		                .text	"  LOGI SECT"
>9b9e		45 43 54
>9ba1		86				                .byte	134
>9ba2		30 30				                .text	"00"
>9ba4		0d				                .byte	$0D
>9ba5		81				                .byte	129
.9ba6						physmsg:
>9ba6		50 48 59 53 20 53 45 43		                .text	"PHYS SECT"
>9bae		54
>9baf		86				                .byte	134
>9bb0		30 30				                .text	"00"
>9bb2		20				                .text	" "
>9bb3		81				                .byte	129
>9bb4		46 49 4c 45			                .text	"FILE"
>9bb8		86				                .byte	134
>9bb9		24 2e				                .text	"$."
>9bbb		0d				                .byte	$0D
>9bbc		82				                .byte	130
.9bbd						logimsg:
>9bbd		4c 4f 47 49 20 54 52 41		                .text	"LOGI TRACK"
>9bc5		43 4b
>9bc7		87				                .byte	135
>9bc8		20 20 20			                .text	"   "
>9bcb		82				                .byte	130
>9bcc		53 45 43 54 4f 52 53		                .text	"SECTORS"
>9bd3		87				                .byte	135
>9bd4		20 20 78 20 20 20 20 20		                .text	"  x     "
>9bdc		85				                .byte	133
>9bdd		00				                .byte	0
.9bde		ad 48 02	lda $0248	                LDA	$248
.9be1		48		pha		                PHA
.9be2		20 4c 9b	jsr $9b4c	                JSR	dedinit
.9be5						dedmloop:
.9be5		a9 9b		lda #$9b	                LDA	#>(dedmloop-1)
.9be7		48		pha		                PHA
.9be8		a9 e4		lda #$e4	                LDA	#<(dedmloop-1)
.9bea		48		pha		                PHA
.9beb		a5 7f		lda $7f		                LDA	dedpl
.9bed		f0 02		beq $9bf1	                BEQ	dedplx
.9bef		a9 17		lda #$17	                LDA	#logimsg-physmsg
.9bf1						dedplx:
.9bf1		aa		tax		                TAX
.9bf2		a0 00		ldy #$00	                LDY	#$00
.9bf4						dedplloop:
.9bf4		bd a6 9b	lda $9ba6,x	                LDA	physmsg,X
.9bf7		99 74 7c	sta $7c74,y	                STA	$7C74,Y
.9bfa		e8		inx		                INX
.9bfb		c8		iny		                INY
.9bfc		c0 04		cpy #$04	                CPY	#4
.9bfe		d0 f4		bne $9bf4	                BNE	dedplloop
.9c00		a5 8f		lda $8f		                LDA	dedit_loaded
.9c02		29 0f		and #$0f	                AND	#$0F
.9c04		c9 05		cmp #$05	                CMP	#5
.9c06		f0 03		beq $9c0b	                BEQ	nodisp
.9c08		20 96 a0	jsr $a096	                JSR	deddisplay
.9c0b						nodisp:
.9c0b		a6 82		ldx $82		                LDX	dedit_input
.9c0d		bd 41 9a	lda $9a41,x	                LDA	cursor,X
.9c10		8d 20 fe	sta $fe20	                STA	$FE20
.9c13		8d 48 02	sta $0248	                STA	$248
.9c16		a9 1f		lda #$1f	                LDA	#31
.9c18		20 ee ff	jsr $ffee	                JSR	$FFEE
.9c1b		bd e8 99	lda $99e8,x	                LDA	ptrcoords,X
.9c1e		18		clc		                CLC
.9c1f		65 83		adc $83		                ADC	dedit_pos
.9c21		aa		tax		                TAX
.9c22		bd ef 99	lda $99ef,x	                LDA	xcoord,X
.9c25		20 ee ff	jsr $ffee	                JSR	$FFEE
.9c28		bd 22 9a	lda $9a22,x	                LDA	ycoord,X
.9c2b		20 ee ff	jsr $ffee	                JSR	$FFEE
.9c2e						dedmloopx:
.9c2e		a9 81		lda #$81	                LDA	#$81
.9c30		a2 ff		ldx #$ff	                LDX	#$FF
.9c32		a0 ff		ldy #$ff	                LDY	#$FF
.9c34		20 f4 ff	jsr $fff4	                JSR	$FFF4
.9c37		86 81		stx $81		                STX	shift
.9c39		a2 fe		ldx #$fe	                LDX	#$FE
.9c3b		a0 ff		ldy #$ff	                LDY	#$FF
.9c3d		20 f4 ff	jsr $fff4	                JSR	$FFF4
.9c40		86 80		stx $80		                STX	control
.9c42		a2 00		ldx #$00	                LDX	#0
.9c44		a0 00		ldy #$00	                LDY	#0
.9c46		20 f4 ff	jsr $fff4	                JSR	$FFF4
.9c49		c0 ff		cpy #$ff	                CPY	#$FF
.9c4b		f0 e1		beq $9c2e	                BEQ	dedmloopx
.9c4d		8a		txa		                TXA
.9c4e		48		pha		                PHA
.9c4f		20 fc 9a	jsr $9afc	                JSR	blankmsg
.9c52		c0 1b		cpy #$1b	                CPY	#$1B
.9c54		d0 16		bne $9c6c	                BNE	dednotend
.9c56		68		pla		                PLA
.9c57		a9 7e		lda #$7e	                LDA	#$7E
.9c59		20 f4 ff	jsr $fff4	                JSR	$FFF4
.9c5c		24 80		bit $80		                BIT	control
.9c5e		30 09		bmi $9c69	                BMI	dedend
.9c60		a5 82		lda $82		                LDA	dedit_input
.9c62		c9 05		cmp #$05	                CMP	#5
.9c64		90 03		bcc $9c69	                BCC	dedend
.9c66		4c 4c 9b	jmp $9b4c	                JMP	dedinit
.9c69						dedend:
.9c69		4c 3b 89	jmp $893b	                JMP	escape
.9c6c						dednotend:
.9c6c		a9 0f		lda #$0f	                LDA	#15
.9c6e		a2 01		ldx #$01	                LDX	#1
.9c70		20 f4 ff	jsr $fff4	                JSR	$FFF4
.9c73		68		pla		                PLA
.9c74		aa		tax		                TAX
.9c75		e0 09		cpx #$09	                CPX	#9
.9c77		f0 03		beq $9c7c	                BEQ	dedtab
.9c79		4c 9f 9c	jmp $9c9f	                JMP	dednottab
.9c7c						dedtab:
.9c7c		a5 82		lda $82		                LDA	dedit_input
.9c7e		c9 06		cmp #$06	                CMP	#6
.9c80		d0 04		bne $9c86	                BNE	diftab
.9c82		a9 04		lda #$04	                LDA	#4
.9c84		85 82		sta $82		                STA	dedit_input
.9c86						diftab:
.9c86		e6 82		inc $82		                INC	dedit_input
.9c88		a5 8f		lda $8f		                LDA	dedit_loaded
.9c8a		29 0f		and #$0f	                AND	#$F
.9c8c		c5 82		cmp $82		                CMP	dedit_input
.9c8e		d0 04		bne $9c94	                BNE	dednotmod
.9c90		a9 00		lda #$00	                LDA	#0
.9c92		85 82		sta $82		                STA	dedit_input
.9c94						dednotmod:
.9c94		a5 82		lda $82		                LDA	dedit_input
.9c96		c9 05		cmp #$05	                CMP	#5
.9c98		b0 04		bcs $9c9e	                BCS	dednot0pos
.9c9a		a9 00		lda #$00	                LDA	#0
.9c9c		85 83		sta $83		                STA	dedit_pos
.9c9e						dednot0pos:
.9c9e		60		rts		                RTS
.9c9f						dednottab:
.9c9f		a5 82		lda $82		                LDA	dedit_input
.9ca1		d0 03		bne $9ca6	                BNE	doarrows
.9ca3		4c d7 9d	jmp $9dd7	                JMP	drivekeys
.9ca6						doarrows:
.9ca6		c9 05		cmp #$05	                CMP	#5
.9ca8		b0 03		bcs $9cad	                BCS	up_down
.9caa		4c 41 9d	jmp $9d41	                JMP	notup_down
.9cad						up_down:
.9cad		e0 8a		cpx #$8a	                CPX	#$8A
.9caf		d0 4d		bne $9cfe	                BNE	dednotdown
.9cb1		a9 08		lda #$08	                LDA	#8
.9cb3		85 7a		sta $7a		                STA	tmpscrlo
.9cb5		24 81		bit $81		                BIT	shift
.9cb7		30 0d		bmi $9cc6	                BMI	deddown2
.9cb9		24 80		bit $80		                BIT	control
.9cbb		30 0e		bmi $9ccb	                BMI	downsect
.9cbd						deddown1:
.9cbd		a5 7c		lda $7c		                LDA	dedit_bytelo
.9cbf		18		clc		                CLC
.9cc0		69 08		adc #$08	                ADC	#8
.9cc2		85 7c		sta $7c		                STA	dedit_bytelo
.9cc4		90 02		bcc $9cc8	                BCC	mdedmloop
.9cc6						deddown2:
.9cc6		e6 7d		inc $7d		                INC	dedit_bytehi
.9cc8						mdedmloop:
.9cc8		4c 07 9b	jmp $9b07	                JMP	round
.9ccb						downsect:
.9ccb		a5 7f		lda $7f		                LDA	dedpl
.9ccd		30 0e		bmi $9cdd	                BMI	dslogi
.9ccf		20 8d 9a	jsr $9a8d	                JSR	getpstd
.9cd2		20 7a 99	jsr $997a	                JSR	prevpsect
.9cd5		90 1f		bcc $9cf6	                BCC	okdown2
.9cd7		20 d3 9a	jsr $9ad3	                JSR	message
.9cda		4c f6 9c	jmp $9cf6	                JMP	okdown2
.9cdd						dslogi:
.9cdd		20 87 9a	jsr $9a87	                JSR	getlstd
.9ce0		20 0b 99	jsr $990b	                JSR	prevlsect
.9ce3		90 05		bcc $9cea	                BCC	okdown
.9ce5		20 d3 9a	jsr $9ad3	                JSR	message
.9ce8		a5 84		lda $84		                LDA	param
.9cea						okdown:
.9cea						gonextsect:
.9cea		20 9b 9a	jsr $9a9b	                JSR	putlst
.9ced		a9 02		lda #$02	                LDA	#$02
.9cef						gonextsct:
.9cef		85 82		sta $82		                STA	dedit_input
.9cf1		a2 0d		ldx #$0d	                LDX	#$0D
.9cf3		4c f5 9d	jmp $9df5	                JMP	dednotcopy
.9cf6						okdown2:
.9cf6						gonextpsect:
.9cf6		20 ea 9c	jsr $9cea	                JSR	gonextsect
.9cf9		a9 00		lda #$00	                LDA	#$00
.9cfb		85 7f		sta $7f		                STA	dedpl
.9cfd		60		rts		                RTS
.9cfe						dednotdown:
.9cfe		e0 8b		cpx #$8b	                CPX	#$8B
.9d00		f0 03		beq $9d05	                BEQ	dedup
.9d02		4c 41 9d	jmp $9d41	                JMP	dednotup
.9d05						dedup:
.9d05		a9 08		lda #$08	                LDA	#8
.9d07		85 7a		sta $7a		                STA	tmpscrlo
.9d09		24 81		bit $81		                BIT	shift
.9d0b		30 0d		bmi $9d1a	                BMI	dedup2
.9d0d		24 80		bit $80		                BIT	control
.9d0f		30 0e		bmi $9d1f	                BMI	upsect
.9d11						dedup1:
.9d11		a5 7c		lda $7c		                LDA	dedit_bytelo
.9d13		38		sec		                SEC
.9d14		e9 08		sbc #$08	                SBC	#8
.9d16		85 7c		sta $7c		                STA	dedit_bytelo
.9d18		b0 ae		bcs $9cc8	                BCS	mdedmloop
.9d1a						dedup2:
.9d1a		c6 7d		dec $7d		                DEC	dedit_bytehi
.9d1c		4c 07 9b	jmp $9b07	                JMP	round
.9d1f						upsect:
.9d1f		a5 7f		lda $7f		                LDA	dedpl
.9d21		30 0e		bmi $9d31	                BMI	uslogi
.9d23		20 8d 9a	jsr $9a8d	                JSR	getpstd
.9d26		20 72 99	jsr $9972	                JSR	nextpsect
.9d29		90 03		bcc $9d2e	                BCC	okup0
.9d2b		20 d3 9a	jsr $9ad3	                JSR	message
.9d2e						okup0:
.9d2e		4c f6 9c	jmp $9cf6	                JMP	gonextpsect
.9d31						uslogi:
.9d31		20 87 9a	jsr $9a87	                JSR	getlstd
.9d34		20 03 99	jsr $9903	                JSR	nextlsect
.9d37		90 05		bcc $9d3e	                BCC	okup
.9d39		20 d3 9a	jsr $9ad3	                JSR	message
.9d3c		a5 84		lda $84		                LDA	param
.9d3e						okup:
.9d3e		4c ea 9c	jmp $9cea	                JMP	gonextsect
.9d41						dednotup:
.9d41						notup_down:
.9d41		e0 88		cpx #$88	                CPX	#$88
.9d43		f0 03		beq $9d48	                BEQ	dedISleft
.9d45		4c 8a 9d	jmp $9d8a	                JMP	dednotleft
.9d48						dedISleft:
.9d48		c9 05		cmp #$05	                CMP	#5
.9d4a		b0 07		bcs $9d53	                BCS	editleft
.9d4c		a5 83		lda $83		                LDA	dedit_pos
.9d4e		f0 21		beq $9d71	                BEQ	return1
.9d50		c6 83		dec $83		                DEC	dedit_pos
.9d52		60		rts		                RTS
.9d53						editleft:
.9d53		24 81		bit $81		                BIT	shift
.9d55		30 16		bmi $9d6d	                BMI	dedsleft
.9d57		24 80		bit $80		                BIT	control
.9d59		30 17		bmi $9d72	                BMI	downtrack
.9d5b		a5 83		lda $83		                LDA	dedit_pos
.9d5d		f0 03		beq $9d62	                BEQ	rjmp
.9d5f		c6 83		dec $83		                DEC	dedit_pos
.9d61		60		rts		                RTS
.9d62						rjmp:
.9d62		a9 07		lda #$07	                LDA	#7
.9d64		85 83		sta $83		                STA	dedit_pos
.9d66		a9 08		lda #$08	                LDA	#8
.9d68		85 7a		sta $7a		                STA	tmpscrlo
.9d6a		4c 11 9d	jmp $9d11	                JMP	dedup1
.9d6d						dedsleft:
.9d6d		a9 00		lda #$00	                LDA	#0
.9d6f		85 83		sta $83		                STA	dedit_pos
.9d71						return1:
.9d71		60		rts		                RTS
.9d72						downtrack:
.9d72		20 5a 9a	jsr $9a5a	                JSR	gettrk
.9d75		f0 12		beq $9d89	                BEQ	exitdt
.9d77		aa		tax		                TAX
.9d78		ca		dex		                DEX
.9d79		8a		txa		                TXA
.9d7a		20 7d 9a	jsr $9a7d	                JSR	puttrk
.9d7d		a5 7f		lda $7f		                LDA	dedpl
.9d7f		f0 05		beq $9d86	                BEQ	upt
.9d81		a9 02		lda #$02	                LDA	#$02
.9d83		4c ef 9c	jmp $9cef	                JMP	gonextsct
.9d86						upt:
.9d86		4c f6 9c	jmp $9cf6	                JMP	gonextpsect
.9d89						exitdt:
.9d89		60		rts		                RTS
.9d8a						dednotleft:
.9d8a		e0 89		cpx #$89	                CPX	#$89
.9d8c		f0 03		beq $9d91	                BEQ	dedskip0
.9d8e		4c d7 9d	jmp $9dd7	                JMP	dednotright
.9d91						dedskip0:
.9d91		c9 05		cmp #$05	                CMP	#5
.9d93		b0 0c		bcs $9da1	                BCS	editright
.9d95						dedright:
.9d95		a6 82		ldx $82		                LDX	dedit_input
.9d97		a5 83		lda $83		                LDA	dedit_pos
.9d99		dd e1 99	cmp $99e1,x	                CMP	posblpos,X
.9d9c		f0 02		beq $9da0	                BEQ	return2
.9d9e		e6 83		inc $83		                INC	dedit_pos
.9da0						return2:
.9da0		60		rts		                RTS
.9da1						editright:
.9da1		24 81		bit $81		                BIT	shift
.9da3		30 18		bmi $9dbd	                BMI	dedsright
.9da5		24 80		bit $80		                BIT	control
.9da7		30 19		bmi $9dc2	                BMI	uptrack
.9da9						dedrightx:
.9da9		a5 83		lda $83		                LDA	dedit_pos
.9dab		c9 07		cmp #$07	                CMP	#7
.9dad		f0 03		beq $9db2	                BEQ	rjmp2
.9daf		e6 83		inc $83		                INC	dedit_pos
.9db1		60		rts		                RTS
.9db2						rjmp2:
.9db2		a9 00		lda #$00	                LDA	#0
.9db4		85 83		sta $83		                STA	dedit_pos
.9db6		a9 08		lda #$08	                LDA	#8
.9db8		85 7a		sta $7a		                STA	tmpscrlo
.9dba		4c bd 9c	jmp $9cbd	                JMP	deddown1
.9dbd						dedsright:
.9dbd		a9 07		lda #$07	                LDA	#7
.9dbf		85 83		sta $83		                STA	dedit_pos
.9dc1		60		rts		                RTS
.9dc2						uptrack:
.9dc2		20 5a 9a	jsr $9a5a	                JSR	gettrk
.9dc5		aa		tax		                TAX
.9dc6		e8		inx		                INX
.9dc7		8a		txa		                TXA
.9dc8		20 7d 9a	jsr $9a7d	                JSR	puttrk
.9dcb		a5 7f		lda $7f		                LDA	dedpl
.9dcd		f0 05		beq $9dd4	                BEQ	dpt
.9dcf		a9 02		lda #$02	                LDA	#$02
.9dd1		4c ef 9c	jmp $9cef	                JMP	gonextsct
.9dd4						dpt:
.9dd4		4c f6 9c	jmp $9cf6	                JMP	gonextpsect
.9dd7						drivekeys:
.9dd7						dednotright:
.9dd7		e0 0c		cpx #$0c	                CPX	#$0C
.9dd9		d0 05		bne $9de0	                BNE	notctrlL
.9ddb						ctrlL:
.9ddb		a9 ff		lda #$ff	                LDA	#$FF
.9ddd		85 7f		sta $7f		                STA	dedpl
.9ddf		60		rts		                RTS
.9de0						notctrlL:
.9de0		e0 10		cpx #$10	                CPX	#$10
.9de2		d0 05		bne $9de9	                BNE	notctrlP
.9de4						ctrlP:
.9de4		a9 00		lda #$00	                LDA	#$00
.9de6		85 7f		sta $7f		                STA	dedpl
.9de8		60		rts		                RTS
.9de9						notctrlP:
.9de9		e0 87		cpx #$87	                CPX	#$87
.9deb		d0 08		bne $9df5	                BNE	dednotcopy
.9ded		c9 05		cmp #$05	                CMP	#5
.9def		90 03		bcc $9df4	                BCC	exitcopy
.9df1						copy:
.9df1		20 8b 9f	jsr $9f8b	                JSR	save
.9df4						exitcopy:
.9df4		60		rts		                RTS
.9df5						dednotcopy:
.9df5		e0 0d		cpx #$0d	                CPX	#13
.9df7		d0 33		bne $9e2c	                BNE	dednotCR
.9df9		c9 05		cmp #$05	                CMP	#5
.9dfb		b0 2f		bcs $9e2c	                BCS	dednotCR
.9dfd		a5 82		lda $82		                LDA	dedit_input
.9dff		c9 02		cmp #$02	                CMP	#2
.9e01		d0 05		bne $9e08	                BNE	dedoverb
.9e03		20 db 9d	jsr $9ddb	                JSR	ctrlL
.9e06		d0 07		bne $9e0f	                BNE	dedoverc
.9e08						dedoverb:
.9e08		c9 03		cmp #$03	                CMP	#3
.9e0a		d0 03		bne $9e0f	                BNE	dedoverc
.9e0c		20 e4 9d	jsr $9de4	                JSR	ctrlP
.9e0f						dedoverc:
.9e0f		a5 82		lda $82		                LDA	dedit_input
.9e11		c9 04		cmp #$04	                CMP	#4
.9e13		d0 05		bne $9e1a	                BNE	dednotfile
.9e15		20 a9 9f	jsr $9fa9	                JSR	dedloadfile
.9e18		b0 05		bcs $9e1f	                BCS	noload
.9e1a						dednotfile:
.9e1a						goload:
.9e1a		20 c6 9e	jsr $9ec6	                JSR	dedload
.9e1d		90 0c		bcc $9e2b	                BCC	dedrts
.9e1f						noload:
.9e1f		20 d3 9a	jsr $9ad3	                JSR	message
.9e22		a9 00		lda #$00	                LDA	#0
.9e24		85 78		sta $78		                STA	dedit_sectsizelo
.9e26		85 79		sta $79		                STA	dedit_sectsizehi
.9e28		20 96 a0	jsr $a096	                JSR	deddisplay
.9e2b						dedrts:
.9e2b		60		rts		                RTS
.9e2c						dednotCR:
.9e2c		8a		txa		                TXA
.9e2d		48		pha		                PHA
.9e2e		a6 82		ldx $82		                LDX	dedit_input
.9e30		e0 04		cpx #$04	                CPX	#4
.9e32		f0 16		beq $9e4a	                BEQ	fileinput
.9e34		b0 4e		bcs $9e84	                BCS	editmem
.9e36		bd dd 99	lda $99dd,x	                LDA	char,X
.9e39		aa		tax		                TAX
.9e3a		68		pla		                PLA
.9e3b						dedloop:
.9e3b		dd 5e 85	cmp $855e,x	                CMP	num,X
.9e3e		f0 04		beq $9e44	                BEQ	dedfound
.9e40		ca		dex		                DEX
.9e41		10 f8		bpl $9e3b	                BPL	dedloop
.9e43		60		rts		                RTS
.9e44						dedfound:
.9e44		20 ee ff	jsr $ffee	                JSR	$FFEE
.9e47		4c 95 9d	jmp $9d95	                JMP	dedright
.9e4a						fileinput:
.9e4a		68		pla		                PLA
.9e4b		29 7f		and #$7f	                AND	#$7F
.9e4d		c9 7f		cmp #$7f	                CMP	#$7F
.9e4f		d0 2c		bne $9e7d	                BNE	normkey
.9e51		a5 83		lda $83		                LDA	dedit_pos
.9e53		c9 01		cmp #$01	                CMP	#1
.9e55		f0 2c		beq $9e83	                BEQ	donothing
.9e57		ad 44 7c	lda $7c44	                LDA	$7C44
.9e5a		c9 20		cmp #$20	                CMP	#32
.9e5c		d0 02		bne $9e60	                BNE	del7
.9e5e		c6 83		dec $83		                DEC	dedit_pos
.9e60						del7:
.9e60		ad ec 99	lda $99ec	                LDA	ptrcoords+4
.9e63		18		clc		                CLC
.9e64		65 83		adc $83		                ADC	dedit_pos
.9e66		aa		tax		                TAX
.9e67		a9 1f		lda #$1f	                LDA	#31
.9e69		20 ee ff	jsr $ffee	                JSR	$FFEE
.9e6c		bd ef 99	lda $99ef,x	                LDA	xcoord,X
.9e6f		20 ee ff	jsr $ffee	                JSR	$FFEE
.9e72		bd 22 9a	lda $9a22,x	                LDA	ycoord,X
.9e75		20 ee ff	jsr $ffee	                JSR	$FFEE
.9e78		a9 20		lda #$20	                LDA	#32
.9e7a		4c ee ff	jmp $ffee	                JMP	$FFEE
.9e7d						normkey:
.9e7d		20 ee ff	jsr $ffee	                JSR	$FFEE
.9e80		4c 95 9d	jmp $9d95	                JMP	dedright
.9e83						donothing:
.9e83		60		rts		                RTS
.9e84						editmem:
.9e84		68		pla		                PLA
.9e85		29 7f		and #$7f	                AND	#$7F
.9e87		a6 82		ldx $82		                LDX	dedit_input
.9e89		e0 05		cpx #$05	                CPX	#5
.9e8b		d0 27		bne $9eb4	                BNE	store
.9e8d		a2 0f		ldx #$0f	                LDX	#$F
.9e8f						dedloop2:
.9e8f		dd 5e 85	cmp $855e,x	                CMP	num,X
.9e92		f0 04		beq $9e98	                BEQ	dedfound2
.9e94		ca		dex		                DEX
.9e95		10 f8		bpl $9e8f	                BPL	dedloop2
.9e97		60		rts		                RTS
.9e98						dedfound2:
.9e98		c9 3a		cmp #$3a	                CMP	#':'
.9e9a		90 03		bcc $9e9f	                BCC	number
.9e9c		38		sec		                SEC
.9e9d		e9 07		sbc #$07	                SBC	#7
.9e9f						number:
.9e9f		38		sec		                SEC
.9ea0		e9 30		sbc #$30	                SBC	#$30
.9ea2		85 74		sta $74		                STA	tmp
.9ea4		a5 72		lda $72		                LDA	toggle
.9ea6		49 ff		eor #$ff	                EOR	#$FF
.9ea8		85 72		sta $72		                STA	toggle
.9eaa		a4 83		ldy $83		                LDY	dedit_pos
.9eac		b1 7c		lda ($7c),y	                LDA	(byte),Y
.9eae		0a		asl a		                ASL	A
.9eaf		0a		asl a		                ASL	A
.9eb0		0a		asl a		                ASL	A
.9eb1		0a		asl a		                ASL	A
.9eb2		05 74		ora $74		                ORA	tmp
.9eb4						store:
.9eb4		a4 83		ldy $83		                LDY	dedit_pos
.9eb6		91 7c		sta ($7c),y	                STA	(byte),Y
.9eb8		a5 72		lda $72		                LDA	toggle
.9eba		f0 07		beq $9ec3	                BEQ	goright
.9ebc		a5 82		lda $82		                LDA	dedit_input
.9ebe		c9 06		cmp #$06	                CMP	#6
.9ec0		f0 01		beq $9ec3	                BEQ	goright
.9ec2		60		rts		                RTS
.9ec3						goright:
.9ec3		4c a9 9d	jmp $9da9	                JMP	dedrightx
.9ec6						dedload:
.9ec6		20 5a 9a	jsr $9a5a	                JSR	gettrk
.9ec9		85 70		sta $70		                STA	dedit_dtrk
.9ecb		aa		tax		                TAX
.9ecc		20 fa 98	jsr $98fa	                JSR	ptabcom
.9ecf		20 63 9a	jsr $9a63	                JSR	getdrv
.9ed2		20 0b 97	jsr $970b	                JSR	load_ids
.9ed5		a5 8e		lda $8e		                LDA	param+10
.9ed7		29 1e		and #$1e	                AND	#$1E
.9ed9		d0 3d		bne $9f18	                BNE	dednotok
.9edb		20 c6 96	jsr $96c6	                JSR	sort_ids
.9ede		a5 82		lda $82		                LDA	dedit_input
.9ee0		c9 02		cmp #$02	                CMP	#$02
.9ee2		d0 11		bne $9ef5	                BNE	nogetl
.9ee4						dolp:
.9ee4		20 b5 9a	jsr $9ab5	                JSR	logi_phys
.9ee7		a9 18		lda #$18	                LDA	#$18
.9ee9		b0 2d		bcs $9f18	                BCS	dednotok
.9eeb		a9 ff		lda #$ff	                LDA	#$FF
.9eed		85 7f		sta $7f		                STA	dedpl
.9eef		20 51 9a	jsr $9a51	                JSR	getlsect
.9ef2		4c 0c 9f	jmp $9f0c	                JMP	dedover
.9ef5						nogetl:
.9ef5		c9 03		cmp #$03	                CMP	#$03
.9ef7		d0 0d		bne $9f06	                BNE	nogetp
.9ef9						dopl:
.9ef9		20 a6 9a	jsr $9aa6	                JSR	phys_logi
.9efc		a9 00		lda #$00	                LDA	#$00
.9efe		85 7f		sta $7f		                STA	dedpl
.9f00		20 48 9a	jsr $9a48	                JSR	getpsect
.9f03		4c 0c 9f	jmp $9f0c	                JMP	dedover
.9f06						nogetp:
.9f06		a5 7f		lda $7f		                LDA	dedpl
.9f08		f0 ef		beq $9ef9	                BEQ	dopl
.9f0a		d0 d8		bne $9ee4	                BNE	dolp
.9f0c						dedover:
.9f0c		a8		tay		                TAY
.9f0d		a6 70		ldx $70		                LDX	dedit_dtrk
.9f0f		20 63 9a	jsr $9a63	                JSR	getdrv
.9f12		18		clc		                CLC
.9f13		20 8f 97	jsr $978f	                JSR	loadsector
.9f16		90 02		bcc $9f1a	                BCC	loadOK
.9f18						dednotok:
.9f18		38		sec		                SEC
.9f19		60		rts		                RTS
.9f1a						loadOK:
.9f1a		a5 8e		lda $8e		                LDA	param+10
.9f1c		f0 10		beq $9f2e	                BEQ	notdeldata
.9f1e		8a		txa		                TXA
.9f1f		48		pha		                PHA
.9f20		98		tya		                TYA
.9f21		48		pha		                PHA
.9f22		20 fc 9a	jsr $9afc	                JSR	blankmsg
.9f25		a9 02		lda #$02	                LDA	#2
.9f27		20 d3 9a	jsr $9ad3	                JSR	message
.9f2a		68		pla		                PLA
.9f2b		a8		tay		                TAY
.9f2c		68		pla		                PLA
.9f2d		aa		tax		                TAX
.9f2e						notdeldata:
.9f2e		a5 8f		lda $8f		                LDA	dedit_loaded
.9f30		c9 07		cmp #$07	                CMP	#$07
.9f32		f0 0c		beq $9f40	                BEQ	noreset
.9f34		a9 00		lda #$00	                LDA	#0
.9f36		85 83		sta $83		                STA	dedit_pos
.9f38		a9 60		lda #$60	                LDA	#>buffer2
.9f3a		85 7d		sta $7d		                STA	dedit_bytehi
.9f3c		a9 00		lda #$00	                LDA	#<buffer2
.9f3e		85 7c		sta $7c		                STA	dedit_bytelo
.9f40						noreset:
.9f40		a9 05		lda #$05	                LDA	#5
.9f42		85 82		sta $82		                STA	dedit_input
.9f44		a5 8f		lda $8f		                LDA	dedit_loaded
.9f46		29 f0		and #$f0	                AND	#$F0
.9f48		09 07		ora #$07	                ORA	#$07
.9f4a		85 8f		sta $8f		                STA	dedit_loaded
.9f4c		8a		txa		                TXA
.9f4d		20 04 86	jsr $8604	                JSR	hex_asc
.9f50		8d 5c 7c	sta $7c5c	                STA	$7C5C
.9f53		8c 5d 7c	sty $7c5d	                STY	$7C5D
.9f56		a6 7e		ldx $7e		                LDX	tmp3
.9f58		bd 6a 96	lda $966a,x	                LDA	sectsizes,X
.9f5b		85 79		sta $79		                STA	dedit_sectsizehi
.9f5d		e8		inx		                INX
.9f5e		bd 6a 96	lda $966a,x	                LDA	sectsizes,X
.9f61		85 78		sta $78		                STA	dedit_sectsizelo
.9f63		20 04 86	jsr $8604	                JSR	hex_asc
.9f66		8d 6e 7c	sta $7c6e	                STA	$7C6E
.9f69		8c 6f 7c	sty $7c6f	                STY	$7C6F
.9f6c		a5 79		lda $79		                LDA	dedit_sectsizehi
.9f6e		20 04 86	jsr $8604	                JSR	hex_asc
.9f71		8d 6c 7c	sta $7c6c	                STA	$7C6C
.9f74		8c 6d 7c	sty $7c6d	                STY	$7C6D
.9f77		a9 26		lda #$26	                LDA	#'&'
.9f79		8d 6b 7c	sta $7c6b	                STA	$7C6B
.9f7c		a5 77		lda $77		                LDA	tmp4
.9f7e		4a		lsr a		                LSR	A
.9f7f		4a		lsr a		                LSR	A
.9f80		20 04 86	jsr $8604	                JSR	hex_asc
.9f83		8d 68 7c	sta $7c68	                STA	$7C68
.9f86		8c 69 7c	sty $7c69	                STY	$7C69
.9f89		18		clc		                CLC
.9f8a						notloaded:
.9f8a		60		rts		                RTS
.9f8b						save:
.9f8b		ae 5c 7c	ldx $7c5c	                LDX	$7C5C
.9f8e		ac 5d 7c	ldy $7c5d	                LDY	$7C5D
.9f91		20 43 86	jsr $8643	                JSR	asc_hex
.9f94		48		pha		                PHA
.9f95		20 51 9a	jsr $9a51	                JSR	getlsect
.9f98		a8		tay		                TAY
.9f99		68		pla		                PLA
.9f9a		aa		tax		                TAX
.9f9b		20 63 9a	jsr $9a63	                JSR	getdrv
.9f9e		20 91 98	jsr $9891	                JSR	savesect
.9fa1		e0 00		cpx #$00	                CPX	#0
.9fa3		f0 03		beq $9fa8	                BEQ	exitsave
.9fa5		20 d3 9a	jsr $9ad3	                JSR	message
.9fa8						exitsave:
.9fa8		60		rts		                RTS
.9fa9						dedloadfile:
.9fa9		a9 00		lda #$00	                LDA	#0
.9fab		85 72		sta $72		                STA	toggle
.9fad		a2 08		ldx #$08	                LDX	#8
.9faf						caploop2:
.9faf		bd 3c 7c	lda $7c3c,x	                LDA	$7C3C,X
.9fb2		20 f0 85	jsr $85f0	                JSR	capitalise
.9fb5		9d 3c 7c	sta $7c3c,x	                STA	$7C3C,X
.9fb8		ca		dex		                DEX
.9fb9		10 f4		bpl $9faf	                BPL	caploop2
.9fbb		20 63 9a	jsr $9a63	                JSR	getdrv
.9fbe		a2 00		ldx #$00	                LDX	#0
.9fc0		a0 00		ldy #$00	                LDY	#0
.9fc2		38		sec		                SEC
.9fc3		20 8f 97	jsr $978f	                JSR	loadsector
.9fc6		90 03		bcc $9fcb	                BCC	nextbit
.9fc8		a5 8e		lda $8e		                LDA	param+$0A
.9fca		60		rts		                RTS
.9fcb						nextbit:
.9fcb		a2 00		ldx #$00	                LDX	#0
.9fcd						caploop:
.9fcd		bd 00 60	lda $6000,x	                LDA	buffer2,X
.9fd0		20 f0 85	jsr $85f0	                JSR	capitalise
.9fd3		9d 00 60	sta $6000,x	                STA	buffer2,X
.9fd6		e8		inx		                INX
.9fd7		d0 f4		bne $9fcd	                BNE	caploop
.9fd9		a9 00		lda #$00	                LDA	#<buffer2
.9fdb		85 74		sta $74		                STA	tmp
.9fdd		a9 60		lda #$60	                LDA	#>buffer2
.9fdf		85 75		sta $75		                STA	tmp2
.9fe1						comploop1:
.9fe1		a0 00		ldy #$00	                LDY	#0
.9fe3						comploop2:
.9fe3		b1 74		lda ($74),y	                LDA	(tmp),Y
.9fe5		d9 3e 7c	cmp $7c3e,y	                CMP	$7C3E,Y
.9fe8		d0 0c		bne $9ff6	                BNE	notcomp
.9fea		c8		iny		                INY
.9feb		c0 07		cpy #$07	                CPY	#7
.9fed		d0 f4		bne $9fe3	                BNE	comploop2
.9fef		b1 74		lda ($74),y	                LDA	(tmp),Y
.9ff1		cd 3c 7c	cmp $7c3c	                CMP	$7C3C
.9ff4		f0 24		beq $a01a	                BEQ	comp
.9ff6						notcomp:
.9ff6		a5 74		lda $74		                LDA	tmp
.9ff8		18		clc		                CLC
.9ff9		69 08		adc #$08	                ADC	#8
.9ffb		85 74		sta $74		                STA	tmp
.9ffd		90 e2		bcc $9fe1	                BCC	comploop1
.9fff		a5 72		lda $72		                LDA	toggle
.a001		49 02		eor #$02	                EOR	#$02
.a003		85 72		sta $72		                STA	toggle
.a005		f0 0c		beq $a013	                BEQ	exitcomp
.a007		a5 84		lda $84		                LDA	param
.a009		20 df 98	jsr $98df	                JSR	check62files
.a00c		90 05		bcc $a013	                BCC	exitcomp
.a00e		d0 03		bne $a013	                BNE	exitcomp
.a010		4c cb 9f	jmp $9fcb	                JMP	nextbit
.a013						exitcomp:
.a013		20 4c 9b	jsr $9b4c	                JSR	dedinit
.a016		a9 00		lda #$00	                LDA	#0
.a018		38		sec		                SEC
.a019		60		rts		                RTS
.a01a						comp:
.a01a		a5 74		lda $74		                LDA	tmp
.a01c		48		pha		                PHA
.a01d		a5 75		lda $75		                LDA	tmp2
.a01f		48		pha		                PHA
.a020		a5 84		lda $84		                LDA	param
.a022		a2 00		ldx #$00	                LDX	#0
.a024		a4 72		ldy $72		                LDY	toggle
.a026		c8		iny		                INY
.a027		38		sec		                SEC
.a028		20 8f 97	jsr $978f	                JSR	loadsector
.a02b		90 04		bcc $a031	                BCC	nextbit2
.a02d		aa		tax		                TAX
.a02e		68		pla		                PLA
.a02f		68		pla		                PLA
.a030		60		rts		                RTS
.a031						nextbit2:
.a031		68		pla		                PLA
.a032		85 75		sta $75		                STA	tmp2
.a034		68		pla		                PLA
.a035		85 74		sta $74		                STA	tmp
.a037		a0 06		ldy #$06	                LDY	#$06
.a039		b1 74		lda ($74),y	                LDA	(tmp),Y
.a03b		48		pha		                PHA
.a03c		c8		iny		                INY
.a03d		b1 74		lda ($74),y	                LDA	(tmp),Y
.a03f		85 74		sta $74		                STA	tmp
.a041		68		pla		                PLA
.a042		85 75		sta $75		                STA	tmp2
.a044		a9 00		lda #$00	                LDA	#$00
.a046		85 77		sta $77		                STA	tmp4
.a048		85 76		sta $76		                STA	tmp5
.a04a		a0 ff		ldy #$ff	                LDY	#$FF
.a04c						trkhdlp:
.a04c		98		tya		                TYA
.a04d		48		pha		                PHA
.a04e		a5 77		lda $77		                LDA	tmp4
.a050		20 73 9a	jsr $9a73	                JSR	putlsect
.a053		a5 76		lda $76		                LDA	tmp5
.a055		20 7d 9a	jsr $9a7d	                JSR	puttrk
.a058		68		pla		                PLA
.a059		a8		tay		                TAY
.a05a		c8		iny		                INY
.a05b		c0 0a		cpy #$0a	                CPY	#$0A
.a05d		f0 26		beq $a085	                BEQ	trkhdexit
.a05f		46 75		lsr $75		                LSR	tmp2
.a061		66 74		ror $74		                ROR	tmp
.a063		90 e7		bcc $a04c	                BCC	trkhdlp
.a065		b9 0e 9a	lda $9a0e,y	                LDA	trkhdlo,Y
.a068		18		clc		                CLC
.a069		f8		sed		                SED
.a06a		65 77		adc $77		                ADC	tmp4
.a06c		d8		cld		                CLD
.a06d		85 77		sta $77		                STA	tmp4
.a06f		18		clc		                CLC
.a070		29 f0		and #$f0	                AND	#$F0
.a072		f0 07		beq $a07b	                BEQ	nohdcarry
.a074		38		sec		                SEC
.a075		a5 77		lda $77		                LDA	tmp4
.a077		29 0f		and #$0f	                AND	#$0F
.a079		85 77		sta $77		                STA	tmp4
.a07b						nohdcarry:
.a07b		b9 18 9a	lda $9a18,y	                LDA	trkhdhi,Y
.a07e		65 76		adc $76		                ADC	tmp5
.a080		85 76		sta $76		                STA	tmp5
.a082		4c 4c a0	jmp $a04c	                JMP	trkhdlp
.a085						trkhdexit:
.a085		a5 77		lda $77		                LDA	tmp4
.a087		20 73 9a	jsr $9a73	                JSR	putlsect
.a08a		a5 76		lda $76		                LDA	tmp5
.a08c		20 7d 9a	jsr $9a7d	                JSR	puttrk
.a08f		a9 ff		lda #$ff	                LDA	#$FF
.a091		85 7f		sta $7f		                STA	dedpl
.a093		a9 00		lda #$00	                LDA	#$00
.a095		60		rts		                RTS
.a096						deddisplay:
.a096		a9 82		lda #$82	                LDA	#130
.a098		8d e5 7d	sta $7de5	                STA	$7DE5
.a09b		a9 81		lda #$81	                LDA	#129
.a09d		8d fe 7d	sta $7dfe	                STA	$7DFE
.a0a0		a9 02		lda #$02	                LDA	#2
.a0a2						dedhsloop0:
.a0a2		2c 4d fe	bit $fe4d	                BIT	$FE4D
.a0a5		d0 fb		bne $a0a2	                BNE	dedhsloop0
.a0a7		a9 a1		lda #$a1	                LDA	#$A1
.a0a9		85 80		sta $80		                STA	screenlo
.a0ab		a9 7c		lda #$7c	                LDA	#$7C
.a0ad		85 81		sta $81		                STA	screenhi
.a0af		a2 00		ldx #$00	                LDX	#0
.a0b1		38		sec		                SEC
.a0b2		a5 7c		lda $7c		                LDA	dedit_bytelo
.a0b4		e9 40		sbc #$40	                SBC	#$40
.a0b6		85 7a		sta $7a		                STA	tmpscrlo
.a0b8		a5 7d		lda $7d		                LDA	dedit_bytehi
.a0ba		e9 00		sbc #$00	                SBC	#0
.a0bc		85 7b		sta $7b		                STA	tmpscrhi
.a0be						dedhsloop2:
.a0be		a5 7b		lda $7b		                LDA	tmpscrhi
.a0c0		c9 60		cmp #$60	                CMP	#>buffer2
.a0c2		90 1b		bcc $a0df	                BCC	blankline
.a0c4		a9 60		lda #$60	                LDA	#>buffer2
.a0c6		18		clc		                CLC
.a0c7		65 79		adc $79		                ADC	dedit_sectsizehi
.a0c9		c5 7b		cmp $7b		                CMP	tmpscrhi
.a0cb		90 12		bcc $a0df	                BCC	blankline
.a0cd		d0 37		bne $a106	                BNE	displine
.a0cf		a9 00		lda #$00	                LDA	#<buffer2
.a0d1		18		clc		                CLC
.a0d2		65 78		adc $78		                ADC	dedit_sectsizelo
.a0d4		85 7e		sta $7e		                STA	tmp3
.a0d6		a5 7a		lda $7a		                LDA	tmpscrlo
.a0d8		c5 7e		cmp $7e		                CMP	tmp3
.a0da		b0 03		bcs $a0df	                BCS	blankline
.a0dc		4c 06 a1	jmp $a106	                JMP	displine
.a0df						blankline:
.a0df		a0 27		ldy #$27	                LDY	#39
.a0e1		a9 00		lda #$00	                LDA	#0
.a0e3						dedhsloop4:
.a0e3		91 80		sta ($80),y	                STA	(screenlo),Y
.a0e5		88		dey		                DEY
.a0e6		10 fb		bpl $a0e3	                BPL	dedhsloop4
.a0e8		a9 28		lda #$28	                LDA	#40
.a0ea		18		clc		                CLC
.a0eb		65 80		adc $80		                ADC	screenlo
.a0ed		85 80		sta $80		                STA	screenlo
.a0ef		90 02		bcc $a0f3	                BCC	dedhsjmp2
.a0f1		e6 81		inc $81		                INC	screenhi
.a0f3						dedhsjmp2:
.a0f3		a9 08		lda #$08	                LDA	#8
.a0f5		18		clc		                CLC
.a0f6		65 7a		adc $7a		                ADC	tmpscrlo
.a0f8		85 7a		sta $7a		                STA	tmpscrlo
.a0fa		90 02		bcc $a0fe	                BCC	dedhsjmp3
.a0fc		e6 7b		inc $7b		                INC	tmpscrhi
.a0fe						dedhsjmp3:
.a0fe		8a		txa		                TXA
.a0ff		18		clc		                CLC
.a100		69 08		adc #$08	                ADC	#8
.a102		aa		tax		                TAX
.a103		4c 54 a1	jmp $a154	                JMP	dedhsjmp7
.a106						displine:
.a106		a5 7b		lda $7b		                LDA	tmpscrhi
.a108		38		sec		                SEC
.a109		e9 60		sbc #$60	                SBC	#>buffer2
.a10b		20 16 86	jsr $8616	                JSR	printnumx
.a10e		a5 7a		lda $7a		                LDA	tmpscrlo
.a110		38		sec		                SEC
.a111		e9 00		sbc #$00	                SBC	#<buffer2
.a113		20 16 86	jsr $8616	                JSR	printnumx
.a116		a5 80		lda $80		                LDA	screenlo
.a118		18		clc		                CLC
.a119		69 02		adc #$02	                ADC	#2
.a11b		85 80		sta $80		                STA	screenlo
.a11d		a0 00		ldy #$00	                LDY	#0
.a11f						dedhsloop1:
.a11f		b1 7a		lda ($7a),y	                LDA	(tmpscrlo),Y
.a121		38		sec		                SEC
.a122		20 17 86	jsr $8617	                JSR	printnum
.a125		e8		inx		                INX
.a126		c8		iny		                INY
.a127		c0 08		cpy #$08	                CPY	#8
.a129		d0 f4		bne $a11f	                BNE	dedhsloop1
.a12b		a0 07		ldy #$07	                LDY	#7
.a12d						dedhsloop3:
.a12d		b1 7a		lda ($7a),y	                LDA	(tmpscrlo),Y
.a12f		29 7f		and #$7f	                AND	#$7F
.a131		86 7e		stx $7e		                STX	tmp3
.a133		aa		tax		                TAX
.a134		bd 6e 85	lda $856e,x	                LDA	letter,X
.a137		a6 7e		ldx $7e		                LDX	tmp3
.a139		91 80		sta ($80),y	                STA	(screenlo),Y
.a13b		88		dey		                DEY
.a13c		10 ef		bpl $a12d	                BPL	dedhsloop3
.a13e		a5 80		lda $80		                LDA	screenlo
.a140		18		clc		                CLC
.a141		69 0a		adc #$0a	                ADC	#10
.a143		85 80		sta $80		                STA	screenlo
.a145		90 02		bcc $a149	                BCC	dedhsjmp6
.a147		e6 81		inc $81		                INC	screenhi
.a149						dedhsjmp6:
.a149		a5 7a		lda $7a		                LDA	tmpscrlo
.a14b		18		clc		                CLC
.a14c		69 08		adc #$08	                ADC	#8
.a14e		85 7a		sta $7a		                STA	tmpscrlo
.a150		90 02		bcc $a154	                BCC	dedhsjmp7
.a152		e6 7b		inc $7b		                INC	tmpscrhi
.a154						dedhsjmp7:
.a154		e0 90		cpx #$90	                CPX	#$90
.a156		f0 03		beq $a15b	                BEQ	notdedhsloop2
.a158		4c be a0	jmp $a0be	                JMP	dedhsloop2
.a15b						notdedhsloop2:
.a15b		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: format.s65

.a15c						formerr:
.a15c		4c 9c 81	jmp $819c	                JMP	synerr
.a15f						formatpa:
.a15f		a2 02		ldx #$02	                LDX	#$02
.a161						formloop9:
.a161		8a		txa		                TXA
.a162		48		pha		                PHA
.a163		20 e6 86	jsr $86e6	                JSR	rdnum
.a166		d0 f4		bne $a15c	                BNE	formerr
.a168		68		pla		                PLA
.a169		aa		tax		                TAX
.a16a		a5 84		lda $84		                LDA	clibuf
.a16c		48		pha		                PHA
.a16d		ca		dex		                DEX
.a16e		10 f1		bpl $a161	                BPL	formloop9
.a170		20 e6 86	jsr $86e6	                JSR	rdnum
.a173		d0 1b		bne $a190	                BNE	noopt1
.a175		a5 84		lda $84		                LDA	clibuf
.a177		48		pha		                PHA
.a178		20 e6 86	jsr $86e6	                JSR	rdnum
.a17b		d0 16		bne $a193	                BNE	noopt2
.a17d		a5 84		lda $84		                LDA	clibuf
.a17f		48		pha		                PHA
.a180		20 e6 86	jsr $86e6	                JSR	rdnum
.a183		d0 15		bne $a19a	                BNE	noopt3
.a185		a5 84		lda $84		                LDA	clibuf
.a187		48		pha		                PHA
.a188		a5 85		lda $85		                LDA	clibuf+1
.a18a		48		pha		                PHA
.a18b		a9 00		lda #$00	                LDA	#$00
.a18d		4c cb a1	jmp $a1cb	                JMP	formover
.a190						noopt1:
.a190		a9 01		lda #$01	                LDA	#$01
.a192		48		pha		                PHA
.a193						noopt2:
.a193		68		pla		                PLA
.a194		48		pha		                PHA
.a195		aa		tax		                TAX
.a196		bd cd a2	lda $a2cd,x	                LDA	maxsects,X
.a199		48		pha		                PHA
.a19a						noopt3:
.a19a		68		pla		                PLA
.a19b		0a		asl a		                ASL	A
.a19c		0a		asl a		                ASL	A
.a19d		aa		tax		                TAX
.a19e		68		pla		                PLA
.a19f		a8		tay		                TAY
.a1a0		48		pha		                PHA
.a1a1		8a		txa		                TXA
.a1a2		4a		lsr a		                LSR	A
.a1a3		4a		lsr a		                LSR	A
.a1a4		48		pha		                PHA
.a1a5		85 74		sta $74		                STA	tmp
.a1a7		98		tya		                TYA
.a1a8		a4 74		ldy $74		                LDY	tmp
.a1aa		ca		dex		                DEX
.a1ab						formloop0:
.a1ab		9d 00 0a	sta $0a00,x	                STA	formidblk,X
.a1ae		48		pha		                PHA
.a1af		ca		dex		                DEX
.a1b0		88		dey		                DEY
.a1b1		98		tya		                TYA
.a1b2		9d 00 0a	sta $0a00,x	                STA	formidblk,X
.a1b5		a9 00		lda #$00	                LDA	#$00
.a1b7		ca		dex		                DEX
.a1b8		9d 00 0a	sta $0a00,x	                STA	formidblk,X
.a1bb		ca		dex		                DEX
.a1bc		9d 00 0a	sta $0a00,x	                STA	formidblk,X
.a1bf		68		pla		                PLA
.a1c0		ca		dex		                DEX
.a1c1		10 e8		bpl $a1ab	                BPL	formloop0
.a1c3		a9 00		lda #$00	                LDA	#<formidblk
.a1c5		48		pha		                PHA
.a1c6		a9 0a		lda #$0a	                LDA	#>formidblk
.a1c8		48		pha		                PHA
.a1c9		a9 ff		lda #$ff	                LDA	#$FF
.a1cb						formover:
.a1cb		85 80		sta $80		                STA	format_finctrk
.a1cd		68		pla		                PLA
.a1ce		85 86		sta $86		                STA	param+2
.a1d0		68		pla		                PLA
.a1d1		85 85		sta $85		                STA	param+1
.a1d3		68		pla		                PLA
.a1d4		85 74		sta $74		                STA	tmp
.a1d6		68		pla		                PLA
.a1d7		0a		asl a		                ASL	A
.a1d8		0a		asl a		                ASL	A
.a1d9		0a		asl a		                ASL	A
.a1da		0a		asl a		                ASL	A
.a1db		0a		asl a		                ASL	A
.a1dc		29 e0		and #$e0	                AND	#$E0
.a1de		05 74		ora $74		                ORA	tmp
.a1e0		85 74		sta $74		                STA	tmp
.a1e2		68		pla		                PLA
.a1e3		85 81		sta $81		                STA	totrk
.a1e5		68		pla		                PLA
.a1e6		85 82		sta $82		                STA	fromtrk
.a1e8		85 83		sta $83		                STA	format_formstart
.a1ea		68		pla		                PLA
.a1eb		85 84		sta $84		                STA	param
.a1ed		20 af 89	jsr $89af	                JSR	pcprint
>a1f0		46 6f 72 6d 61 74 20 64		                .text	'Format drive'
>a1f8		72 69 76 65
>a1fc		81				                .byte	$81
>a1fd		00				                .byte	$00
.a1fe		a6 84		ldx $84		                LDX	param
.a200		bd 5e 85	lda $855e,x	                LDA	num,X
.a203		20 ee ff	jsr $ffee	                JSR	$FFEE
.a206		20 af 89	jsr $89af	                JSR	pcprint
>a209		87				                .byte	$87
>a20a		3f				                .text	'?'
>a20b		82				                .byte	$82
>a20c		00				                .byte	$00
.a20d		20 e0 ff	jsr $ffe0	                JSR	$FFE0
.a210		20 f0 85	jsr $85f0	                JSR	capitalise
.a213		c9 59		cmp #$59	                CMP	#'Y'
.a215		f0 0a		beq $a221	                BEQ	goformat
.a217		20 af 89	jsr $89af	                JSR	pcprint
>a21a		4e 6f				                .text	'No'
>a21c		0d				                .byte	$0D
>a21d		00				                .byte	$00
.a21e		4c c7 a2	jmp $a2c7	                JMP	exitform
.a221						goformat:
.a221		20 af 89	jsr $89af	                JSR	pcprint
>a224		59 65 73			                .text	'Yes'
>a227		0d				                .byte	$0D
>a228		00				                .byte	$00
.a229		a4 74		ldy $74		                LDY	tmp
.a22b						formloop2:
.a22b		a5 80		lda $80		                LDA	format_finctrk
.a22d		f0 16		beq $a245	                BEQ	userids
.a22f		98		tya		                TYA
.a230		29 1f		and #$1f	                AND	#$1F
.a232		0a		asl a		                ASL	A
.a233		0a		asl a		                ASL	A
.a234		85 74		sta $74		                STA	tmp
.a236		a2 00		ldx #$00	                LDX	#$00
.a238		a5 82		lda $82		                LDA	fromtrk
.a23a						formloop3:
.a23a		9d 00 0a	sta $0a00,x	                STA	formidblk,X
.a23d		e8		inx		                INX
.a23e		e8		inx		                INX
.a23f		e8		inx		                INX
.a240		e8		inx		                INX
.a241		e4 74		cpx $74		                CPX	tmp
.a243		d0 f5		bne $a23a	                BNE	formloop3
.a245						userids:
.a245		a6 82		ldx $82		                LDX	fromtrk
.a247		a5 84		lda $84		                LDA	param
.a249		20 33 97	jsr $9733	                JSR	format
.a24c		29 0f		and #$0f	                AND	#$0F
.a24e		c9 12		cmp #$12	                CMP	#$12
.a250		f0 72		beq $a2c4	                BEQ	wperror
.a252		98		tya		                TYA
.a253		48		pha		                PHA
.a254		a9 86		lda #$86	                LDA	#134
.a256		20 ee ff	jsr $ffee	                JSR	$FFEE
.a259		a5 82		lda $82		                LDA	fromtrk
.a25b		20 98 89	jsr $8998	                JSR	wdigit
.a25e		a5 90		lda $90		                LDA	param+$C
.a260		f0 02		beq $a264	                BEQ	formok
.a262		a9 1f		lda #$1f	                LDA	#'?'-' '
.a264						formok:
.a264		18		clc		                CLC
.a265		69 20		adc #$20	                ADC	#' '
.a267		20 ee ff	jsr $ffee	                JSR	$FFEE
.a26a		68		pla		                PLA
.a26b		a8		tay		                TAY
.a26c		e6 82		inc $82		                INC	fromtrk
.a26e		a5 81		lda $81		                LDA	totrk
.a270		c5 82		cmp $82		                CMP	fromtrk
.a272		b0 b7		bcs $a22b	                BCS	formloop2
.a274		c0 2a		cpy #$2a	                CPY	#$2A
.a276		d0 4f		bne $a2c7	                BNE	exitform
.a278		a5 83		lda $83		                LDA	format_formstart
.a27a		d0 4b		bne $a2c7	                BNE	exitform
.a27c		a2 00		ldx #$00	                LDX	#$00
.a27e		8a		txa		                TXA
.a27f						formloop4:
.a27f		9d 00 60	sta $6000,x	                STA	buffer2,X
.a282		e8		inx		                INX
.a283		d0 fa		bne $a27f	                BNE	formloop4
.a285		a9 00		lda #$00	                LDA	#<buffer1
.a287		85 85		sta $85		                STA	ptab
.a289		a9 0a		lda #$0a	                LDA	#>buffer1
.a28b		85 86		sta $86		                STA	ptab+1
.a28d		a2 00		ldx #$00	                LDX	#$00
.a28f		a5 84		lda $84		                LDA	param
.a291		20 0b 97	jsr $970b	                JSR	load_ids
.a294		a0 00		ldy #$00	                LDY	#$00
.a296		a9 00		lda #$00	                LDA	#<buffer2
.a298		85 85		sta $85		                STA	param+1
.a29a		a9 60		lda #$60	                LDA	#>buffer2
.a29c		85 86		sta $86		                STA	param+2
.a29e		a5 84		lda $84		                LDA	param
.a2a0		20 91 98	jsr $9891	                JSR	savesect
.a2a3		a9 00		lda #$00	                LDA	#$00
.a2a5		a0 00		ldy #$00	                LDY	#$00
.a2a7		a6 81		ldx $81		                LDX	totrk
.a2a9						formloop5:
.a2a9		18		clc		                CLC
.a2aa		69 0a		adc #$0a	                ADC	#$0A
.a2ac		90 01		bcc $a2af	                BCC	formnoinc
.a2ae		c8		iny		                INY
.a2af						formnoinc:
.a2af		ca		dex		                DEX
.a2b0		10 f7		bpl $a2a9	                BPL	formloop5
.a2b2		8d 07 60	sta $6007	                STA	buffer2+7
.a2b5		8c 06 60	sty $6006	                STY	buffer2+6
.a2b8		a5 84		lda $84		                LDA	param
.a2ba		a2 00		ldx #$00	                LDX	#$00
.a2bc		a0 01		ldy #$01	                LDY	#$01
.a2be		20 91 98	jsr $9891	                JSR	savesect
.a2c1		4c c7 a2	jmp $a2c7	                JMP	exitform
.a2c4						wperror:
.a2c4		20 5c 96	jsr $965c	                JSR	discerrmsg
.a2c7						exitform:
.a2c7		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a2ca		4c bf 88	jmp $88bf	                JMP	fatal
.a2cd						maxsects:
>a2cd		12				                .byte	18
>a2ce		0a				                .byte	10
>a2cf		04				                .byte	4
>a2d0		02				                .byte	2
>a2d1		01				                .byte	1
>a2d2		00				                .byte	0
>a2d3		00				                .byte	0
>a2d4		00				                .byte	0

;******  Return to file: hackrom.s65


;******  Processing file: ids.s65

.a2d5						ldiderr:
.a2d5		4c 9c 81	jmp $819c	                JMP	synerr
.a2d8						loadidspa:
.a2d8		20 e6 86	jsr $86e6	                JSR	rdnum
.a2db		d0 f8		bne $a2d5	                BNE	ldiderr
.a2dd						idcommon:
.a2dd		a5 85		lda $85		                LDA	clibuf+1
.a2df		48		pha		                PHA
.a2e0		a5 84		lda $84		                LDA	clibuf
.a2e2		48		pha		                PHA
.a2e3		20 e6 86	jsr $86e6	                JSR	rdnum
.a2e6		d0 ed		bne $a2d5	                BNE	ldiderr
.a2e8		a5 84		lda $84		                LDA	clibuf
.a2ea		48		pha		                PHA
.a2eb		20 e6 86	jsr $86e6	                JSR	rdnum
.a2ee		d0 e5		bne $a2d5	                BNE	ldiderr
.a2f0		a5 84		lda $84		                LDA	clibuf
.a2f2		85 8d		sta $8d		                STA	param+9
.a2f4		20 e6 86	jsr $86e6	                JSR	rdnum
.a2f7		f0 05		beq $a2fe	                BEQ	ldiddrv
.a2f9		ad c8 10	lda $10c8	                LDA	$10C8
.a2fc		85 84		sta $84		                STA	clibuf
.a2fe						ldiddrv:
.a2fe		a5 84		lda $84		                LDA	clibuf
.a300		85 84		sta $84		                STA	param
.a302		68		pla		                PLA
.a303		aa		tax		                TAX
.a304		68		pla		                PLA
.a305		85 85		sta $85		                STA	ptab
.a307		68		pla		                PLA
.a308		85 86		sta $86		                STA	ptab+1
.a30a		20 11 97	jsr $9711	                JSR	loadnumids
.a30d		a5 8e		lda $8e		                LDA	param+10
.a30f		f0 03		beq $a314	                BEQ	noerr
.a311		4c 5c 96	jmp $965c	                JMP	discerrmsg
.a314						noerr:
.a314		60		rts		                RTS
.a315						pidspa:
.a315		a9 00		lda #$00	                LDA	#<buffer1
.a317		85 84		sta $84		                STA	clibuf
.a319		a9 0a		lda #$0a	                LDA	#>buffer1
.a31b		85 85		sta $85		                STA	clibuf+1
.a31d		20 dd a2	jsr $a2dd	                JSR	idcommon
.a320		20 af 89	jsr $89af	                JSR	pcprint
>a323		81 0d				                .byte	129,$0D
>a325		4c 6f 67 2d 54 72 6b 20		                .text	"Log-Trk  Head  Log-Sect  Size"
>a32d		20 48 65 61 64 20 20 4c 6f 67 2d 53 65 63 74 20
>a33d		20 53 69 7a 65
>a342		00				                .byte	$00
.a343		a5 8d		lda $8d		                LDA	param+9
.a345		29 1f		and #$1f	                AND	#$1F
.a347		0a		asl a		                ASL	A
.a348		0a		asl a		                ASL	A
.a349		85 8d		sta $8d		                STA	param+9
.a34b		a2 00		ldx #$00	                LDX	#$00
.a34d						pidloop0:
.a34d		20 62 a3	jsr $a362	                JSR	spaces
.a350		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.a353		20 98 89	jsr $8998	                JSR	wdigit
.a356		e8		inx		                INX
.a357		e4 8d		cpx $8d		                CPX	param+9
.a359		d0 f2		bne $a34d	                BNE	pidloop0
.a35b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a35e		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a361		60		rts		                RTS
.a362						spaces:
.a362		8a		txa		                TXA
.a363		29 03		and #$03	                AND	#$03
.a365		d0 05		bne $a36c	                BNE	space
.a367		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a36a		a9 00		lda #$00	                LDA	#0
.a36c						space:
.a36c		a8		tay		                TAY
.a36d		48		pha		                PHA
.a36e		b9 87 a3	lda $a387,y	                LDA	colour,Y
.a371		20 ee ff	jsr $ffee	                JSR	$FFEE
.a374		68		pla		                PLA
.a375		a8		tay		                TAY
.a376		b9 83 a3	lda $a383,y	                LDA	nspace,Y
.a379		a8		tay		                TAY
.a37a		a9 20		lda #$20	                LDA	#' '
.a37c						pidloop1:
.a37c		20 ee ff	jsr $ffee	                JSR	$FFEE
.a37f		88		dey		                DEY
.a380		10 fa		bpl $a37c	                BPL	pidloop1
.a382		60		rts		                RTS
.a383						nspace:
>a383		01 03 04 04			                .byte	1,3,4,4
.a387						colour:
>a387		86 81 82 83			                .byte	134,129,130,131

;******  Return to file: hackrom.s65


;******  Processing file: verify.s65

.a38b						vererr:
.a38b		4c 9c 81	jmp $819c	                JMP	synerr
.a38e						verifypa:
.a38e		a2 02		ldx #$02	                LDX	#$02
.a390						verloop0:
.a390		8a		txa		                TXA
.a391		48		pha		                PHA
.a392		20 e6 86	jsr $86e6	                JSR	rdnum
.a395		d0 f4		bne $a38b	                BNE	vererr
.a397		68		pla		                PLA
.a398		aa		tax		                TAX
.a399		a5 84		lda $84		                LDA	clibuf
.a39b		48		pha		                PHA
.a39c		ca		dex		                DEX
.a39d		10 f1		bpl $a390	                BPL	verloop0
.a39f		20 80 86	jsr $8680	                JSR	rdstr
.a3a2		d0 13		bne $a3b7	                BNE	dverify
.a3a4		b1 f2		lda ($f2),y	                LDA	($F2),Y
.a3a6		20 f0 85	jsr $85f0	                JSR	capitalise
.a3a9		c9 45		cmp #$45	                CMP	#'E'
.a3ab		d0 03		bne $a3b0	                BNE	ver_not_e
.a3ad		4c c2 a4	jmp $a4c2	                JMP	everify
.a3b0						ver_not_e:
.a3b0		c9 4c		cmp #$4c	                CMP	#'L'
.a3b2		d0 d7		bne $a38b	                BNE	vererr
.a3b4		4c 2c a4	jmp $a42c	                JMP	nverify
.a3b7						dverify:
.a3b7		68		pla		                PLA
.a3b8		85 81		sta $81		                STA	totrk
.a3ba		68		pla		                PLA
.a3bb		85 82		sta $82		                STA	fromtrk
.a3bd		68		pla		                PLA
.a3be		85 84		sta $84		                STA	param
.a3c0						dverloop1:
.a3c0		a9 2a		lda #$2a	                LDA	#$2A
.a3c2		a0 00		ldy #$00	                LDY	#$00
.a3c4		a6 8b		ldx $8b		                LDX	param+7
.a3c6		20 77 97	jsr $9777	                JSR	verify
.a3c9		d0 1d		bne $a3e8	                BNE	dvernotok
.a3cb		a9 86		lda #$86	                LDA	#134
.a3cd		20 ee ff	jsr $ffee	                JSR	$FFEE
.a3d0		a5 82		lda $82		                LDA	fromtrk
.a3d2		20 98 89	jsr $8998	                JSR	wdigit
.a3d5		a9 09		lda #$09	                LDA	#$09
.a3d7		20 ee ff	jsr $ffee	                JSR	$FFEE
.a3da						dvnexttrk:
.a3da		e6 82		inc $82		                INC	fromtrk
.a3dc		e6 8b		inc $8b		                INC	param+7
.a3de		a5 81		lda $81		                LDA	totrk
.a3e0		c5 82		cmp $82		                CMP	fromtrk
.a3e2		b0 dc		bcs $a3c0	                BCS	dverloop1
.a3e4		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a3e7		60		rts		                RTS
.a3e8						dvernotok:
.a3e8		a0 00		ldy #$00	                LDY	#$00
.a3ea						dverloop2:
.a3ea		98		tya		                TYA
.a3eb		48		pha		                PHA
.a3ec		a9 87		lda #$87	                LDA	#135
.a3ee		20 ee ff	jsr $ffee	                JSR	$FFEE
.a3f1		a8		tay		                TAY
.a3f2		20 98 89	jsr $8998	                JSR	wdigit
.a3f5		20 af 89	jsr $89af	                JSR	pcprint
>a3f8		08 08 08			                .fill	3,8
>a3fb		00				                .byte	0
.a3fc		a0 00		ldy #$00	                LDY	#$00
.a3fe		a9 21		lda #$21	                LDA	#$21
.a400		20 77 97	jsr $9777	                JSR	verify
.a403		29 1e		and #$1e	                AND	#$1E
.a405		f0 0c		beq $a413	                BEQ	dverOK
.a407		68		pla		                PLA
.a408		20 af 89	jsr $89af	                JSR	pcprint
>a40b		81 09 09 09 00			                .byte	129,9,9,9,0
.a410		4c da a3	jmp $a3da	                JMP	dvnexttrk
.a413						dverOK:
.a413		68		pla		                PLA
.a414		a8		tay		                TAY
.a415		c8		iny		                INY
.a416		c0 0a		cpy #$0a	                CPY	#$0A
.a418		d0 d0		bne $a3ea	                BNE	dverloop2
.a41a		a9 86		lda #$86	                LDA	#134
.a41c		20 ee ff	jsr $ffee	                JSR	$FFEE
.a41f		a5 82		lda $82		                LDA	fromtrk
.a421		20 98 89	jsr $8998	                JSR	wdigit
.a424		a9 09		lda #$09	                LDA	#$09
.a426		20 ee ff	jsr $ffee	                JSR	$FFEE
.a429		4c da a3	jmp $a3da	                JMP	dvnexttrk
.a42c						nverify:
.a42c		68		pla		                PLA
.a42d		85 81		sta $81		                STA	totrk
.a42f		68		pla		                PLA
.a430		85 82		sta $82		                STA	fromtrk
.a432		68		pla		                PLA
.a433		85 84		sta $84		                STA	param
.a435						verloop1:
.a435		20 fa 98	jsr $98fa	                JSR	ptabcom
.a438		a5 84		lda $84		                LDA	param
.a43a		a6 82		ldx $82		                LDX	fromtrk
.a43c		20 0b 97	jsr $970b	                JSR	load_ids
.a43f		ad 03 0a	lda $0a03	                LDA	buffer1+3
.a442		0a		asl a		                ASL	A
.a443		0a		asl a		                ASL	A
.a444		0a		asl a		                ASL	A
.a445		0a		asl a		                ASL	A
.a446		0a		asl a		                ASL	A
.a447		8d 03 0a	sta $0a03	                STA	buffer1+3
.a44a		ee 03 0a	inc $0a03	                INC	buffer1+3
.a44d		20 c6 96	jsr $96c6	                JSR	sort_ids
.a450		85 70		sta $70		                STA	verify_vnumsects
.a452		a0 00		ldy #$00	                LDY	#$00
.a454						verloop2:
.a454		98		tya		                TYA
.a455		48		pha		                PHA
.a456		a9 87		lda #$87	                LDA	#135
.a458		20 ee ff	jsr $ffee	                JSR	$FFEE
.a45b		98		tya		                TYA
.a45c		20 98 89	jsr $8998	                JSR	wdigit
.a45f		20 af 89	jsr $89af	                JSR	pcprint
>a462		08 08 08			                .fill	3,8
>a465		00				                .byte	0
.a466		68		pla		                PLA
.a467		48		pha		                PHA
.a468		a8		tay		                TAY
.a469		0a		asl a		                ASL	A
.a46a		0a		asl a		                ASL	A
.a46b		aa		tax		                TAX
.a46c		a8		tay		                TAY
.a46d		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.a470		aa		tax		                TAX
.a471		d0 04		bne $a477	                BNE	not_trk0
.a473		a5 82		lda $82		                LDA	fromtrk
.a475		d0 10		bne $a487	                BNE	is_trk0
.a477						not_trk0:
.a477		aa		tax		                TAX
.a478		a5 84		lda $84		                LDA	param
.a47a		20 9b 96	jsr $969b	                JSR	writetrack
.a47d		b9 02 0a	lda $0a02,y	                LDA	buffer1+2,Y
.a480		a8		tay		                TAY
.a481		ad 03 0a	lda $0a03	                LDA	buffer1+3
.a484		20 77 97	jsr $9777	                JSR	verify
.a487						is_trk0:
.a487		29 1e		and #$1e	                AND	#$1E
.a489		08		php		                PHP
.a48a		a5 84		lda $84		                LDA	param
.a48c		a6 82		ldx $82		                LDX	fromtrk
.a48e		20 9b 96	jsr $969b	                JSR	writetrack
.a491		28		plp		                PLP
.a492		f0 0c		beq $a4a0	                BEQ	verOK
.a494		68		pla		                PLA
.a495		20 af 89	jsr $89af	                JSR	pcprint
>a498		81 09 09 09 00			                .byte	129,9,9,9,0
.a49d		4c b6 a4	jmp $a4b6	                JMP	vnexttrk
.a4a0						verOK:
.a4a0		68		pla		                PLA
.a4a1		a8		tay		                TAY
.a4a2		c8		iny		                INY
.a4a3		c4 70		cpy $70		                CPY	verify_vnumsects
.a4a5		d0 ad		bne $a454	                BNE	verloop2
.a4a7		a9 86		lda #$86	                LDA	#134
.a4a9		20 ee ff	jsr $ffee	                JSR	$FFEE
.a4ac		a5 82		lda $82		                LDA	fromtrk
.a4ae		20 98 89	jsr $8998	                JSR	wdigit
.a4b1		a9 09		lda #$09	                LDA	#$09
.a4b3		20 ee ff	jsr $ffee	                JSR	$FFEE
.a4b6						vnexttrk:
.a4b6		e6 82		inc $82		                INC	fromtrk
.a4b8		a5 81		lda $81		                LDA	totrk
.a4ba		c5 82		cmp $82		                CMP	fromtrk
.a4bc		90 03		bcc $a4c1	                BCC	ver_exit
.a4be		4c 35 a4	jmp $a435	                JMP	verloop1
.a4c1						ver_exit:
.a4c1		60		rts		                RTS
.a4c2						everify:
.a4c2		68		pla		                PLA
.a4c3		85 81		sta $81		                STA	totrk
.a4c5		68		pla		                PLA
.a4c6		85 82		sta $82		                STA	fromtrk
.a4c8		68		pla		                PLA
.a4c9		85 84		sta $84		                STA	param
.a4cb						verloop3:
.a4cb		a9 ff		lda #$ff	                LDA	#$FF
.a4cd		85 8f		sta $8f		                STA	verify_cr
.a4cf		20 af 89	jsr $89af	                JSR	pcprint
>a4d2		0d				                .byte	$0D
>a4d3		54 72 61 63 6b			                .text	'Track'
>a4d8		81 00				                .byte	129,0
.a4da		a5 82		lda $82		                LDA	fromtrk
.a4dc		20 98 89	jsr $8998	                JSR	wdigit
.a4df		20 af 89	jsr $89af	                JSR	pcprint
>a4e2		86				                .byte	134
>a4e3		3a				                .text	':'
>a4e4		87 00				                .byte	135,0
.a4e6		a9 00		lda #$00	                LDA	#<buffer1
.a4e8		85 85		sta $85		                STA	ptab
.a4ea		a9 0a		lda #$0a	                LDA	#>buffer1
.a4ec		85 86		sta $86		                STA	ptab+1
.a4ee		a5 84		lda $84		                LDA	param
.a4f0		a6 82		ldx $82		                LDX	fromtrk
.a4f2		20 0b 97	jsr $970b	                JSR	load_ids
.a4f5		a5 8e		lda $8e		                LDA	param+$0A
.a4f7		f0 12		beq $a50b	                BEQ	govsect
.a4f9		48		pha		                PHA
.a4fa		a9 08		lda #$08	                LDA	#$08
.a4fc		20 ee ff	jsr $ffee	                JSR	$FFEE
.a4ff		a9 85		lda #$85	                LDA	#133
.a501		20 ee ff	jsr $ffee	                JSR	$FFEE
.a504		68		pla		                PLA
.a505		20 5c 96	jsr $965c	                JSR	discerrmsg
.a508		4c 79 a5	jmp $a579	                JMP	vnextrk2
.a50b						govsect:
.a50b		20 c6 96	jsr $96c6	                JSR	sort_ids
.a50e		85 70		sta $70		                STA	verify_vnumsects
.a510		ad 83 0a	lda $0a83	                LDA	buffer3+3
.a513		0a		asl a		                ASL	A
.a514		0a		asl a		                ASL	A
.a515		0a		asl a		                ASL	A
.a516		0a		asl a		                ASL	A
.a517		0a		asl a		                ASL	A
.a518		85 75		sta $75		                STA	tmp2
.a51a		e6 75		inc $75		                INC	tmp2
.a51c		a0 00		ldy #$00	                LDY	#$00
.a51e						verloop4:
.a51e		98		tya		                TYA
.a51f		48		pha		                PHA
.a520		0a		asl a		                ASL	A
.a521		0a		asl a		                ASL	A
.a522		aa		tax		                TAX
.a523		a8		tay		                TAY
.a524		bd 00 0a	lda $0a00,x	                LDA	buffer1,X
.a527		aa		tax		                TAX
.a528		d0 09		bne $a533	                BNE	verover4
.a52a		a5 82		lda $82		                LDA	fromtrk
.a52c		f0 05		beq $a533	                BEQ	verover4
.a52e		a9 18		lda #$18	                LDA	#$18
.a530		4c 41 a5	jmp $a541	                JMP	verover5
.a533						verover4:
.a533		a5 84		lda $84		                LDA	param
.a535		20 9b 96	jsr $969b	                JSR	writetrack
.a538		b9 02 0a	lda $0a02,y	                LDA	buffer1+2,Y
.a53b		a8		tay		                TAY
.a53c		a5 75		lda $75		                LDA	tmp2
.a53e		20 77 97	jsr $9777	                JSR	verify
.a541						verover5:
.a541		08		php		                PHP
.a542		48		pha		                PHA
.a543		a5 84		lda $84		                LDA	param
.a545		a6 82		ldx $82		                LDX	fromtrk
.a547		20 9b 96	jsr $969b	                JSR	writetrack
.a54a		68		pla		                PLA
.a54b		28		plp		                PLP
.a54c		f0 13		beq $a561	                BEQ	sectok
.a54e		48		pha		                PHA
.a54f		20 9a a5	jsr $a59a	                JSR	sectdisp
.a552		a9 82		lda #$82	                LDA	#130
.a554		20 ee ff	jsr $ffee	                JSR	$FFEE
.a557		68		pla		                PLA
.a558		20 5c 96	jsr $965c	                JSR	discerrmsg
.a55b		20 88 a5	jsr $a588	                JSR	vtab
.a55e		4c 72 a5	jmp $a572	                JMP	vnextsect
.a561						sectok:
.a561		e6 8f		inc $8f		                INC	verify_cr
.a563		a5 8f		lda $8f		                LDA	verify_cr
.a565		c9 04		cmp #$04	                CMP	#$04
.a567		d0 03		bne $a56c	                BNE	nohome
.a569		20 88 a5	jsr $a588	                JSR	vtab
.a56c						nohome:
.a56c		68		pla		                PLA
.a56d		48		pha		                PHA
.a56e		a8		tay		                TAY
.a56f		20 9a a5	jsr $a59a	                JSR	sectdisp
.a572						vnextsect:
.a572		68		pla		                PLA
.a573		a8		tay		                TAY
.a574		c8		iny		                INY
.a575		c4 70		cpy $70		                CPY	verify_vnumsects
.a577		d0 a5		bne $a51e	                BNE	verloop4
.a579						vnextrk2:
.a579		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a57c		e6 82		inc $82		                INC	fromtrk
.a57e		a5 81		lda $81		                LDA	totrk
.a580		c5 82		cmp $82		                CMP	fromtrk
.a582		90 03		bcc $a587	                BCC	verover0
.a584		4c cb a4	jmp $a4cb	                JMP	verloop3
.a587						verover0:
.a587		60		rts		                RTS
.a588						vtab:
.a588		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a58b		a2 0a		ldx #$0a	                LDX	#$0A
.a58d		a9 09		lda #$09	                LDA	#$09
.a58f						indloop:
.a58f		20 ee ff	jsr $ffee	                JSR	$FFEE
.a592		ca		dex		                DEX
.a593		10 fa		bpl $a58f	                BPL	indloop
.a595		a9 00		lda #$00	                LDA	#$00
.a597		85 8f		sta $8f		                STA	verify_cr
.a599		60		rts		                RTS
.a59a						sectdisp:
.a59a		98		tya		                TYA
.a59b		20 98 89	jsr $8998	                JSR	wdigit
.a59e		a9 28		lda #$28	                LDA	#'('
.a5a0		20 ee ff	jsr $ffee	                JSR	$FFEE
.a5a3		98		tya		                TYA
.a5a4		0a		asl a		                ASL	A
.a5a5		0a		asl a		                ASL	A
.a5a6		aa		tax		                TAX
.a5a7		bd 82 0a	lda $0a82,x	                LDA	buffer3+2,X
.a5aa		20 98 89	jsr $8998	                JSR	wdigit
.a5ad		20 af 89	jsr $89af	                JSR	pcprint
>a5b0		29 20				                .text	') '
>a5b2		00				                .byte	$00
.a5b3		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: drunlod.s65

.a5b4						derr:
.a5b4		4c 9c 81	jmp $819c	                JMP	synerr
.a5b7						dloadpa:
.a5b7		20 80 86	jsr $8680	                JSR	rdstr
.a5ba		d0 f8		bne $a5b4	                BNE	derr
.a5bc		20 5b 8a	jsr $8a5b	                JSR	doosfblk
.a5bf		a9 11		lda #$11	                LDA	#$11
.a5c1		8d f1 02	sta $02f1	                STA	osfileb+3
.a5c4		a9 ff		lda #$ff	                LDA	#$FF
.a5c6		20 82 8a	jsr $8a82	                JSR	doosfile
.a5c9		d0 06		bne $a5d1	                BNE	gomove
.a5cb		20 5c 96	jsr $965c	                JSR	discerrmsg
.a5ce		4c bf 88	jmp $88bf	                JMP	fatal
.a5d1						gomove:
.a5d1		a9 05		lda #$05	                LDA	#$05
.a5d3		20 dd ff	jsr $ffdd	                JSR	$FFDD
.a5d6		a2 01		ldx #$01	                LDX	#$01
.a5d8						drloop:
.a5d8		bd f8 02	lda $02f8,x	                LDA	osfileb+$0A,X
.a5db		95 89		sta $89,x	                STA	mmsl,X
.a5dd		bd f0 02	lda $02f0,x	                LDA	osfileb+$02,X
.a5e0		95 8b		sta $8b,x	                STA	mmds,X
.a5e2		ca		dex		                DEX
.a5e3		10 f3		bpl $a5d8	                BPL	drloop
.a5e5		a9 00		lda #$00	                LDA	#$00
.a5e7		85 87		sta $87		                STA	mmss
.a5e9		a9 11		lda #$11	                LDA	#$11
.a5eb		85 88		sta $88		                STA	mmss+1
.a5ed		4c 34 94	jmp $9434	                JMP	mmove
.a5f0						drunpa:
.a5f0		20 b7 a5	jsr $a5b7	                JSR	dloadpa
.a5f3		6c f4 02	jmp ($02f4)	                JMP	(osfileb+$06)

;******  Return to file: hackrom.s65


;******  Processing file: touch.s65

.a5f6						toucherr:
.a5f6		4c 9c 81	jmp $819c	                JMP	synerr
.a5f9						touchpa:
.a5f9		20 80 86	jsr $8680	                JSR	rdstr
.a5fc		d0 f8		bne $a5f6	                BNE	toucherr
.a5fe		20 5b 8a	jsr $8a5b	                JSR	doosfblk
.a601		a4 70		ldy $70		                LDY	common_newy
.a603		20 e6 86	jsr $86e6	                JSR	rdnum
.a606		d0 ee		bne $a5f6	                BNE	toucherr
.a608		a2 02		ldx #$02	                LDX	#$02
.a60a		20 22 a6	jsr $a622	                JSR	makeblk
.a60d		20 e6 86	jsr $86e6	                JSR	rdnum
.a610		d0 e4		bne $a5f6	                BNE	toucherr
.a612		a2 06		ldx #$06	                LDX	#$06
.a614		20 22 a6	jsr $a622	                JSR	makeblk
.a617		a9 01		lda #$01	                LDA	#$01
.a619		20 82 8a	jsr $8a82	                JSR	doosfile
.a61c		d0 03		bne $a621	                BNE	touchdone
.a61e		20 5c 96	jsr $965c	                JSR	discerrmsg
.a621						touchdone:
.a621		60		rts		                RTS
.a622						makeblk:
.a622		a5 84		lda $84		                LDA	clibuf
.a624		9d ee 02	sta $02ee,x	                STA	osfileb,X
.a627		a5 85		lda $85		                LDA	clibuf+1
.a629		9d de ff	sta $ffde,x	                STA	osfile+1,X
.a62c		a5 86		lda $86		                LDA	clibuf+2
.a62e		9d f0 02	sta $02f0,x	                STA	osfileb+2,X
.a631		a5 87		lda $87		                LDA	clibuf+3
.a633		9d f1 02	sta $02f1,x	                STA	osfileb+3,X
.a636		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: close.s65

.a637						closepa:
.a637		20 e6 86	jsr $86e6	                JSR	rdnum
.a63a		f0 0b		beq $a647	                BEQ	closego
.a63c		a9 00		lda #$00	                LDA	#$00
.a63e		a8		tay		                TAY
.a63f		4c ce ff	jmp $ffce	                JMP	$FFCE
.a642						closeloop:
.a642		20 e6 86	jsr $86e6	                JSR	rdnum
.a645		d0 0e		bne $a655	                BNE	closequit
.a647						closego:
.a647		98		tya		                TYA
.a648		48		pha		                PHA
.a649		a4 84		ldy $84		                LDY	clibuf
.a64b		a9 00		lda #$00	                LDA	#$00
.a64d		20 ce ff	jsr $ffce	                JSR	$FFCE
.a650		68		pla		                PLA
.a651		a8		tay		                TAY
.a652		4c 42 a6	jmp $a642	                JMP	closeloop
.a655						closequit:
.a655		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: rsavlod.s65

.a656						rlsstart:
.a656		20 e6 86	jsr $86e6	                JSR	rdnum
.a659		f0 03		beq $a65e	                BEQ	rloadnoerror
.a65b						rloaderror:
.a65b		4c 9c 81	jmp $819c	                JMP	synerr
.a65e						rloadnoerror:
.a65e		98		tya		                TYA
.a65f		48		pha		                PHA
.a660		a5 84		lda $84		                LDA	clibuf
.a662		29 0f		and #$0f	                AND	#$0F
.a664		85 79		sta $79		                STA	romid
.a666		20 ac a6	jsr $a6ac	                JSR	swapreloc
.a669		a4 79		ldy $79		                LDY	romid
.a66b		a9 00		lda #$00	                LDA	#$00
.a66d		99 a1 02	sta $02a1,y	                STA	$2A1,Y
.a670		20 00 01	jsr $0100	                JSR	swap3C00
.a673		68		pla		                PLA
.a674		a8		tay		                TAY
.a675		4c a1 8a	jmp $8aa1	                JMP	keycom
.a678						oldorg2:
.a678	0100					swap3C00:
.a678	0100	78		sei		                SEI
.a679	0101	a5 79		lda $79		                LDA	romid
.a67b	0103	8d 30 fe	sta $fe30	                STA	$FE30
.a67e	0106	a9 00		lda #$00	                LDA	#$00
.a680	0108	85 7c		sta $7c		                STA	poslo
.a682	010a	85 80		sta $80		                STA	numlo
.a684	010c	a9 3c		lda #$3c	                LDA	#$3C
.a686	010e	85 7d		sta $7d		                STA	poshi
.a688	0110	a9 80		lda #$80	                LDA	#$80
.a68a	0112	85 81		sta $81		                STA	numhi
.a68c	0114	a0 00		ldy #$00	                LDY	#$00
.a68e	0116					swap3C0:
.a68e	0116	b1 7c		lda ($7c),y	                LDA	(poslo),Y
.a690	0118	48		pha		                PHA
.a691	0119	b1 80		lda ($80),y	                LDA	(numlo),Y
.a693	011b	91 7c		sta ($7c),y	                STA	(poslo),Y
.a695	011d	68		pla		                PLA
.a696	011e	91 80		sta ($80),y	                STA	(numlo),Y
.a698	0120	c8		iny		                INY
.a699	0121	d0 f3		bne $0116	                BNE	swap3C0
.a69b	0123	e6 81		inc $81		                INC	numhi
.a69d	0125	e6 7d		inc $7d		                INC	poshi
.a69f	0127	a5 7d		lda $7d		                LDA	poshi
.a6a1	0129	c9 7c		cmp #$7c	                CMP	#$7C
.a6a3	012b	d0 e9		bne $0116	                BNE	swap3C0
.a6a5	012d	a5 f4		lda $f4		                LDA	$F4
.a6a7	012f	8d 30 fe	sta $fe30	                STA	$FE30
.a6aa	0132	58		cli		                CLI
.a6ab	0133	60		rts		                RTS
.a6ac	0134					swap3C2:
.a6ac						swapreloc:
.a6ac		a2 34		ldx #$34	                LDX	#swap3C2-swap3C00
.a6ae						swapr0:
.a6ae		bd 78 a6	lda $a678,x	                LDA	oldorg2,X
.a6b1		9d 00 01	sta $0100,x	                STA	$100,X
.a6b4		ca		dex		                DEX
.a6b5		10 f7		bpl $a6ae	                BPL	swapr0
.a6b7		60		rts		                RTS
.a6b8						rloadpa:
.a6b8		20 56 a6	jsr $a656	                JSR	rlsstart
.a6bb		a9 3c		lda #$3c	                LDA	#$3C
.a6bd		8d f1 02	sta $02f1	                STA	osfileb+3
.a6c0		a9 ff		lda #$ff	                LDA	#$FF
.a6c2						rlsend:
.a6c2		20 82 8a	jsr $8a82	                JSR	doosfile
.a6c5		ad 06 3c	lda $3c06	                LDA	$3C06
.a6c8		48		pha		                PHA
.a6c9		20 00 01	jsr $0100	                JSR	swap3C00
.a6cc		68		pla		                PLA
.a6cd		a4 79		ldy $79		                LDY	romid
.a6cf		99 a1 02	sta $02a1,y	                STA	$2A1,Y
.a6d2		60		rts		                RTS
.a6d3						rsavepa:
.a6d3		20 56 a6	jsr $a656	                JSR	rlsstart
.a6d6		a9 80		lda #$80	                LDA	#$80
.a6d8		a2 3c		ldx #$3c	                LDX	#$3C
.a6da		a0 7c		ldy #$7c	                LDY	#$7C
.a6dc		20 89 8a	jsr $8a89	                JSR	break
.a6df		4c c2 a6	jmp $a6c2	                JMP	rlsend

;******  Return to file: hackrom.s65


;******  Processing file: rinfo.s65

.a6e2						rinfopa:
.a6e2		20 5b b1	jsr $b15b	                JSR	reloc
.a6e5		20 52 8a	jsr $8a52	                JSR	beginrom
.a6e8		20 e6 86	jsr $86e6	                JSR	rdnum
.a6eb		f0 1d		beq $a70a	                BEQ	atleast1
.a6ed						rinfostr:
.a6ed		a2 00		ldx #$00	                LDX	#0
.a6ef						all:
.a6ef		86 84		stx $84		                STX	clibuf
.a6f1		8a		txa		                TXA
.a6f2		48		pha		                PHA
.a6f3		18		clc		                CLC
.a6f4		20 df 89	jsr $89df	                JSR	checkrom
.a6f7		d0 03		bne $a6fc	                BNE	rinfonext
.a6f9		20 15 a7	jsr $a715	                JSR	doinfo
.a6fc						rinfonext:
.a6fc		68		pla		                PLA
.a6fd		aa		tax		                TAX
.a6fe		e8		inx		                INX
.a6ff		e0 10		cpx #$10	                CPX	#$10
.a701		d0 ec		bne $a6ef	                BNE	all
.a703		f0 0f		beq $a714	                BEQ	rinfoend
.a705						rinfoloop:
.a705		20 e6 86	jsr $86e6	                JSR	rdnum
.a708		d0 0a		bne $a714	                BNE	rinfoend
.a70a						atleast1:
.a70a		98		tya		                TYA
.a70b		48		pha		                PHA
.a70c		20 15 a7	jsr $a715	                JSR	doinfo
.a70f		68		pla		                PLA
.a710		a8		tay		                TAY
.a711		4c 05 a7	jmp $a705	                JMP	rinfoloop
.a714						rinfoend:
.a714		60		rts		                RTS
.a715						doinfo:
.a715		a5 84		lda $84		                LDA	clibuf
.a717		20 df 89	jsr $89df	                JSR	checkrom
.a71a		f0 10		beq $a72c	                BEQ	romok
.a71c		20 af 89	jsr $89af	                JSR	pcprint
>a71f		81				                .byte	$81
>a720		4e 6f 74 20 61 20 52 4f		                .text	"Not a ROM"
>a728		4d
>a729		0d 00				                .byte	$0D,$00
.a72b		60		rts		                RTS
.a72c						romok:
.a72c		20 52 8a	jsr $8a52	                JSR	beginrom
.a72f		20 af 89	jsr $89af	                JSR	pcprint
>a732		82				                .byte	$82
>a733		42 61 6e 6b 20 6e 75 6d		                .text	"Bank number    :"
>a73b		62 65 72 20 20 20 20 3a
>a743		86 00				                .byte	$86,$00
.a745		a5 84		lda $84		                LDA	clibuf
.a747		29 0f		and #$0f	                AND	#$F
.a749		85 79		sta $79		                STA	romid
.a74b		20 04 86	jsr $8604	                JSR	hex_asc
.a74e		98		tya		                TYA
.a74f		20 ee ff	jsr $ffee	                JSR	$FFEE
.a752		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a755		20 af 89	jsr $89af	                JSR	pcprint
>a758		82				                .byte	$82
>a759		52 4f 4d 20 74 69 74 6c		                .text	"ROM title      :"
>a761		65 20 20 20 20 20 20 3a
>a769		86 00				                .byte	$86,$00
.a76b		a0 09		ldy #$09	                LDY	#9
.a76d						titlerinfoloop:
.a76d		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a770		c9 00		cmp #$00	                CMP	#0
.a772		f0 0c		beq $a780	                BEQ	rinfoendtl
.a774		29 7f		and #$7f	                AND	#$7F
.a776		c9 20		cmp #$20	                CMP	#' '
.a778		90 03		bcc $a77d	                BCC	tlj1
.a77a		20 ee ff	jsr $ffee	                JSR	$FFEE
.a77d						tlj1:
.a77d		c8		iny		                INY
.a77e		d0 ed		bne $a76d	                BNE	titlerinfoloop
.a780						rinfoendtl:
.a780		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a783		98		tya		                TYA
.a784		48		pha		                PHA
.a785		20 af 89	jsr $89af	                JSR	pcprint
>a788		82				                .byte	$82
>a789		56 65 72 73 69 6f 6e 20		                .text	"Version string :"
>a791		73 74 72 69 6e 67 20 3a
>a799		86 00				                .byte	$86,$00
.a79b		a0 07		ldy #$07	                LDY	#7
.a79d		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a7a0		85 77		sta $77		                STA	tmpx
.a7a2		68		pla		                PLA
.a7a3		a8		tay		                TAY
.a7a4		c4 77		cpy $77		                CPY	tmpx
.a7a6		d0 0b		bne $a7b3	                BNE	vj1
.a7a8		20 af 89	jsr $89af	                JSR	pcprint
>a7ab		4e 6f 6e 65 00			                .text	"None",0
.a7b0		4c c7 a7	jmp $a7c7	                JMP	rinfoendvl
.a7b3						vj1:
.a7b3		c8		iny		                INY
.a7b4						versrinfoloop:
.a7b4		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a7b7		c9 00		cmp #$00	                CMP	#0
.a7b9		f0 0c		beq $a7c7	                BEQ	rinfoendvl
.a7bb		29 7f		and #$7f	                AND	#$7F
.a7bd		c9 20		cmp #$20	                CMP	#' '
.a7bf		90 03		bcc $a7c4	                BCC	vlj1
.a7c1		20 ee ff	jsr $ffee	                JSR	$FFEE
.a7c4						vlj1:
.a7c4		c8		iny		                INY
.a7c5		d0 ed		bne $a7b4	                BNE	versrinfoloop
.a7c7						rinfoendvl:
.a7c7		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a7ca		20 af 89	jsr $89af	                JSR	pcprint
>a7cd		82				                .byte	$82
>a7ce		42 69 6e 61 72 79 20 76		                .text	"Binary version :"
>a7d6		65 72 73 69 6f 6e 20 3a
>a7de		86 00				                .byte	$86,$00
.a7e0		a0 08		ldy #$08	                LDY	#8
.a7e2		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a7e5		20 75 89	jsr $8975	                JSR	bsdigit
.a7e8		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a7eb		20 af 89	jsr $89af	                JSR	pcprint
>a7ee		82				                .byte	$82
>a7ef		43 6f 70 79 72 69 67 68		                .text	"Copyright      :"
>a7f7		74 20 20 20 20 20 20 3a
>a7ff		86 00				                .byte	$86,$00
.a801		a0 07		ldy #$07	                LDY	#7
.a803		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a806		a8		tay		                TAY
.a807		c8		iny		                INY
.a808						copyl:
.a808		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a80b		c9 00		cmp #$00	                CMP	#0
.a80d		f0 0c		beq $a81b	                BEQ	rinfoendcopy
.a80f		29 7f		and #$7f	                AND	#$7F
.a811		c9 20		cmp #$20	                CMP	#' '
.a813		90 03		bcc $a818	                BCC	clj1
.a815		20 ee ff	jsr $ffee	                JSR	$FFEE
.a818						clj1:
.a818		c8		iny		                INY
.a819		d0 ed		bne $a808	                BNE	copyl
.a81b						rinfoendcopy:
.a81b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a81e		20 af 89	jsr $89af	                JSR	pcprint
>a821		82				                .byte	$82
>a822		52 4f 4d 20 63 6f 64 65		                .text	"ROM code       :"
>a82a		20 20 20 20 20 20 20 3a
>a832		86 00				                .byte	$86,$00
.a834		a0 06		ldy #$06	                LDY	#6
.a836		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a839		48		pha		                PHA
.a83a		29 0f		and #$0f	                AND	#$0F
.a83c		0a		asl a		                ASL	A
.a83d		aa		tax		                TAX
.a83e		bd 32 a9	lda $a932,x	                LDA	typetab,X
.a841		85 77		sta $77		                STA	tmpx
.a843		bd 33 a9	lda $a933,x	                LDA	typetab+1,X
.a846		85 78		sta $78		                STA	tmpy
.a848		20 d2 89	jsr $89d2	                JSR	locprint
.a84b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a84e		20 af 89	jsr $89af	                JSR	pcprint
>a851		82				                .byte	$82
>a852		4c 61 6e 67 75 61 67 65		                .text	"Language entry :"
>a85a		20 65 6e 74 72 79 20 3a
>a862		86 00				                .byte	$86,$00
.a864		68		pla		                PLA
.a865		48		pha		                PHA
.a866		29 40		and #$40	                AND	#$40
.a868		d0 15		bne $a87f	                BNE	isalang
.a86a		20 af 89	jsr $89af	                JSR	pcprint
>a86d		4e 6f 74 20 61 20 6c 61		                .text	"Not a language",0
>a875		6e 67 75 61 67 65 00
.a87c		4c a5 a8	jmp $a8a5	                JMP	langdone
.a87f						isalang:
.a87f		a0 00		ldy #$00	                LDY	#0
.a881		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a884		c9 4c		cmp #$4c	                CMP	#$4C
.a886		f0 0e		beq $a896	                BEQ	langok
.a888		20 af 89	jsr $89af	                JSR	pcprint
>a88b		55 6e 6b 6e 6f 77 6e 00		                .text	"Unknown",0
.a893		4c a5 a8	jmp $a8a5	                JMP	langdone
.a896						langok:
.a896		a0 02		ldy #$02	                LDY	#2
.a898		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a89b		20 98 89	jsr $8998	                JSR	wdigit
.a89e		88		dey		                DEY
.a89f		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a8a2		20 98 89	jsr $8998	                JSR	wdigit
.a8a5						langdone:
.a8a5		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a8a8		20 af 89	jsr $89af	                JSR	pcprint
>a8ab		82				                .byte	$82
>a8ac		53 65 72 76 69 63 65 20		                .text	"Service entry  :"
>a8b4		65 6e 74 72 79 20 20 3a
>a8bc		86 00				                .byte	$86,$00
.a8be		68		pla		                PLA
.a8bf		48		pha		                PHA
.a8c0		30 0b		bmi $a8cd	                BMI	hasserv
.a8c2		20 af 89	jsr $89af	                JSR	pcprint
>a8c5		4e 6f 6e 65 00			                .text	"None",0
.a8ca		4c dc a8	jmp $a8dc	                JMP	servdone
.a8cd						hasserv:
.a8cd		a0 05		ldy #$05	                LDY	#5
.a8cf		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a8d2		20 98 89	jsr $8998	                JSR	wdigit
.a8d5		88		dey		                DEY
.a8d6		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a8d9		20 98 89	jsr $8998	                JSR	wdigit
.a8dc						servdone:
.a8dc		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a8df		20 af 89	jsr $89af	                JSR	pcprint
>a8e2		82				                .byte	$82
>a8e3		54 75 62 65 20 72 65 6c		                .text	"Tube relocation:"
>a8eb		6f 63 61 74 69 6f 6e 3a
>a8f3		86 00				                .byte	$86,$00
.a8f5		68		pla		                PLA
.a8f6		29 20		and #$20	                AND	#$20
.a8f8		d0 0b		bne $a905	                BNE	istube
.a8fa		20 af 89	jsr $89af	                JSR	pcprint
>a8fd		4e 6f 6e 65 00			                .text	"None",0
.a902		4c 2b a9	jmp $a92b	                JMP	tubedone
.a905						istube:
.a905		a0 07		ldy #$07	                LDY	#7
.a907		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a90a		a8		tay		                TAY
.a90b		a2 02		ldx #$02	                LDX	#2
.a90d						istl:
.a90d		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a910		c9 00		cmp #$00	                CMP	#0
.a912		f0 03		beq $a917	                BEQ	foundzero
.a914		c8		iny		                INY
.a915		d0 f6		bne $a90d	                BNE	istl
.a917						foundzero:
.a917		c8		iny		                INY
.a918		ca		dex		                DEX
.a919		d0 f2		bne $a90d	                BNE	istl
.a91b		c8		iny		                INY
.a91c		c8		iny		                INY
.a91d		c8		iny		                INY
.a91e		c8		iny		                INY
.a91f		a2 04		ldx #$04	                LDX	#4
.a921						istl2:
.a921		88		dey		                DEY
.a922		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a925		20 98 89	jsr $8998	                JSR	wdigit
.a928		ca		dex		                DEX
.a929		d0 f6		bne $a921	                BNE	istl2
.a92b						tubedone:
.a92b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a92e		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.a931		60		rts		                RTS
.a932						typetab:
>a932		52 a9				                .word	c6502
>a934		a2 a9				                .word	reserved
>a936		5d a9				                .word	c6502NB
>a938		6e a9				                .word	c6800
>a93a		78 a9				                .word	cZ80
>a93c		81 a9				                .word	c32016
>a93e		a2 a9				                .word	reserved
>a940		8c a9				                .word	c80186
>a942		97 a9				                .word	c80286
>a944		a2 a9				                .word	reserved
>a946		a2 a9				                .word	reserved
>a948		a2 a9				                .word	reserved
>a94a		a2 a9				                .word	reserved
>a94c		a2 a9				                .word	reserved
>a94e		a2 a9				                .word	reserved
>a950		a2 a9				                .word	reserved
>a952		36 35 30 32 20 42 41 53		c6502	.text	"6502 BASIC",0
>a95a		49 43 00
>a95d		36 35 30 32 20 28 4e 4f		c6502NB	.text	"6502 (NOT BASIC)",0
>a965		54 20 42 41 53 49 43 29 00
>a96e		36 38 30 30 20 63 6f 64		c6800	.text	"6800 code",0
>a976		65 00
>a978		5a 38 30 20 63 6f 64 65		cZ80	.text	"Z80 code",0
>a980		00
>a981		33 32 30 31 36 20 63 6f		c32016	.text	"32016 code",0
>a989		64 65 00
>a98c		38 30 31 38 36 20 63 6f		c80186	.text	"80186 code",0
>a994		64 65 00
>a997		38 30 32 38 36 20 63 6f		c80286	.text	"80286 code",0
>a99f		64 65 00
>a9a2		72 65 73 65 72 76 65 64		reserved	.text	"reserved",0
>a9aa		00

;******  Return to file: hackrom.s65


;******  Processing file: ronroff.s65

.a9ab						ronpa:
.a9ab		20 e6 86	jsr $86e6	                JSR	rdnum
.a9ae		f0 03		beq $a9b3	                BEQ	ronnoerror
.a9b0						ronerror:
.a9b0		4c 9c 81	jmp $819c	                JMP	synerr
.a9b3						ronnoerror:
.a9b3		20 5b b1	jsr $b15b	                JSR	reloc
.a9b6						ron2:
.a9b6		a5 84		lda $84		                LDA	clibuf
.a9b8		29 0f		and #$0f	                AND	#$0F
.a9ba		aa		tax		                TAX
.a9bb		a9 00		lda #$00	                LDA	#0
.a9bd		85 7c		sta $7c		                STA	poslo
.a9bf		a9 80		lda #$80	                LDA	#$80
.a9c1		85 7d		sta $7d		                STA	poshi
.a9c3		86 79		stx $79		                STX	romid
.a9c5		98		tya		                TYA
.a9c6		48		pha		                PHA
.a9c7		a0 06		ldy #$06	                LDY	#6
.a9c9		20 d8 b0	jsr $b0d8	                JSR	rdposx
.a9cc		9d a1 02	sta $02a1,x	                STA	$2A1,X
.a9cf		68		pla		                PLA
.a9d0		a8		tay		                TAY
.a9d1						ron1:
.a9d1		20 e6 86	jsr $86e6	                JSR	rdnum
.a9d4		f0 e0		beq $a9b6	                BEQ	ron2
.a9d6						ronend:
.a9d6		60		rts		                RTS
.a9d7						roffpa:
.a9d7		20 e6 86	jsr $86e6	                JSR	rdnum
.a9da		f0 03		beq $a9df	                BEQ	roffnoerror
.a9dc						rofferror:
.a9dc		4c 9c 81	jmp $819c	                JMP	synerr
.a9df						roffnoerror:
.a9df		a5 84		lda $84		                LDA	clibuf
.a9e1		29 0f		and #$0f	                AND	#$0F
.a9e3		aa		tax		                TAX
.a9e4		a9 00		lda #$00	                LDA	#0
.a9e6		9d a1 02	sta $02a1,x	                STA	$2A1,X
.a9e9						roff0:
.a9e9		20 e6 86	jsr $86e6	                JSR	rdnum
.a9ec		f0 f1		beq $a9df	                BEQ	roffnoerror
.a9ee						roffend:
.a9ee		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: rlist.s65

.a9ef						rlistpa:
.a9ef		20 5b b1	jsr $b15b	                JSR	reloc
.a9f2		a9 00		lda #$00	                LDA	#0
.a9f4		85 79		sta $79		                STA	romid
.a9f6						rlistloop:
.a9f6		a9 86		lda #$86	                LDA	#$86
.a9f8		20 ee ff	jsr $ffee	                JSR	$FFEE
.a9fb		a6 79		ldx $79		                LDX	romid
.a9fd		bd 5e 85	lda $855e,x	                LDA	num,X
.aa00		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa03		a5 79		lda $79		                LDA	romid
.aa05		38		sec		                SEC
.aa06		20 df 89	jsr $89df	                JSR	checkrom
.aa09		48		pha		                PHA
.aa0a		d0 3f		bne $aa4b	                BNE	rlistnotarom
.aa0c		68		pla		                PLA
.aa0d		a6 79		ldx $79		                LDX	romid
.aa0f		bd a1 02	lda $02a1,x	                LDA	$2A1,X
.aa12		d0 0c		bne $aa20	                BNE	romon
.aa14		20 af 89	jsr $89af	                JSR	pcprint
>aa17		85				                .byte	$85
>aa18		4f 46 46			                .text	"OFF"
>aa1b		83 00				                .byte	$83,$00
.aa1d		4c 29 aa	jmp $aa29	                JMP	jmp0
.aa20						romon:
.aa20		20 af 89	jsr $89af	                JSR	pcprint
>aa23		85				                .byte	$85
>aa24		4f 4e 20			                .text	"ON "
>aa27		83 00				                .byte	$83,$00
.aa29						jmp0:
.aa29		20 52 8a	jsr $8a52	                JSR	beginrom
.aa2c		a0 09		ldy #$09	                LDY	#9
.aa2e		a2 02		ldx #$02	                LDX	#2
.aa30						disp:
.aa30		20 d8 b0	jsr $b0d8	                JSR	rdposx
.aa33		c9 20		cmp #$20	                CMP	#$20
.aa35		90 03		bcc $aa3a	                BCC	skip
.aa37		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa3a						skip:
.aa3a		c8		iny		                INY
.aa3b		c9 00		cmp #$00	                CMP	#0
.aa3d		f0 02		beq $aa41	                BEQ	disp2
.aa3f		d0 ef		bne $aa30	                BNE	disp
.aa41						disp2:
.aa41		a9 82		lda #$82	                LDA	#$82
.aa43		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa46		ca		dex		                DEX
.aa47		d0 e7		bne $aa30	                BNE	disp
.aa49		f0 6f		beq $aaba	                BEQ	jmp1
.aa4b						rlistnotarom:
.aa4b		a2 04		ldx #$04	                LDX	#4
.aa4d		a9 20		lda #$20	                LDA	#' '
.aa4f						jmp2:
.aa4f		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa52		ca		dex		                DEX
.aa53		d0 fa		bne $aa4f	                BNE	jmp2
.aa55		ad a1 03	lda $03a1	                LDA	pbuffon
.aa58		10 26		bpl $aa80	                BPL	notpbuff
.aa5a		ac 90 08	ldy $0890	                LDY	numroms
.aa5d						pbchk:
.aa5d		88		dey		                DEY
.aa5e		30 20		bmi $aa80	                BMI	notpbuff
.aa60		b9 80 08	lda $0880,y	                LDA	pbufftab,Y
.aa63		29 0f		and #$0f	                AND	#$0F
.aa65		c5 79		cmp $79		                CMP	romid
.aa67		d0 f4		bne $aa5d	                BNE	pbchk
.aa69		20 af 89	jsr $89af	                JSR	pcprint
>aa6c		84				                .byte	$84
>aa6d		50 72 69 6e 74 65 72 20		                .text	'Printer buffer'
>aa75		62 75 66 66 65 72
>aa7b		00				                .byte	0
.aa7c		68		pla		                PLA
.aa7d		4c ba aa	jmp $aaba	                JMP	jmp1
.aa80						notpbuff:
.aa80		a9 81		lda #$81	                LDA	#$81
.aa82		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa85		68		pla		                PLA
.aa86		29 70		and #$70	                AND	#$70
.aa88		f0 23		beq $aaad	                BEQ	socket
.aa8a		4a		lsr a		                LSR	A
.aa8b		4a		lsr a		                LSR	A
.aa8c		4a		lsr a		                LSR	A
.aa8d		4a		lsr a		                LSR	A
.aa8e		aa		tax		                TAX
.aa8f		ca		dex		                DEX
.aa90		8a		txa		                TXA
.aa91		29 02		and #$02	                AND	#2
.aa93		f0 05		beq $aa9a	                BEQ	not10
.aa95		a9 31		lda #$31	                LDA	#'1'
.aa97		20 ee ff	jsr $ffee	                JSR	$FFEE
.aa9a						not10:
.aa9a		bd e4 aa	lda $aae4,x	                LDA	rvalues,X
.aa9d		20 ee ff	jsr $ffee	                JSR	$FFEE
.aaa0		a2 00		ldx #$00	                LDX	#0
.aaa2						swrl:
.aaa2		bd ca aa	lda $aaca,x	                LDA	rammsg,X
.aaa5		30 13		bmi $aaba	                BMI	jmp1
.aaa7		20 ee ff	jsr $ffee	                JSR	$FFEE
.aaaa		e8		inx		                INX
.aaab		d0 f5		bne $aaa2	                BNE	swrl
.aaad						socket:
.aaad		a2 00		ldx #$00	                LDX	#0
.aaaf						sockl:
.aaaf		bd d9 aa	lda $aad9,x	                LDA	rommsg,X
.aab2		30 06		bmi $aaba	                BMI	jmp1
.aab4		20 ee ff	jsr $ffee	                JSR	$FFEE
.aab7		e8		inx		                INX
.aab8		d0 f5		bne $aaaf	                BNE	sockl
.aaba						jmp1:
.aaba		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.aabd		a6 79		ldx $79		                LDX	romid
.aabf		e8		inx		                INX
.aac0		86 79		stx $79		                STX	romid
.aac2		e0 10		cpx #$10	                CPX	#16
.aac4		f0 03		beq $aac9	                BEQ	rlend
.aac6		4c f6 a9	jmp $a9f6	                JMP	rlistloop
.aac9						rlend:
.aac9		60		rts		                RTS
.aaca						rammsg:
>aaca		4b 20 53 69 64 65 77 61		                .text	"K Sideways RAM"
>aad2		79 73 20 52 41 4d
>aad8		ff				                .byte	$FF
.aad9						rommsg:
>aad9		52 4f 4d 20 73 6f 63 6b		                .text	"ROM socket"
>aae1		65 74
>aae3		ff				                .byte	$FF
.aae4						rvalues:
>aae4		34 38 32 36			                .text	'4826'

;******  Return to file: hackrom.s65


;******  Processing file: send.s65

.aae8						senderr:
.aae8		4c 9c 81	jmp $819c	                JMP	synerr
.aaeb						sendpa:
.aaeb		20 e6 86	jsr $86e6	                JSR	rdnum
.aaee		d0 f8		bne $aae8	                BNE	senderr
.aaf0		98		tya		                TYA
.aaf1		48		pha		                PHA
.aaf2		a5 84		lda $84		                LDA	clibuf
.aaf4		85 75		sta $75		                STA	tmp2
.aaf6		a9 80		lda #$80	                LDA	#$80
.aaf8		85 f7		sta $f7		                STA	$F7
.aafa		a9 03		lda #$03	                LDA	#$03
.aafc		85 f6		sta $f6		                STA	$F6
.aafe		20 b9 ff	jsr $ffb9	                JSR	osrdrm
.ab01		c9 4c		cmp #$4c	                CMP	#$4C
.ab03		f0 17		beq $ab1c	                BEQ	gosend
.ab05		68		pla		                PLA
.ab06		20 af 89	jsr $89af	                JSR	pcprint
>ab09		4e 6f 20 73 65 72 76 69		                .text	'No service entry'
>ab11		63 65 20 65 6e 74 72 79
>ab19		0d 00				                .byte	$0D,$00
.ab1b		60		rts		                RTS
.ab1c						gosend:
.ab1c		68		pla		                PLA
.ab1d		a8		tay		                TAY
.ab1e		ae 9f 03	ldx $039f	                LDX	stacksave
.ab21		9a		txs		                TXS
.ab22		a9 00		lda #$00	                LDA	#$00
.ab24		9d 25 01	sta $0125,x	                STA	$105+numzpage,X
.ab27		ba		tsx		                TSX
.ab28		e8		inx		                INX
.ab29		e8		inx		                INX
.ab2a		9a		txs		                TXS
.ab2b		a5 75		lda $75		                LDA	tmp2
.ab2d		8d 9f 03	sta $039f	                STA	stacksave
.ab30		a2 00		ldx #$00	                LDX	#$00
.ab32						sendloop0:
.ab32		68		pla		                PLA
.ab33		95 70		sta $70,x	                STA	$70,X
.ab35		e8		inx		                INX
.ab36		e0 20		cpx #$20	                CPX	#numzpage
.ab38		90 f8		bcc $ab32	                BCC	sendloop0
.ab3a		c8		iny		                INY
.ab3b		68		pla		                PLA
.ab3c		68		pla		                PLA
.ab3d		68		pla		                PLA
.ab3e		ae 9f 03	ldx $039f	                LDX	stacksave
.ab41		a9 04		lda #$04	                LDA	#$04
.ab43		86 f4		stx $f4		                STX	$F4
.ab45		4c 00 80	jmp $8000	                JMP	send_poke

;******  Return to file: hackrom.s65


;******  Processing file: pbuff.s65

.ab48						pbuffpa:
.ab48		78		sei		                SEI
.ab49		a9 ff		lda #$ff	                LDA	#$FF
.ab4b		8d 90 08	sta $0890	                STA	numroms
.ab4e		20 e6 86	jsr $86e6	                JSR	rdnum
.ab51		d0 24		bne $ab77	                BNE	pbnoargs
.ab53		f0 05		beq $ab5a	                BEQ	pbargs
.ab55						pbargloop:
.ab55		20 e6 86	jsr $86e6	                JSR	rdnum
.ab58		d0 36		bne $ab90	                BNE	finargs0
.ab5a						pbargs:
.ab5a		a5 84		lda $84		                LDA	clibuf
.ab5c		29 0f		and #$0f	                AND	#$0F
.ab5e		ae 90 08	ldx $0890	                LDX	numroms
.ab61		30 08		bmi $ab6b	                BMI	pbok
.ab63						pbloop0:
.ab63		dd 80 08	cmp $0880,x	                CMP	pbufftab,X
.ab66		f0 ed		beq $ab55	                BEQ	pbargloop
.ab68		ca		dex		                DEX
.ab69		10 f8		bpl $ab63	                BPL	pbloop0
.ab6b						pbok:
.ab6b		ee 90 08	inc $0890	                INC	numroms
.ab6e		ae 90 08	ldx $0890	                LDX	numroms
.ab71		9d 80 08	sta $0880,x	                STA	pbufftab,X
.ab74		4c 55 ab	jmp $ab55	                JMP	pbargloop
.ab77						pbnoargs:
.ab77		a2 ff		ldx #$ff	                LDX	#$FF
.ab79		a0 00		ldy #$00	                LDY	#$00
.ab7b						pbloop4:
.ab7b		e8		inx		                INX
.ab7c		e0 10		cpx #$10	                CPX	#$10
.ab7e		f0 13		beq $ab93	                BEQ	finargs1
.ab80		bd a1 02	lda $02a1,x	                LDA	$2A1,X
.ab83		d0 f6		bne $ab7b	                BNE	pbloop4
.ab85		8a		txa		                TXA
.ab86		99 80 08	sta $0880,y	                STA	pbufftab,Y
.ab89		c8		iny		                INY
.ab8a		8c 90 08	sty $0890	                STY	numroms
.ab8d		4c 7b ab	jmp $ab7b	                JMP	pbloop4
.ab90						finargs0:
.ab90		ee 90 08	inc $0890	                INC	numroms
.ab93						finargs1:
.ab93		a0 00		ldy #$00	                LDY	#$00
.ab95		a2 ff		ldx #$ff	                LDX	#$FF
.ab97						pbloop2:
.ab97		e8		inx		                INX
.ab98		ec 90 08	cpx $0890	                CPX	numroms
.ab9b		f0 2f		beq $abcc	                BEQ	pbend
.ab9d		bd 80 08	lda $0880,x	                LDA	pbufftab,X
.aba0		8e a8 08	stx $08a8	                STX	pbtmpx
.aba3		8c a7 08	sty $08a7	                STY	pbtmpy
.aba6		38		sec		                SEC
.aba7		20 df 89	jsr $89df	                JSR	checkrom
.abaa		ac a7 08	ldy $08a7	                LDY	pbtmpy
.abad		ae a8 08	ldx $08a8	                LDX	pbtmpx
.abb0		29 f0		and #$f0	                AND	#$F0
.abb2		c9 80		cmp #$80	                CMP	#$80
.abb4		f0 e1		beq $ab97	                BEQ	pbloop2
.abb6		1d 80 08	ora $0880,x	                ORA	pbufftab,X
.abb9		99 80 08	sta $0880,y	                STA	pbufftab,Y
.abbc		c8		iny		                INY
.abbd		e0 0f		cpx #$0f	                CPX	#$0F
.abbf		d0 d6		bne $ab97	                BNE	pbloop2
.abc1		8c 90 08	sty $0890	                STY	numroms
.abc4		4c 97 ab	jmp $ab97	                JMP	pbloop2
.abc7						pbufferror:
.abc7		20 9c 81	jsr $819c	                JSR	synerr
.abca		58		cli		                CLI
.abcb		60		rts		                RTS
.abcc						pbend:
.abcc		8c 90 08	sty $0890	                STY	numroms
.abcf		c0 00		cpy #$00	                CPY	#$00
.abd1		d0 27		bne $abfa	                BNE	gopbuff
.abd3		20 af 89	jsr $89af	                JSR	pcprint
>abd6		4e 6f 20 75 73 61 62 6c		                .text	'No usable ram for printer buffer'
>abde		65 20 72 61 6d 20 66 6f 72 20 70 72 69 6e 74 65
>abee		72 20 62 75 66 66 65 72
>abf6		0d				                .byte	$0D
>abf7		00				                .byte	0
.abf8		58		cli		                CLI
.abf9		60		rts		                RTS
.abfa						gopbuff:
.abfa		a9 ff		lda #$ff	                LDA	#$FF
.abfc		8d a1 03	sta $03a1	                STA	pbuffon
.abff		20 af 89	jsr $89af	                JSR	pcprint
>ac02		81				                .byte	129
>ac03		55 73 69 6e 67 20 62 61		                .text	'Using banks'
>ac0b		6e 6b 73
>ac0e		82				                .byte	130
>ac0f		3a				                .text	':'
>ac10		86 00				                .byte	134,0
.ac12		a2 00		ldx #$00	                LDX	#$00
.ac14						pbloopa:
.ac14		bd 80 08	lda $0880,x	                LDA	pbufftab,X
.ac17		29 0f		and #$0f	                AND	#$0F
.ac19		a8		tay		                TAY
.ac1a		b9 5e 85	lda $855e,y	                LDA	num,Y
.ac1d		20 ee ff	jsr $ffee	                JSR	$FFEE
.ac20		a9 20		lda #$20	                LDA	#' '
.ac22		20 ee ff	jsr $ffee	                JSR	$FFEE
.ac25		e8		inx		                INX
.ac26		ec 90 08	cpx $0890	                CPX	numroms
.ac29		d0 e9		bne $ac14	                BNE	pbloopa
.ac2b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.ac2e		20 d6 ad	jsr $add6	                JSR	rlcwrrm
.ac31		a2 05		ldx #$05	                LDX	#$05
.ac33						pbloop5:
.ac33		bd 2a 02	lda $022a,x	                LDA	$22A,X
.ac36		9d a0 08	sta $08a0,x	                STA	tmpvec,X
.ac39		bd ff ad	lda $adff,x	                LDA	rlcvecs,X
.ac3c		9d 2a 02	sta $022a,x	                STA	$22A,X
.ac3f		ca		dex		                DEX
.ac40		10 f1		bpl $ac33	                BPL	pbloop5
.ac42		a9 a8		lda #$a8	                LDA	#$A8
.ac44		a2 00		ldx #$00	                LDX	#$00
.ac46		a0 ff		ldy #$ff	                LDY	#$FF
.ac48		20 f4 ff	jsr $fff4	                JSR	$FFF4
.ac4b		86 75		stx $75		                STX	pbuff_extvec
.ac4d		84 76		sty $76		                STY	pbuff_extvec+1
.ac4f		a0 3f		ldy #$3f	                LDY	#$3F
.ac51		a2 00		ldx #$00	                LDX	#$00
.ac53						pbloop6:
.ac53		bd 05 ae	lda $ae05,x	                LDA	entries,X
.ac56		91 75		sta ($75),y	                STA	(pbuff_extvec),Y
.ac58		e8		inx		                INX
.ac59		c8		iny		                INY
.ac5a		bd 05 ae	lda $ae05,x	                LDA	entries,X
.ac5d		91 75		sta ($75),y	                STA	(pbuff_extvec),Y
.ac5f		e8		inx		                INX
.ac60		c8		iny		                INY
.ac61		a5 f4		lda $f4		                LDA	$F4
.ac63		91 75		sta ($75),y	                STA	(pbuff_extvec),Y
.ac65		c8		iny		                INY
.ac66		e0 06		cpx #$06	                CPX	#$06
.ac68		d0 e9		bne $ac53	                BNE	pbloop6
.ac6a		58		cli		                CLI
.ac6b		60		rts		                RTS
.ac6c						insentry:
.ac6c		48		pha		                PHA
.ac6d		08		php		                PHP
.ac6e		e0 03		cpx #$03	                CPX	#$03
.ac70		d0 23		bne $ac95	                BNE	wrngbuf1
.ac72		28		plp		                PLP
.ac73		20 8b ad	jsr $ad8b	                JSR	storeip
.ac76		20 54 ad	jsr $ad54	                JSR	incip
.ac79		20 bf ad	jsr $adbf	                JSR	pbcomp
.ac7c		f0 0f		beq $ac8d	                BEQ	insfail
.ac7e		ac 9d 08	ldy $089d	                LDY	iprom
.ac81		b9 80 08	lda $0880,y	                LDA	pbufftab,Y
.ac84		a8		tay		                TAY
.ac85		68		pla		                PLA
.ac86		20 91 08	jsr $0891	                JSR	oswrrm
.ac89		a2 03		ldx #$03	                LDX	#$03
.ac8b		18		clc		                CLC
.ac8c		60		rts		                RTS
.ac8d						insfail:
.ac8d		20 a5 ad	jsr $ada5	                JSR	rstip
.ac90		a2 03		ldx #$03	                LDX	#$03
.ac92		68		pla		                PLA
.ac93		38		sec		                SEC
.ac94		60		rts		                RTS
.ac95						wrngbuf1:
.ac95		28		plp		                PLP
.ac96		68		pla		                PLA
.ac97		6c a0 08	jmp ($08a0)	                JMP	(instmpvec)
.ac9a						rementry:
.ac9a		08		php		                PHP
.ac9b		e0 03		cpx #$03	                CPX	#$03
.ac9d		d0 33		bne $acd2	                BNE	wrngbuf2
.ac9f		28		plp		                PLP
.aca0		70 23		bvs $acc5	                BVS	examine
.aca2						remove:
.aca2		20 bf ad	jsr $adbf	                JSR	pbcomp
.aca5		f0 1c		beq $acc3	                BEQ	empty
.aca7		20 58 ad	jsr $ad58	                JSR	incop
.acaa		ad 9e 08	lda $089e	                LDA	opaddr
.acad		85 f6		sta $f6		                STA	$F6
.acaf		ad 9f 08	lda $089f	                LDA	opaddr+1
.acb2		85 f7		sta $f7		                STA	$F7
.acb4		ac a6 08	ldy $08a6	                LDY	oprom
.acb7		b9 80 08	lda $0880,y	                LDA	pbufftab,Y
.acba		a8		tay		                TAY
.acbb		20 b9 ff	jsr $ffb9	                JSR	osrdrm
.acbe		a8		tay		                TAY
.acbf		a2 03		ldx #$03	                LDX	#$03
.acc1		18		clc		                CLC
.acc2		60		rts		                RTS
.acc3						empty:
.acc3		38		sec		                SEC
.acc4		60		rts		                RTS
.acc5						examine:
.acc5		20 90 ad	jsr $ad90	                JSR	storeop
.acc8		20 a2 ac	jsr $aca2	                JSR	remove
.accb		20 aa ad	jsr $adaa	                JSR	rstop
.acce		a2 03		ldx #$03	                LDX	#$03
.acd0		98		tya		                TYA
.acd1		60		rts		                RTS
.acd2						wrngbuf2:
.acd2		28		plp		                PLP
.acd3		6c a2 08	jmp ($08a2)	                JMP	(tmpremvec)
.acd6						wrngbuf3:
.acd6		28		plp		                PLP
.acd7		6c a4 08	jmp ($08a4)	                JMP	(tmpcnpvec)
.acda						cnpentry:
.acda		08		php		                PHP
.acdb		e0 03		cpx #$03	                CPX	#$03
.acdd		d0 f7		bne $acd6	                BNE	wrngbuf3
.acdf		28		plp		                PLP
.ace0		08		php		                PHP
.ace1		70 59		bvs $ad3c	                BVS	purge
.ace3		90 26		bcc $ad0b	                BCC	len
.ace5		20 8b ad	jsr $ad8b	                JSR	storeip
.ace8		a9 00		lda #$00	                LDA	#$00
.acea		8d ac 08	sta $08ac	                STA	pbwrk0
.aced		8d ad 08	sta $08ad	                STA	pbwrk1
.acf0						pbloop9:
.acf0		20 54 ad	jsr $ad54	                JSR	incip
.acf3		20 bf ad	jsr $adbf	                JSR	pbcomp
.acf6		f0 0d		beq $ad05	                BEQ	pbfin1
.acf8		ee ac 08	inc $08ac	                INC	pbwrk0
.acfb		d0 05		bne $ad02	                BNE	pbninc
.acfd		ee ad 08	inc $08ad	                INC	pbwrk1
.ad00		f0 34		beq $ad36	                BEQ	exitFFFF
.ad02						pbninc:
.ad02		4c f0 ac	jmp $acf0	                JMP	pbloop9
.ad05						pbfin1:
.ad05		20 a5 ad	jsr $ada5	                JSR	rstip
.ad08		4c 2e ad	jmp $ad2e	                JMP	exitcount
.ad0b						len:
.ad0b		20 90 ad	jsr $ad90	                JSR	storeop
.ad0e		a9 00		lda #$00	                LDA	#$00
.ad10		8d ac 08	sta $08ac	                STA	pbwrk0
.ad13		8d ad 08	sta $08ad	                STA	pbwrk1
.ad16						pbloop8:
.ad16		20 bf ad	jsr $adbf	                JSR	pbcomp
.ad19		f0 10		beq $ad2b	                BEQ	pbfin2
.ad1b		20 58 ad	jsr $ad58	                JSR	incop
.ad1e		ee ac 08	inc $08ac	                INC	pbwrk0
.ad21		d0 05		bne $ad28	                BNE	pbninc2
.ad23		ee ad 08	inc $08ad	                INC	pbwrk1
.ad26		f0 0e		beq $ad36	                BEQ	exitFFFF
.ad28						pbninc2:
.ad28		4c 16 ad	jmp $ad16	                JMP	pbloop8
.ad2b						pbfin2:
.ad2b		20 aa ad	jsr $adaa	                JSR	rstop
.ad2e						exitcount:
.ad2e		ae ac 08	ldx $08ac	                LDX	pbwrk0
.ad31		ac ad 08	ldy $08ad	                LDY	pbwrk1
.ad34		28		plp		                PLP
.ad35		60		rts		                RTS
.ad36						exitFFFF:
.ad36		a2 ff		ldx #$ff	                LDX	#$FF
.ad38		a0 ff		ldy #$ff	                LDY	#$FF
.ad3a		28		plp		                PLP
.ad3b		60		rts		                RTS
.ad3c						purge:
.ad3c		a9 80		lda #$80	                LDA	#$80
.ad3e		8d 9f 08	sta $089f	                STA	opaddr+1
.ad41		8d 96 08	sta $0896	                STA	ipaddr+1
.ad44		a9 00		lda #$00	                LDA	#$00
.ad46		8d 9e 08	sta $089e	                STA	opaddr
.ad49		8d 95 08	sta $0895	                STA	ipaddr
.ad4c		8d a6 08	sta $08a6	                STA	oprom
.ad4f		8d 9d 08	sta $089d	                STA	iprom
.ad52		28		plp		                PLP
.ad53		60		rts		                RTS
.ad54						incip:
.ad54		a2 00		ldx #$00	                LDX	#$00
.ad56		f0 02		beq $ad5a	                BEQ	pbincp
.ad58						incop:
.ad58		a2 09		ldx #$09	                LDX	#$09
.ad5a						pbincp:
.ad5a		fe 95 08	inc $0895,x	                INC	ipaddr,X
.ad5d		d0 03		bne $ad62	                BNE	pbninc3
.ad5f		fe 96 08	inc $0896,x	                INC	ipaddr+1,X
.ad62						pbninc3:
.ad62		bd 9d 08	lda $089d,x	                LDA	iprom,X
.ad65		a8		tay		                TAY
.ad66		b9 80 08	lda $0880,y	                LDA	pbufftab,Y
.ad69		29 f0		and #$f0	                AND	#$F0
.ad6b		dd 96 08	cmp $0896,x	                CMP	ipaddr+1,X
.ad6e		d0 1a		bne $ad8a	                BNE	pbninc4
.ad70		a9 80		lda #$80	                LDA	#$80
.ad72		9d 96 08	sta $0896,x	                STA	ipaddr+1,X
.ad75		a9 00		lda #$00	                LDA	#$00
.ad77		9d 95 08	sta $0895,x	                STA	ipaddr,X
.ad7a		fe 9d 08	inc $089d,x	                INC	iprom,X
.ad7d		bd 9d 08	lda $089d,x	                LDA	iprom,X
.ad80		cd 90 08	cmp $0890	                CMP	numroms
.ad83		d0 05		bne $ad8a	                BNE	pbninc4
.ad85		a9 00		lda #$00	                LDA	#$00
.ad87		9d 9d 08	sta $089d,x	                STA	iprom,X
.ad8a						pbninc4:
.ad8a		60		rts		                RTS
.ad8b						storeip:
.ad8b		a2 00		ldx #$00	                LDX	#$00
.ad8d		4c 92 ad	jmp $ad92	                JMP	pbstore
.ad90						storeop:
.ad90		a2 09		ldx #$09	                LDX	#$09
.ad92						pbstore:
.ad92		bd 95 08	lda $0895,x	                LDA	ipaddr,X
.ad95		8d a9 08	sta $08a9	                STA	pbtmp
.ad98		bd 96 08	lda $0896,x	                LDA	ipaddr+1,X
.ad9b		8d aa 08	sta $08aa	                STA	pbtmp2
.ad9e		bd 9d 08	lda $089d,x	                LDA	iprom,X
.ada1		8d ab 08	sta $08ab	                STA	pbtmp3
.ada4		60		rts		                RTS
.ada5						rstip:
.ada5		a2 00		ldx #$00	                LDX	#$00
.ada7		4c ac ad	jmp $adac	                JMP	rst
.adaa						rstop:
.adaa		a2 09		ldx #$09	                LDX	#$09
.adac						rst:
.adac		ad a9 08	lda $08a9	                LDA	pbtmp
.adaf		9d 95 08	sta $0895,x	                STA	ipaddr,X
.adb2		ad aa 08	lda $08aa	                LDA	pbtmp2
.adb5		9d 96 08	sta $0896,x	                STA	ipaddr+1,X
.adb8		ad ab 08	lda $08ab	                LDA	pbtmp3
.adbb		9d 9d 08	sta $089d,x	                STA	iprom,X
.adbe		60		rts		                RTS
.adbf						pbcomp:
.adbf		ad 9e 08	lda $089e	                LDA	opaddr
.adc2		cd 95 08	cmp $0895	                CMP	ipaddr
.adc5		d0 0e		bne $add5	                BNE	exitcmp
.adc7		ad 9f 08	lda $089f	                LDA	opaddr+1
.adca		cd 96 08	cmp $0896	                CMP	ipaddr+1
.adcd		d0 06		bne $add5	                BNE	exitcmp
.adcf		ad a6 08	lda $08a6	                LDA	oprom
.add2		cd 9d 08	cmp $089d	                CMP	iprom
.add5						exitcmp:
.add5		60		rts		                RTS
.add6						rlcwrrm:
.add6		a2 1d		ldx #$1d	                LDX	#wrrmend-oswrrm
.add8						rlcwrrmlp:
.add8		bd e2 ad	lda $ade2,x	                LDA	oswrrmx,X
.addb		9d 91 08	sta $0891,x	                STA	oswrrm,X
.adde		ca		dex		                DEX
.addf		10 f7		bpl $add8	                BPL	rlcwrrmlp
.ade1		60		rts		                RTS
.ade2						oswrrmx:
.ade2	0891					oswrrm:
.ade2	0891	8c 30 fe	sty $fe30	                STY	$FE30
.ade5	0894					ipx:
.ade5	0894	8d 00 80	sta $8000	                STA	$8000
=2197						ipaddr = ipx+1
.ade8	0897	a6 f4		ldx $f4		                LDX	$F4
.adea	0899	8e 30 fe	stx $fe30	                STX	$FE30
.aded	089c	60		rts		                RTS
.adee	089d					iprom:
>adee	089d	00				                .byte	$00
.adef	089e					opaddr:
>adef	089e	00 80				                .word	$8000
.adf1	08a0					instmpvec:
.adf1	08a0					tmpvec:
>adf1	08a0	00 00				                .word	$0000
.adf3	08a2					tmpremvec:
>adf3	08a2	00 00				                .word	$0000
.adf5	08a4					tmpcnpvec:
>adf5	08a4	00 00				                .word	$0000
.adf7	08a6					oprom:
>adf7	08a6	00				                .byte	$00
.adf8	08a7					pbtmpy:
>adf8	08a7	00				                .byte	$00
.adf9	08a8					pbtmpx:
>adf9	08a8	00				                .byte	$00
.adfa	08a9					pbtmp:
>adfa	08a9	00				                .byte	$00
.adfb	08aa					pbtmp2:
>adfb	08aa	00				                .byte	$00
.adfc	08ab					pbtmp3:
>adfc	08ab	00				                .byte	$00
.adfd	08ac					pbwrk0:
>adfd	08ac	00				                .byte	$00
.adfe	08ad					pbwrk1:
>adfe	08ad	00				                .byte	$00
.adff	08ae					wrrmend:
.adff						rlcvecs:
>adff		3f ff 42 ff 45 ff		                .byte	$3F,$FF,$42,$FF,$45,$FF
.ae05						entries:
>ae05		6c ac 9a ac da ac		                .word insentry,rementry,cnpentry

;******  Return to file: hackrom.s65


;******  Processing file: lvector.s65

.ae0b						vecnames:
>ae0b		55 53 45 52			                .text	"USER"
>ae0f		c2 52 4b			                .text	$80|"B","RK"
>ae12		c9 52 51 31			                .text	$80|"I","RQ1"
>ae16		c9 52 51 32			                .text	$80|"I","RQ2"
>ae1a		cf 53 43 4c 49			                .text	$80|"O","SCLI"
>ae1f		cf 53 42 59 54 45		                .text	$80|"O","SBYTE"
>ae25		cf 53 57 4f 52 44		                .text	$80|"O","SWORD"
>ae2b		cf 53 57 52 43 48		                .text	$80|"O","SWRCH"
>ae31		cf 53 52 44 43 48		                .text	$80|"O","SRDCH"
>ae37		cf 53 46 49 4c 45		                .text	$80|"O","SFILE"
>ae3d		cf 53 41 52 47 53		                .text	$80|"O","SARGS"
>ae43		cf 53 42 47 45 54		                .text	$80|"O","SBGET"
>ae49		cf 53 42 50 55 54		                .text	$80|"O","SBPUT"
>ae4f		cf 53 47 42 50 42		                .text	$80|"O","SGBPB"
>ae55		cf 53 46 49 4e 44		                .text	$80|"O","SFIND"
>ae5b		c6 53 43 56			                .text	$80|"F","SCV"
>ae5f		c5 56 4e 54 56			                .text	$80|"E","VNTV"
>ae64		d5 50 54 56			                .text	$80|"U","PTV"
>ae68		ce 45 54 56			                .text	$80|"N","ETV"
>ae6c		d6 44 55 56			                .text	$80|"V","DUV"
>ae70		cb 45 59 56			                .text	$80|"K","EYV"
>ae74		c9 4e 53 56			                .text	$80|"I","NSV"
>ae78		d2 45 4d 56			                .text	$80|"R","EMV"
>ae7c		c3 4e 50 56			                .text	$80|"C","NPV"
>ae80		c9 4e 44 31 56			                .text	$80|"I","ND1V"
>ae85		c9 4e 44 32 56			                .text	$80|"I","ND2V"
>ae8a		c9 4e 44 33 56			                .text	$80|"I","ND3V"
>ae8f		80				                .byte	$80
.ae90						lvj0:
.ae90		60		rts		                RTS
.ae91						sppad:
.ae91		88		dey		                DEY
.ae92		f0 fc		beq $ae90	                BEQ	lvj0
.ae94		a9 20		lda #$20	                LDA	#' '
.ae96		20 ee ff	jsr $ffee	                JSR	$FFEE
.ae99		4c 91 ae	jmp $ae91	                JMP	sppad
.ae9c						lvectorspa:
.ae9c		a2 00		ldx #$00	                LDX	#$00
.ae9e		86 70		stx $70		                STX	lvector_lvectmp
.aea0						lvl1:
.aea0		a9 86		lda #$86	                LDA	#$86
.aea2		20 ee ff	jsr $ffee	                JSR	$FFEE
.aea5		a0 06		ldy #$06	                LDY	#$06
.aea7		bd 0b ae	lda $ae0b,x	                LDA	vecnames,X
.aeaa						lvl2:
.aeaa		29 7f		and #$7f	                AND	#$7F
.aeac		20 ee ff	jsr $ffee	                JSR	$FFEE
.aeaf		e8		inx		                INX
.aeb0		bd 0b ae	lda $ae0b,x	                LDA	vecnames,X
.aeb3		30 03		bmi $aeb8	                BMI	lvj1
.aeb5		88		dey		                DEY
.aeb6		d0 f2		bne $aeaa	                BNE	lvl2
.aeb8						lvj1:
.aeb8		8a		txa		                TXA
.aeb9		48		pha		                PHA
.aeba		20 91 ae	jsr $ae91	                JSR	sppad
.aebd		a9 83		lda #$83	                LDA	#$83
.aebf		20 ee ff	jsr $ffee	                JSR	$FFEE
.aec2		a9 32		lda #$32	                LDA	#'2'
.aec4		20 ee ff	jsr $ffee	                JSR	$FFEE
.aec7		a5 70		lda $70		                LDA	lvector_lvectmp
.aec9		20 98 89	jsr $8998	                JSR	wdigit
.aecc		a6 70		ldx $70		                LDX	lvector_lvectmp
.aece		bd 01 02	lda $0201,x	                LDA	$201,X
.aed1		c9 ff		cmp #$ff	                CMP	#$FF
.aed3		d0 4d		bne $af22	                BNE	lvj2
.aed5		bd 00 02	lda $0200,x	                LDA	$200,X
.aed8		c9 52		cmp #$52	                CMP	#$52
.aeda		b0 46		bcs $af22	                BCS	lvj2
.aedc		a8		tay		                TAY
.aedd		a9 82		lda #$82	                LDA	#$82
.aedf		20 ee ff	jsr $ffee	                JSR	$FFEE
.aee2		a9 28		lda #$28	                LDA	#'('
.aee4		20 ee ff	jsr $ffee	                JSR	$FFEE
.aee7		98		tya		                TYA
.aee8		18		clc		                CLC
.aee9		69 9f		adc #$9f	                ADC	#$9F
.aeeb		48		pha		                PHA
.aeec		a9 00		lda #$00	                LDA	#$00
.aeee		69 0d		adc #$0d	                ADC	#$0D
.aef0		aa		tax		                TAX
.aef1		bd 5e 85	lda $855e,x	                LDA	num,X
.aef4		20 ee ff	jsr $ffee	                JSR	$FFEE
.aef7		68		pla		                PLA
.aef8		20 98 89	jsr $8998	                JSR	wdigit
.aefb		a9 29		lda #$29	                LDA	#')'
.aefd		20 ee ff	jsr $ffee	                JSR	$FFEE
.af00		a9 83		lda #$83	                LDA	#$83
.af02		20 ee ff	jsr $ffee	                JSR	$FFEE
.af05		b9 a0 0d	lda $0da0,y	                LDA	$DA0,Y
.af08		20 98 89	jsr $8998	                JSR	wdigit
.af0b		b9 9f 0d	lda $0d9f,y	                LDA	$D9F,Y
.af0e		20 98 89	jsr $8998	                JSR	wdigit
.af11		a9 84		lda #$84	                LDA	#$84
.af13		20 ee ff	jsr $ffee	                JSR	$FFEE
.af16		be a1 0d	ldx $0da1,y	                LDX	$DA1,Y
.af19		bd 5e 85	lda $855e,x	                LDA	num,X
.af1c		20 ee ff	jsr $ffee	                JSR	$FFEE
.af1f		4c 3a af	jmp $af3a	                JMP	lvj3
.af22						lvj2:
.af22		a9 85		lda #$85	                LDA	#$85
.af24		20 ee ff	jsr $ffee	                JSR	$FFEE
.af27		a0 07		ldy #$07	                LDY	#$07
.af29		20 91 ae	jsr $ae91	                JSR	sppad
.af2c		a6 70		ldx $70		                LDX	lvector_lvectmp
.af2e		bd 01 02	lda $0201,x	                LDA	$201,X
.af31		20 98 89	jsr $8998	                JSR	wdigit
.af34		bd 00 02	lda $0200,x	                LDA	$200,X
.af37		20 98 89	jsr $8998	                JSR	wdigit
.af3a						lvj3:
.af3a		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.af3d		68		pla		                PLA
.af3e		aa		tax		                TAX
.af3f		a5 70		lda $70		                LDA	lvector_lvectmp
.af41		c9 34		cmp #$34	                CMP	#$34
.af43		b0 07		bcs $af4c	                BCS	lvl9
.af45		69 02		adc #$02	                ADC	#$02
.af47		85 70		sta $70		                STA	lvector_lvectmp
.af49		4c a0 ae	jmp $aea0	                JMP	lvl1
.af4c						lvl9:
.af4c		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: keycoms.s65

.af4d						keylistpa:
.af4d		20 e6 86	jsr $86e6	                JSR	rdnum
.af50		d0 11		bne $af63	                BNE	kdefaults
.af52						keylp4:
.af52		b0 0e		bcs $af62	                BCS	end
.af54		a6 84		ldx $84		                LDX	clibuf
.af56		98		tya		                TYA
.af57		48		pha		                PHA
.af58		20 6e af	jsr $af6e	                JSR	listkey
.af5b		68		pla		                PLA
.af5c		98		tya		                TYA
.af5d		20 e6 86	jsr $86e6	                JSR	rdnum
.af60		d0 f0		bne $af52	                BNE	keylp4
.af62						end:
.af62		60		rts		                RTS
.af63						kdefaults:
.af63		a2 00		ldx #$00	                LDX	#$00
.af65						klloop2:
.af65		20 6e af	jsr $af6e	                JSR	listkey
.af68		e8		inx		                INX
.af69		e0 10		cpx #$10	                CPX	#16
.af6b		d0 f8		bne $af65	                BNE	klloop2
.af6d		60		rts		                RTS
.af6e						listkey:
.af6e		8a		txa		                TXA
.af6f		48		pha		                PHA
.af70		20 af 89	jsr $89af	                JSR	pcprint
>af73		2a 4b 45 59 20 00		                .text	'*KEY ',0
.af79		68		pla		                PLA
.af7a		48		pha		                PHA
.af7b		aa		tax		                TAX
.af7c		c9 0a		cmp #$0a	                CMP	#10
.af7e		90 0a		bcc $af8a	                BCC	klsingdigit
.af80		48		pha		                PHA
.af81		a9 31		lda #$31	                LDA	#'1'
.af83		20 ee ff	jsr $ffee	                JSR	$FFEE
.af86		68		pla		                PLA
.af87		38		sec		                SEC
.af88		e9 0a		sbc #$0a	                SBC	#10
.af8a						klsingdigit:
.af8a		18		clc		                CLC
.af8b		69 30		adc #$30	                ADC	#$30
.af8d		a0 02		ldy #$02	                LDY	#$02
.af8f						klloop0:
.af8f		20 ee ff	jsr $ffee	                JSR	$FFEE
.af92		b9 f0 af	lda $aff0,y	                LDA	kltxt0-1,Y
.af95		88		dey		                DEY
.af96		10 f7		bpl $af8f	                BPL	klloop0
.af98		84 70		sty $70		                STY	keycoms_kltmp
.af9a		a0 10		ldy #$10	                LDY	#$10
.af9c						klloop:
.af9c		38		sec		                SEC
.af9d		b9 00 0b	lda $0b00,y	                LDA	$B00,Y
.afa0		fd 00 0b	sbc $0b00,x	                SBC	$B00,X
.afa3		f0 08		beq $afad	                BEQ	kljmp1
.afa5		90 06		bcc $afad	                BCC	kljmp1
.afa7		c5 70		cmp $70		                CMP	keycoms_kltmp
.afa9		b0 02		bcs $afad	                BCS	kljmp1
.afab		85 70		sta $70		                STA	keycoms_kltmp
.afad						kljmp1:
.afad		88		dey		                DEY
.afae		10 ec		bpl $af9c	                BPL	klloop
.afb0		e6 70		inc $70		                INC	keycoms_kltmp
.afb2		f0 34		beq $afe8	                BEQ	kljmp3
.afb4		bc 00 0b	ldy $0b00,x	                LDY	$B00,X
.afb7						klloop3:
.afb7		c6 70		dec $70		                DEC	keycoms_kltmp
.afb9		f0 2d		beq $afe8	                BEQ	kljmp3
.afbb		b9 01 0b	lda $0b01,y	                LDA	$B01,Y
.afbe		10 0e		bpl $afce	                BPL	klnothi
.afc0		48		pha		                PHA
.afc1		a9 7c		lda #$7c	                LDA	#'|'
.afc3		20 ee ff	jsr $ffee	                JSR	$FFEE
.afc6		a9 21		lda #$21	                LDA	#'!'
.afc8		20 ee ff	jsr $ffee	                JSR	$FFEE
.afcb		68		pla		                PLA
.afcc		29 7f		and #$7f	                AND	#$7F
.afce						klnothi:
.afce		c9 20		cmp #$20	                CMP	#' '
.afd0		b0 09		bcs $afdb	                BCS	klnotcntrl
.afd2		48		pha		                PHA
.afd3		a9 7c		lda #$7c	                LDA	#'|'
.afd5		20 ee ff	jsr $ffee	                JSR	$FFEE
.afd8		68		pla		                PLA
.afd9		09 40		ora #$40	                ORA	#$40
.afdb						klnotcntrl:
.afdb		c9 22		cmp #$22	                CMP	#'"'
.afdd		d0 03		bne $afe2	                BNE	klnotquotes
.afdf		20 ee ff	jsr $ffee	                JSR	$FFEE
.afe2						klnotquotes:
.afe2		20 ee ff	jsr $ffee	                JSR	$FFEE
.afe5		c8		iny		                INY
.afe6		d0 cf		bne $afb7	                BNE	klloop3
.afe8						kljmp3:
.afe8		20 af 89	jsr $89af	                JSR	pcprint
>afeb		22 0d 00			                .text	'"',13,0
.afee		68		pla		                PLA
.afef		aa		tax		                TAX
.aff0		60		rts		                RTS
.aff1						kltxt0:
>aff1		22 20				                .text	'" '
.aff3						keyloadpa:
.aff3		20 a1 8a	jsr $8aa1	                JSR	keycom
.aff6		a9 0b		lda #$0b	                LDA	#$0B
.aff8		8d f1 02	sta $02f1	                STA	osfileb+3
.affb		a9 ff		lda #$ff	                LDA	#$FF
.affd		4c 82 8a	jmp $8a82	                JMP	doosfile
.b000						keysavepa:
.b000		20 a1 8a	jsr $8aa1	                JSR	keycom
.b003		a9 0b		lda #$0b	                LDA	#$0B
.b005		aa		tax		                TAX
.b006		a0 0c		ldy #$0c	                LDY	#$0C
.b008		20 89 8a	jsr $8a89	                JSR	break
.b00b		4c 82 8a	jmp $8a82	                JMP	doosfile

;******  Return to file: hackrom.s65


;******  Processing file: recover.s65

.b00e						recoverpa:
.b00e		a5 18		lda $18		                LDA	$18
.b010		85 71		sta $71		                STA	recover_basptr+1
.b012		a9 01		lda #$01	                LDA	#1
.b014		85 70		sta $70		                STA	recover_basptr
.b016						reclp1:
.b016		a0 00		ldy #$00	                LDY	#0
.b018		b1 70		lda ($70),y	                LDA	(recover_basptr),Y
.b01a		30 20		bmi $b03c	                BMI	endprog
.b01c		c8		iny		                INY
.b01d		c8		iny		                INY
.b01e		b1 70		lda ($70),y	                LDA	(recover_basptr),Y
.b020		a8		tay		                TAY
.b021		88		dey		                DEY
.b022		b1 70		lda ($70),y	                LDA	(recover_basptr),Y
.b024		aa		tax		                TAX
.b025		c8		iny		                INY
.b026		98		tya		                TYA
.b027		e0 0d		cpx #$0d	                CPX	#$0D
.b029		f0 05		beq $b030	                BEQ	noproblem
.b02b		20 3d b0	jsr $b03d	                JSR	cure
.b02e		b0 0c		bcs $b03c	                BCS	endprog
.b030						noproblem:
.b030		18		clc		                CLC
.b031		65 70		adc $70		                ADC	recover_basptr
.b033		85 70		sta $70		                STA	recover_basptr
.b035		90 02		bcc $b039	                BCC	nobasinc
.b037		e6 71		inc $71		                INC	recover_basptr+1
.b039						nobasinc:
.b039		4c 16 b0	jmp $b016	                JMP	reclp1
.b03c						endprog:
.b03c		60		rts		                RTS
.b03d						cure:
.b03d		a0 02		ldy #$02	                LDY	#2
.b03f						reclp2:
.b03f		b1 70		lda ($70),y	                LDA	(recover_basptr),Y
.b041		c9 0d		cmp #$0d	                CMP	#$0D
.b043		f0 0b		beq $b050	                BEQ	found0D
.b045		c8		iny		                INY
.b046		d0 f7		bne $b03f	                BNE	reclp2
.b048		a0 00		ldy #$00	                LDY	#0
.b04a		a9 ff		lda #$ff	                LDA	#$FF
.b04c		91 70		sta ($70),y	                STA	(recover_basptr),Y
.b04e		38		sec		                SEC
.b04f		60		rts		                RTS
.b050						found0D:
.b050		c8		iny		                INY
.b051		98		tya		                TYA
.b052		a0 02		ldy #$02	                LDY	#2
.b054		91 70		sta ($70),y	                STA	(recover_basptr),Y
.b056		18		clc		                CLC
.b057		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: echo.s65

.b058						echopa:
.b058		20 c9 87	jsr $87c9	                JSR	wipeclib
.b05b						echolp0:
.b05b		20 e6 86	jsr $86e6	                JSR	rdnum
.b05e		d0 06		bne $b066	                BNE	echover
.b060		20 91 b0	jsr $b091	                JSR	wrnum
.b063		4c 5b b0	jmp $b05b	                JMP	echolp0
.b066						echover:
.b066		c9 3b		cmp #$3b	                CMP	#';'
.b068		d0 26		bne $b090	                BNE	exitecho
.b06a						echolp2:
.b06a		20 80 86	jsr $8680	                JSR	rdstr
.b06d		d0 06		bne $b075	                BNE	echover2
.b06f		20 9f b0	jsr $b09f	                JSR	wrstr
.b072		4c 6a b0	jmp $b06a	                JMP	echolp2
.b075						echover2:
.b075		c9 3b		cmp #$3b	                CMP	#';'
.b077		d0 17		bne $b090	                BNE	exitecho
.b079						echover3:
.b079		20 df 86	jsr $86df	                JSR	rdstrnum
.b07c		d0 12		bne $b090	                BNE	exitecho
.b07e		90 02		bcc $b082	                BCC	echonum
.b080		b0 06		bcs $b088	                BCS	echostr
.b082						echonum:
.b082		20 91 b0	jsr $b091	                JSR	wrnum
.b085		4c 79 b0	jmp $b079	                JMP	echover3
.b088						echostr:
.b088		20 9f b0	jsr $b09f	                JSR	wrstr
.b08b		a4 70		ldy $70		                LDY	common_newy
.b08d		4c 79 b0	jmp $b079	                JMP	echover3
.b090						exitecho:
.b090		60		rts		                RTS
.b091						wrnum:
.b091		a2 03		ldx #$03	                LDX	#3
.b093						echolp1:
.b093		b5 84		lda $84,x	                LDA	clibuf,X
.b095		20 98 89	jsr $8998	                JSR	wdigit
.b098		ca		dex		                DEX
.b099		10 f8		bpl $b093	                BPL	echolp1
.b09b		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.b09e		60		rts		                RTS
.b09f						wrstr:
.b09f		e0 00		cpx #$00	                CPX	#0
.b0a1		f0 09		beq $b0ac	                BEQ	exitwrstr
.b0a3						echolp3:
.b0a3		b1 f2		lda ($f2),y	                LDA	($F2),Y
.b0a5		20 ee ff	jsr $ffee	                JSR	$FFEE
.b0a8		c8		iny		                INY
.b0a9		ca		dex		                DEX
.b0aa		d0 f7		bne $b0a3	                BNE	echolp3
.b0ac						exitwrstr:
.b0ac		20 e7 ff	jsr $ffe7	                JSR	$FFE7
.b0af		a4 70		ldy $70		                LDY	common_newy
.b0b1		a2 00		ldx #$00	                LDX	#0
.b0b3		60		rts		                RTS

;******  Return to file: hackrom.s65


;******  Processing file: mem_access.s65

.b0b4						relocstart:
.b0b4	0100					mem_access_thunk:
.b0b4	0100					go:
.b0b4	0100	4c 00 01	jmp $0100	                jmp *&$ff00
=257						thunk_lsb = *-2
.b0b7	0103					rdposx:
.b0b7	0103	8d 30 fe	sta $fe30	                sta $fe30
.b0ba	0106	b1 7c		lda ($7c),y	                lda (poslo),Y
.b0bc	0108					finish:
.b0bc	0108	a6 f4		ldx $f4		                ldx $f4
.b0be	010a	8e 30 fe	stx $fe30	                stx $fe30
.b0c1	010d	a2 ff		ldx #$ff	                ldx #$ff
=270						original_x = *-1
.b0c3	010f	28		plp		                plp
.b0c4	0110	60		rts		                rts
.b0c5	0111					rdtmpposx:
.b0c5	0111	8d 30 fe	sta $fe30	                sta $fe30
.b0c8	0114	b1 7e		lda ($7e),y	                lda (tmpposlo),Y
.b0ca	0116	4c 08 01	jmp $0108	                jmp finish
.b0cd	0119					wrposx:
.b0cd	0119	8d 30 fe	sta $fe30	                sta $fe30
.b0d0	011c	a9 ff		lda #$ff	                lda #$ff
=285						value = * -1
.b0d2	011e	91 7c		sta ($7c),y	                sta (poslo),Y
.b0d4	0120	4c 08 01	jmp $0108	                jmp finish
.b0d7	0123					tube_mask:
>b0d7	0123	00				                .byte 0
.b0d8	0124					end:
.b0d8						relocend:
.b0d8						rdposx:
.b0d8		a9 03		lda #$03	                lda #<mem_access_thunk.rdposx
.b0da		20 2d b1	jsr $b12d	                jsr call_mem_access_thunk
.b0dd		b0 01		bcs $b0e0	                bcs tube
.b0df		60		rts		                rts
.b0e0						tube:
.b0e0		a2 7c		ldx #$7c	                ldx #poslo
.b0e2		4c ef b0	jmp $b0ef	                jmp read_tube
.b0e5						rdtmpposx:
.b0e5		a9 11		lda #$11	                lda #<mem_access_thunk.rdtmpposx
.b0e7		20 2d b1	jsr $b12d	                jsr call_mem_access_thunk
.b0ea		b0 01		bcs $b0ed	                bcs tube
.b0ec		60		rts		                rts
.b0ed						tube:
.b0ed		a2 7e		ldx #$7e	                ldx #tmpposlo
.b0ef						read_tube:
.b0ef		98		tya		                tya
.b0f0		48		pha		                pha
.b0f1		18		clc		                clc
.b0f2		98		tya		                tya
.b0f3		75 00		adc $00,x	                adc 0,x
.b0f5		48		pha		                pha
.b0f6		b5 01		lda $01,x	                lda 1,x
.b0f8		69 00		adc #$00	                adc #0
.b0fa		a8		tay		                tay
.b0fb		68		pla		                pla
.b0fc		aa		tax		                tax
.b0fd		20 85 b1	jsr $b185	                jsr read_parasite
.b100		aa		tax		                tax
.b101		68		pla		                pla
.b102		a8		tay		                tay
.b103		8a		txa		                txa
.b104		ae 0e 01	ldx $010e	                ldx mem_access_thunk.original_x
.b107		60		rts		                rts
.b108						wrposx:
.b108		8d 1d 01	sta $011d	                sta mem_access_thunk.wrposx.value
.b10b		a9 19		lda #$19	                lda #<mem_access_thunk.wrposx
.b10d		20 2d b1	jsr $b12d	                jsr call_mem_access_thunk
.b110		90 1a		bcc $b12c	                bcc done
.b112						tube:
.b112		98		tya		                tya
.b113		48		pha		                pha
.b114		18		clc		                clc
.b115		98		tya		                tya
.b116		65 7c		adc $7c		                adc poslo+0
.b118		aa		tax		                tax
.b119		a5 7d		lda $7d		                lda poslo+1
.b11b		69 00		adc #$00	                adc #0
.b11d		a8		tay		                tay
.b11e		ad 1d 01	lda $011d	                lda mem_access_thunk.wrposx.value
.b121		20 b6 b1	jsr $b1b6	                jsr write_parasite
.b124		68		pla		                pla
.b125		a8		tay		                tay
.b126		ae 0e 01	ldx $010e	                ldx mem_access_thunk.original_x
.b129		ad 1d 01	lda $011d	                lda mem_access_thunk.wrposx.value
.b12c						done:
.b12c		60		rts		                rts
.b12d						call_mem_access_thunk:
.b12d		8d 01 01	sta $0101	                sta mem_access_thunk.thunk_lsb
.b130		8e 0e 01	stx $010e	                stx mem_access_thunk.original_x
.b133		a5 79		lda $79		                lda romid
.b135		2c 23 01	bit $0123	                bit mem_access_thunk.tube_mask
.b138		d0 08		bne $b142	                bne tube
.b13a		29 0f		and #$0f	                and #romid_rom_mask
.b13c		18		clc		                clc
.b13d		08		php		                php
.b13e		78		sei		                sei
.b13f		4c 00 01	jmp $0100	                jmp mem_access_thunk
.b142						tube:
.b142		38		sec		                sec
.b143		60		rts		                rts
.b144						tube_read_delay:
.b144		20 4d b1	jsr $b14d	                jsr done        ;+12 = 18
.b147		20 4d b1	jsr $b14d	                jsr done        ;+12 = 30
.b14a		20 4d b1	jsr $b14d	                jsr done        ;+12 = 42
.b14d						done:
.b14d		60		rts		                rts             ;+6 = 48
.b14e						claim_tube:
.b14e		a9 d9		lda #$d9	                lda #$c0+TUBE_CLAIM_ID
.b150		20 06 04	jsr $0406	                jsr $406
.b153		90 f9		bcc $b14e	                bcc claim_tube
.b155		60		rts		                rts
.b156						release_tube:
.b156		a9 99		lda #$99	                lda #$80+TUBE_CLAIM_ID
.b158		4c 06 04	jmp $0406	                jmp $406
.b15b						reloc:
.b15b		a2 24		ldx #$24	                LDX	#relocend-relocstart
.b15d						copyrdwr:
.b15d		bd b4 b0	lda $b0b4,x	                LDA	relocstart,X
.b160		9d 00 01	sta $0100,x	                STA	$100,X
.b163		ca		dex		                DEX
.b164		10 f7		bpl $b15d	                BPL	copyrdwr
.b166		20 6f b1	jsr $b16f	                jsr get_tube_flag
.b169		29 40		and #$40	                and #romid_tube_mask
.b16b		8d 23 01	sta $0123	                sta mem_access_thunk.tube_mask
.b16e		60		rts		                RTS
.b16f						get_tube_flag:
.b16f		8a		txa		                txa
.b170		48		pha		                pha
.b171		98		tya		                tya
.b172		48		pha		                pha
.b173		a9 ea		lda #$ea	                lda #234
.b175		20 a9 8a	jsr $8aa9	                jsr osbyte_x0_y255
.b178		e0 ff		cpx #$ff	                cpx #$ff        ;C set if Tube present
.b17a		68		pla		                pla
.b17b		a8		tay		                tay
.b17c		68		pla		                pla
.b17d		aa		tax		                tax
.b17e		a9 00		lda #$00	                lda #0
.b180		e9 00		sbc #$00	                sbc #0
.b182		49 ff		eor #$ff	                eor #$ff
.b184		60		rts		                rts
.b185						read_parasite:
.b185		c0 fe		cpy #$fe	                cpy #$fe
.b187		d0 07		bne $b190	                bne good_address
.b189		e0 f8		cpx #$f8	                cpx #$f8
.b18b		90 03		bcc $b190	                bcc good_address
.b18d						bad_address:
.b18d		a9 ff		lda #$ff	                lda #$ff
.b18f		60		rts		                rts
.b190						good_address:
.b190		a9 00		lda #$00	                lda #0
.b192		48		pha		                pha
.b193		48		pha		                pha
.b194		98		tya		                tya
.b195		48		pha		                pha
.b196		8a		txa		                txa
.b197		48		pha		                pha
.b198		20 4e b1	jsr $b14e	                jsr claim_tube
.b19b		ba		tsx		                tsx
.b19c		e8		inx		                inx
.b19d		a0 01		ldy #$01	                ldy #1
.b19f		a9 00		lda #$00	                lda #0          ;multi byte, parasite->host
.b1a1		20 06 04	jsr $0406	                jsr $406
.b1a4		20 44 b1	jsr $b144	                jsr tube_read_delay
.b1a7		ad e5 fe	lda $fee5	                lda $fee5
.b1aa		48		pha		                pha
.b1ab		20 56 b1	jsr $b156	                jsr release_tube
.b1ae		68		pla		                pla
.b1af		ba		tsx		                tsx
.b1b0		e8		inx		                inx
.b1b1		e8		inx		                inx
.b1b2		e8		inx		                inx
.b1b3		e8		inx		                inx
.b1b4		9a		txs		                txs
.b1b5		60		rts		                rts
.b1b6						write_parasite:
.b1b6		c0 fe		cpy #$fe	                cpy #$fe
.b1b8		d0 04		bne $b1be	                bne good_address
.b1ba		e0 f8		cpx #$f8	                cpx #$f8
.b1bc		b0 22		bcs $b1e0	                bcs done
.b1be						good_address:
.b1be		48		pha		                pha             ;save byte to write
.b1bf		a9 00		lda #$00	                lda #0
.b1c1		48		pha		                pha
.b1c2		48		pha		                pha
.b1c3		98		tya		                tya
.b1c4		48		pha		                pha
.b1c5		8a		txa		                txa
.b1c6		48		pha		                pha
.b1c7		20 4e b1	jsr $b14e	                jsr claim_tube
.b1ca		ba		tsx		                tsx
.b1cb		e8		inx		                inx
.b1cc		a0 01		ldy #$01	                ldy #1
.b1ce		a9 01		lda #$01	                lda #1          ;multi byte, host->parasite
.b1d0		20 06 04	jsr $0406	                jsr $406
.b1d3		ba		tsx		                tsx
.b1d4		e8		inx		                inx
.b1d5		e8		inx		                inx
.b1d6		e8		inx		                inx
.b1d7		e8		inx		                inx
.b1d8		9a		txs		                txs
.b1d9		68		pla		                pla             ;get byte to write
.b1da		8d e5 fe	sta $fee5	                sta $fee5
.b1dd		20 56 b1	jsr $b156	                jsr release_tube
.b1e0						done:
.b1e0		60		rts		                rts
.b1e1						is_BASIC:
.b1e1		48		pha		                pha
.b1e2		8a		txa		                txa
.b1e3		48		pha		                pha
.b1e4		98		tya		                tya
.b1e5		48		pha		                pha
.b1e6		a5 74		lda $74		                lda tmp
.b1e8		48		pha		                pha
.b1e9		a9 bb		lda #$bb	                lda #187        ;read BASIC ROM slot
.b1eb		20 a9 8a	jsr $8aa9	                jsr osbyte_x0_y255
.b1ee		86 74		stx $74		                stx tmp
.b1f0		a9 fc		lda #$fc	                lda #252        ;read current language ROM
.b1f2		20 a9 8a	jsr $8aa9	                jsr osbyte_x0_y255
.b1f5		e4 74		cpx $74		                cpx tmp
.b1f7		18		clc		                clc
.b1f8		f0 01		beq $b1fb	                beq +
.b1fa		38		sec		                sec
.b1fb						+
.b1fb		68		pla		                pla
.b1fc		85 74		sta $74		                sta tmp
.b1fe		68		pla		                pla
.b1ff		a8		tay		                tay
.b200		68		pla		                pla
.b201		aa		tax		                tax
.b202		68		pla		                pla
.b203		60		rts		                rts
.b204						read_BASIC_zp:
.b204						get_default_romid:
.b204		20 6f b1	jsr $b16f	                jsr get_tube_flag
.b207		d0 03		bne $b20c	                bne tube
.b209		a5 f4		lda $f4		                lda $f4
.b20b		60		rts		                rts
.b20c						tube:
.b20c		a9 40		lda #$40	                lda #romid_tube_mask
.b20e		60		rts		                rts
.b20f						get_PAGE_MSB:
.b20f		20 6f b1	jsr $b16f	                jsr get_tube_flag
.b212		20 e1 b1	jsr $b1e1	                jsr is_BASIC
.b215		90 1c		bcc $b233	                bcc basic
.b217						not_basic:
.b217		c9 00		cmp #$00	                cmp #0
.b219		d0 15		bne $b230	                bne parasite_not_basic
.b21b						host_not_basic:
.b21b		48		pha		                pha
.b21c		8a		txa		                txa
.b21d		48		pha		                pha
.b21e		98		tya		                tya
.b21f		48		pha		                pha
.b220		a9 83		lda #$83	                lda #131
.b222		20 f4 ff	jsr $fff4	                jsr osbyte
.b225		ba		tsx		                tsx             ;+1=y +2=x +3=a
.b226		98		tya		                tya
.b227		9d 03 01	sta $0103,x	                sta $103,x
.b22a		68		pla		                pla
.b22b		a8		tay		                tay
.b22c		68		pla		                pla
.b22d		aa		tax		                tax
.b22e		68		pla		                pla
.b22f		60		rts		                rts
.b230						parasite_not_basic:
.b230		a9 08		lda #$08	                lda #$08
.b232		60		rts		                rts
.b233						basic:
.b233		c9 00		cmp #$00	                cmp #0
.b235		d0 03		bne $b23a	                bne parasite_basic
.b237						host_basic:
.b237		a5 18		lda $18		                lda $18
.b239		60		rts		                rts
.b23a						parasite_basic:
.b23a		48		pha		                pha
.b23b		8a		txa		                txa
.b23c		48		pha		                pha
.b23d		98		tya		                tya
.b23e		48		pha		                pha
.b23f		a0 00		ldy #$00	                ldy #$00
.b241		a2 18		ldx #$18	                ldx #$18
.b243		20 85 b1	jsr $b185	                jsr read_parasite
.b246		ba		tsx		                tsx             ;+1=y +2=x +3=a
.b247		9d 03 01	sta $0103,x	                sta $103,x
.b24a		68		pla		                pla
.b24b		a8		tay		                tay
.b24c		68		pla		                pla
.b24d		aa		tax		                tax
.b24e		68		pla		                pla
.b24f		60		rts		                rts

;******  Return to file: hackrom.s65


;******  End of listing

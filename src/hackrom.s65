;-------------------------------------------------------------------------
; 
; X_ROM_HEAD must be true, and X_HACK_HEAD must be false. These
; defines will go away in the long run.
                
X_ROM_HEAD = true
X_HACK_HEAD = false

;-------------------------------------------------------------------------
;
; Select individual commands.

X_BASE = false
X_BREAK = false
X_CLOSE = true
X_CONCAT = false
X_DEDIT = true
X_DES = false
X_DFILL = false
X_DLOAD = true
X_DMAP = false
X_DRUN = true
X_ECHO = true
X_EDITID = false
X_FBACKUP = false
X_FCMP = false
X_FCOPY = false
X_FCRC = false
X_FDELETE = false
X_FDIS = false
X_FORMAT = true
X_GAPS = false
X_HBREAK = false
X_IDEDIT = false
X_KEYLIST = true
X_KEYLOAD = true
X_KEYSAVE = true
X_LOADIDS = true
X_LVECTORS = true
X_MCMP = true
X_MCOPY = true
X_MCRC = false
X_MDIS = true
X_MEM = true
X_MFILL = true
X_MSEARCH = true
X_MSWAP = true
X_PBUFF = true
X_PENABLE = false
X_PIDS = true
X_RECOVER = true
X_RFSMAKE = false
X_RINFO = true
X_RLIST = true
X_RLOAD = true
X_ROFF = true
X_RON = true
X_RSAVE = true
X_SECTLOAD = false
X_SECTSAVE = false
X_SEND = true
X_SPOOLDIS = false
X_SRLOAD = false
X_SRREAD = false
X_SRSAVE = false
X_SRWRITE = false
X_TOUCH = true
X_VERIFY = true

;-------------------------------------------------------------------------
; 
; Other definitions.
; 
WATFORD	= false
ACORN	= true

; What our Field separator is for
; MFILL, MSEARCH and DFILL
IFS	=	";"
VERSION	=	"1.19"
DFS	=	WATFORD

TUBE_CLAIM_ID = 25

;-------------------------------------------------------------------------
;
; OS routines.
; 
oswrch = $ffee
osnewl = $ffe7
osrdrm = $FFB9
gsinit = $FFC2
gsread = $FFC5
osfile = $FFDD
osbyte=$fff4

;-------------------------------------------------------------------------
;
; Romid bits.
;

romid_rom_mask  = %00001111     ;ROM slot index
romid_tube_mask = %01000000     ;bit 6 - set if Tube parasite RAM
                                ;(other bits are then ignored)
                
;-------------------------------------------------------------------------
;
; Zero page allocation.
;
; Where it's obvious that something is routine- or file-specific, I've
; put it in the appropriate section for that file, and given its name
; a suitable prefix. But there are some stragglers, and I've just let
; them live here with their original names.
;

                .dsection bss
* = $70

; random stuff that appears to be fairly unstructured.
                
                .byte ?         ;$70
                .byte ?         ;$71
toggle:
                .byte ?         ;$72
                .byte ?         ;$73
tmp:
mfbuf:
                .byte ?         ;$74
tmp2:
                .byte ?         ;$75
tmp5:
                .byte ?         ;$76
tmp4:
tmpx:
                .byte ?         ;$77
tmpy:
                .byte ?         ;$78
romid:
                .byte ?         ;$79
tmpscrlo:
                .byte ?         ;$7a
tmpscrhi:
                .byte ?         ;$7b
byte:
poslo:
                .byte ?         ;$7c
poshi:
                .byte ?         ;$7d
tmp3:
tmpposlo:
                .byte ?         ;$7e
tmpposhi:
dedpl:
                .byte ?         ;$7f
control:
screenlo:
numlo:
                .byte ?         ;$80
shift:
screenhi:
numhi:
totrk:
                .byte ?         ;$81
fromtrk:
                .byte ?         ;$82
                .byte ?         ;$83
param:
                .byte ?         ;$84
                .byte ?         ;$85
                .byte ?         ;$86
                .byte ?         ;$87
                .byte ?         ;$88
                .byte ?         ;$89
                .byte ?         ;$8a
                .byte ?         ;$8b
                .byte ?         ;$8c
                .byte ?         ;$8d
                .byte ?         ;$8e
                .byte ?         ;$8f

* = $74
membuf:
                .fill 8,?

* = $87
block:
                .fill 8,?

* = $80
oldclibuf:
                .fill 4,?
clibuf:
                .fill 8,?
                
;-------------------------------------------------------------------------
;
; romhead.s65
;
* = $70
                
romhead_xtab:
romhead_comrun:
                .word ?
romhead_mstmpy:
romhead_htmp:
                .byte ?
romhead_helpind:
                .word ?
romhead_helpind2:
                .word ?
                .byte ?
romhead_xtmp:
                .byte ?
romhead_comprint:
                .byte ?
romhead_cpflag:
                .byte ?

;-------------------------------------------------------------------------
;
; discom.s65
;
* = $70
discom_tmpbuf:
                .word ?

;-------------------------------------------------------------------------
;
; common.s65
;
* = $70
common_hdinc:
common_dhinc:
                .fill 4,?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
common_ptrDH:
common_ptrHD:
                .word ?
common_dhbits:
common_hdbits:
                .byte ?

* = $70
common_newy:
                .byte ?
common_endstr:
                .byte ?
                

;-------------------------------------------------------------------------
;
; mem.s65
;
* = $70
mem_tmpop:
                .byte ?
mem_tmpam:
                .byte ?
mem_tmplen:
                .byte ?
mem_display:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
mem_tmpblock:
                .fill 8,?
mem_xpos:
                .byte ?
mem_hmode:
                .byte ?
;-------------------------------------------------------------------------
;
; dedit.s65
;
* = $70
dedit_dtrk:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
dedit_sectsizelo:
                .byte ?
dedit_sectsizehi:
                .byte ?
dedit_resultlo:
                .byte ?
dedit_resulthi:
                .byte ?
dedit_bytelo:
                .byte ?
dedit_bytehi:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
dedit_input:
                .byte ?
dedit_pos:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
dedit_loaded:
                .byte ?
                

;-------------------------------------------------------------------------
;
; discom.s65
;
* = $70
discom_dtrk:
                .byte ?
discom_dlsect:
                .byte ?
discom_dpsect:
                .byte ?
discom_type:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
discom_error:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
discom_deleted:
                .byte ?

;-------------------------------------------------------------------------
;
; lvector.s65
;
* = $70
lvector_lvectmp:
                .byte ?

;-------------------------------------------------------------------------
;
; keycoms.s65
;
* = $70
keycoms_kltmp:
                .byte ?

;-------------------------------------------------------------------------
;
; recover.s65
;
* = $70
recover_basptr:
                .word ?

;-------------------------------------------------------------------------
;
; verify.s65
;
* = $70
verify_vnumsects:
                .byte ?
                .fill 30,?
verify_cr:
                .byte ?

;-------------------------------------------------------------------------
;
; pbuff.s65
;
* = $70
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
pbuff_extvec:
                .word ?

;-------------------------------------------------------------------------
;
; format.s65
;

* = $80

format_finctrk:
                .byte ?
                .byte ?
                .byte ?
format_formstart:
                .byte ?
                
;-------------------------------------------------------------------------
;
; memcom.s65
; 

* = $70
                .fill $b,?
memcom_filltmpy1:
                .byte ?
memcom_filltmpy2:
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
                .byte ?
memcom_mmtmp:
                .byte ?
                
* = membuf

memsrc:
                .word ?
memlen:
                .word ?
memdest:
                .word ?
memsrom:
                .byte ?
memdrom:
                .byte ?


                ; memcoms - *MFILL?
* = mfbuf

mffrom:
                .word ?
mfto:
                .word ?
mfdata:
                .word ?
mfbank:
                .byte ?
mflen:
                .byte ?

                ; memcom - mmove

* = block
mmss:
                .word ?
mmsl:
                .word ?
mmds:
                .word ?
mmsr:
                .byte ?
mmdr:
                .byte ?

                ; memcom - mcmp

* = block
mc1s:
                .word ?
mclen:
                .word ?
mc2s:
                .word ?
mc1r:
                .byte ?
mc2r:
                .byte ?

                ; memcom - mswap
* = block
ms1s:
                .word ?
mslen:
                .word ?
ms2s:
                .word ?
ms1r:
                .byte ?
ms2r:
                .byte ?

                ; memcom - mfill

* = block
mfms:
                .word ?
mfml:
                .word ?
mfd:
                .word ?
mfmr:
                .byte ?
mfdl:
                .byte ?

                ; memcom - msearch

* = block
mSms:
                .word ?
mSml:
                .word ?
mSd:
                .word ?
mSmr:
                .byte ?
mSdl:
                .byte ?

;-------------------------------------------------------------------------
;
; Other
; 
ptab= param+1
                
numzpage = $20
                
;-------------------------------------------------------------------------
;
; Spare OS 1.20 stuff.
;
* = $2ee
osfileb:
                
* = $39f
stacksave:
                .byte ?
comnum:
                .byte ?
pbuffon:
                .byte ?

;-------------------------------------------------------------------------
;
; Printer buffer bits.
;
* = $880
pbufftab:
                .fill 16,?
numroms:
                .byte ?

;-------------------------------------------------------------------------
;
; Other buffers, probably ill-advised...
;
* = $a00
buffer1:
formidblk:
                .fill 128,?
buffer3:
                .fill 128,?

* = $6000
buffer2:


;-------------------------------------------------------------------------
;
; DFS workspace nonsense, definitely ill-advised...
;
                .if	DFS
drive_addr = $10C8
                .else
drive_addr = $1046
                .endif

;-------------------------------------------------------------------------
;
;  Code.

                .dsection code
* = $8000

                .include "romhead.s65"
                .include "common.s65"
                .include "errors.s65"
                .include "mem.s65"
                .include "memcode.s65"
                .include "memcoms.s65"
                .include "memcom.s65"
                .include "discom.s65"
                .include "dedit.s65"
                .include "format.s65"
                .include "ids.s65"
                .include "verify.s65"
                .include "drunlod.s65"
                .include "touch.s65"
                .include "close.s65"
                .include "rsavlod.s65"
                .include "rinfo.s65"
                .include "ronroff.s65"
                .include "rlist.s65"
                .include "send.s65"
                .include "pbuff.s65"
                .include "lvector.s65"
                .include "keycoms.s65"
                .include "recover.s65"
                .include "echo.s65"
                .include "mem_access.s65"                
                